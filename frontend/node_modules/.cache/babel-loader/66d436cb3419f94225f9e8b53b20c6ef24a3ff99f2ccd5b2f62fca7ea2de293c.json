{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"result-container\"\n};\nconst _hoisted_2 = {\n  class: \"bazi-chart\"\n};\nconst _hoisted_3 = {\n  class: \"pillar\"\n};\nconst _hoisted_4 = {\n  class: \"stem\"\n};\nconst _hoisted_5 = {\n  class: \"branch\"\n};\nconst _hoisted_6 = {\n  class: \"pillar\"\n};\nconst _hoisted_7 = {\n  class: \"stem\"\n};\nconst _hoisted_8 = {\n  class: \"branch\"\n};\nconst _hoisted_9 = {\n  class: \"pillar\"\n};\nconst _hoisted_10 = {\n  class: \"stem\"\n};\nconst _hoisted_11 = {\n  class: \"branch\"\n};\nconst _hoisted_12 = {\n  class: \"pillar\"\n};\nconst _hoisted_13 = {\n  class: \"stem\"\n};\nconst _hoisted_14 = {\n  class: \"branch\"\n};\nconst _hoisted_15 = {\n  class: \"five-elements\"\n};\nconst _hoisted_16 = {\n  class: \"element-name\"\n};\nconst _hoisted_17 = {\n  class: \"element-value\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"shen-sha-info\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"da-yun-info\"\n};\nconst _hoisted_20 = {\n  class: \"qi-yun-info\"\n};\nconst _hoisted_21 = {\n  class: \"da-yun-table\"\n};\nconst _hoisted_22 = {\n  class: \"flowing-years\"\n};\nconst _hoisted_23 = {\n  class: \"ai-analysis\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"age-notice\"\n};\nconst _hoisted_25 = {\n  key: 1,\n  class: \"age-notice\"\n};\nconst _hoisted_26 = {\n  key: 2,\n  class: \"age-notice\"\n};\nconst _hoisted_27 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_28 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_29 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_30 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_31 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_32 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_33 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_34 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_35 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_36 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_37 = {\n  class: \"analysis-section\"\n};\nconst _hoisted_38 = {\n  class: \"action-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_van_nav_bar = _resolveComponent(\"van-nav-bar\");\n  const _component_van_grid_item = _resolveComponent(\"van-grid-item\");\n  const _component_van_grid = _resolveComponent(\"van-grid\");\n  const _component_van_cell = _resolveComponent(\"van-cell\");\n  const _component_van_cell_group = _resolveComponent(\"van-cell-group\");\n  const _component_van_step = _resolveComponent(\"van-step\");\n  const _component_van_steps = _resolveComponent(\"van-steps\");\n  const _component_van_tab = _resolveComponent(\"van-tab\");\n  const _component_van_notice_bar = _resolveComponent(\"van-notice-bar\");\n  const _component_van_tabs = _resolveComponent(\"van-tabs\");\n  const _component_van_button = _resolveComponent(\"van-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_van_nav_bar, {\n    title: \"八字分析结果\",\n    \"left-text\": \"返回\",\n    \"left-arrow\": \"\",\n    onClickLeft: $setup.onClickLeft\n  }), _cache[22] || (_cache[22] = _createElementVNode(\"div\", {\n    class: \"result-header\"\n  }, [_createElementVNode(\"h2\", null, \"您的八字命盘分析\"), _createElementVNode(\"p\", null, \"基于您的出生信息，AI为您提供的个性化人生指导\")], -1 /* HOISTED */)), _createVNode(_component_van_tabs, {\n    modelValue: $setup.activeTab,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.activeTab = $event),\n    sticky: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_van_tab, {\n      title: \"命盘信息\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"八字命盘\", -1 /* HOISTED */)), _createVNode(_component_van_grid, {\n        \"column-num\": 4,\n        border: false\n      }, {\n        default: _withCtx(() => [_createVNode(_component_van_grid_item, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.baziData.yearPillar.heavenlyStem), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.baziData.yearPillar.earthlyBranch), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n            class: \"label\"\n          }, \"年柱\", -1 /* HOISTED */))])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_van_grid_item, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.baziData.monthPillar.heavenlyStem), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.baziData.monthPillar.earthlyBranch), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n            class: \"label\"\n          }, \"月柱\", -1 /* HOISTED */))])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_van_grid_item, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($setup.baziData.dayPillar.heavenlyStem), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.baziData.dayPillar.earthlyBranch), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n            class: \"label\"\n          }, \"日柱\", -1 /* HOISTED */))])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_van_grid_item, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString($setup.baziData.hourPillar.heavenlyStem), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString($setup.baziData.hourPillar.earthlyBranch), 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n            class: \"label\"\n          }, \"时柱\", -1 /* HOISTED */))])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"五行分布\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.baziData.fiveElements, (value, element) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          class: \"element\",\n          key: element\n        }, [_createElementVNode(\"div\", _hoisted_16, _toDisplayString($setup.getElementName(element)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_17, _toDisplayString(value), 1 /* TEXT */)]);\n      }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 添加神煞显示 \"), _cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"神煞信息\", -1 /* HOISTED */)), $setup.baziData.shenSha ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createVNode(_component_van_cell_group, {\n        inset: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_van_cell, {\n          title: \"日冲\",\n          value: $setup.baziData.shenSha.dayChong\n        }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_van_cell, {\n          title: \"值神\",\n          value: $setup.baziData.shenSha.zhiShen\n        }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_van_cell, {\n          title: \"彭祖百忌\",\n          value: `${$setup.baziData.shenSha.pengZuGan} ${$setup.baziData.shenSha.pengZuZhi}`\n        }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_van_cell, {\n          title: \"喜神方位\",\n          value: $setup.baziData.shenSha.xiShen\n        }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_van_cell, {\n          title: \"福神方位\",\n          value: $setup.baziData.shenSha.fuShen\n        }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_van_cell, {\n          title: \"财神方位\",\n          value: $setup.baziData.shenSha.caiShen\n        }, null, 8 /* PROPS */, [\"value\"]), _createVNode(_component_van_cell, {\n          title: \"本命神煞\",\n          value: $setup.baziData.shenSha.benMing ? $setup.baziData.shenSha.benMing.join('、') : '无'\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 添加大运显示 \"), _cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"大运信息\", -1 /* HOISTED */)), $setup.baziData.daYun ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"p\", _hoisted_20, \"起运年龄: \" + _toDisplayString($setup.baziData.daYun.startAge) + \"岁，起运年份: \" + _toDisplayString($setup.baziData.daYun.startYear) + \"年\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_van_cell_group, {\n        inset: \"\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.baziData.daYun.daYunList, item => {\n          return _openBlock(), _createBlock(_component_van_cell, {\n            key: item.index,\n            title: `${item.index}. ${item.heavenlyStem}${item.earthlyBranch} (${item.element})`,\n            value: `${item.startYear}-${item.endYear}年`\n          }, null, 8 /* PROPS */, [\"title\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      })])])) : _createCommentVNode(\"v-if\", true), _cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"大运流年\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_van_steps, {\n        direction: \"horizontal\",\n        active: 2\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.baziData.flowingYears.slice(0, 5), (year, index) => {\n          return _openBlock(), _createBlock(_component_van_step, {\n            key: index\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(year.year) + \"年\", 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(year.heavenlyStem) + _toDisplayString(year.earthlyBranch), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */,\n            __: [5]\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      })])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_van_tab, {\n      title: \"AI分析结果\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_23, [$setup.userAge < 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createVNode(_component_van_notice_bar, {\n        color: \"#1989fa\",\n        background: \"#ecf9ff\",\n        \"left-icon\": \"info-o\"\n      }, {\n        default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\" 此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。 \")])),\n        _: 1 /* STABLE */,\n        __: [11]\n      })])) : $setup.userAge < 6 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createVNode(_component_van_notice_bar, {\n        color: \"#1989fa\",\n        background: \"#ecf9ff\",\n        \"left-icon\": \"info-o\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 此分析针对婴幼儿(\" + _toDisplayString($setup.userAge) + \"岁)，重点关注性格特点、天赋才能和健康发展趋势。 \", 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })])) : $setup.userAge < 18 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createVNode(_component_van_notice_bar, {\n        color: \"#1989fa\",\n        background: \"#ecf9ff\",\n        \"left-icon\": \"info-o\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 此分析针对未成年人(\" + _toDisplayString($setup.userAge) + \"岁)，重点关注性格特点、学业发展和健康状况。 \", 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_27, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", null, \"身体健康\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.health), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_28, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", null, \"性格特点\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.personality || $setup.getAnalysisContent('性格特点')), 1 /* TEXT */)]), _createCommentVNode(\" 学业分析（对所有年龄段显示，但侧重点不同） \"), _createElementVNode(\"div\", _hoisted_29, [_cache[14] || (_cache[14] = _createElementVNode(\"h3\", null, \"学业分析\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.education || $setup.getAnalysisContent('学业分析')), 1 /* TEXT */)]), _createCommentVNode(\" 父母情况（所有年龄段都显示） \"), _createElementVNode(\"div\", _hoisted_30, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"父母情况\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.parents || '暂无父母情况分析'), 1 /* TEXT */)]), _createCommentVNode(\" 人际关系（所有年龄段都显示） \"), _createElementVNode(\"div\", _hoisted_31, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"人际关系\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.social || '暂无人际关系分析'), 1 /* TEXT */)]), _createCommentVNode(\" 财运分析（18岁以上显示，或者标注为未来发展） \"), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"h3\", null, _toDisplayString($setup.userAge >= 18 ? '财运分析' : '未来财运发展'), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.wealth), 1 /* TEXT */)]), _createCommentVNode(\" 事业发展（18岁以上显示，或者标注为未来发展） \"), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"h3\", null, _toDisplayString($setup.userAge >= 18 ? '事业发展' : '未来事业发展'), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.career), 1 /* TEXT */)]), _createCommentVNode(\" 婚姻感情（18岁以上显示，或者标注为未来发展） \"), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"h3\", null, _toDisplayString($setup.userAge >= 18 ? '婚姻感情' : '未来感情发展'), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.relationship), 1 /* TEXT */)]), _createCommentVNode(\" 子女情况（18岁以上显示，或者标注为未来发展） \"), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"h3\", null, _toDisplayString($setup.userAge >= 18 ? '子女情况' : '未来子女缘分'), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.children), 1 /* TEXT */)]), _createCommentVNode(\" 近五年运势（所有年龄段都显示） \"), _createElementVNode(\"div\", _hoisted_36, [_cache[17] || (_cache[17] = _createElementVNode(\"h3\", null, \"近五年运势\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.future || $setup.getAnalysisContent('近五年运势') || $setup.aiAnalysis.overall), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_37, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"综合建议\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.aiAnalysis.overall), 1 /* TEXT */)])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_38, [_createVNode(_component_van_button, {\n    type: \"primary\",\n    block: \"\",\n    onClick: $setup.downloadPDF\n  }, {\n    default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\" 下载PDF报告 \")])),\n    _: 1 /* STABLE */,\n    __: [19]\n  }), _createVNode(_component_van_button, {\n    plain: \"\",\n    type: \"primary\",\n    block: \"\",\n    style: {\n      \"margin-top\": \"10px\"\n    },\n    onClick: $setup.shareResult\n  }, {\n    default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\" 分享结果 \")])),\n    _: 1 /* STABLE */,\n    __: [20]\n  }), _createCommentVNode(\" 调试按钮 \"), _createVNode(_component_van_button, {\n    plain: \"\",\n    type: \"warning\",\n    block: \"\",\n    style: {\n      \"margin-top\": \"10px\"\n    },\n    onClick: $setup.reloadBaziData\n  }, {\n    default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\" 重新加载分析数据 \")])),\n    _: 1 /* STABLE */,\n    __: [21]\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_van_nav_bar","title","onClickLeft","$setup","_createElementVNode","_component_van_tabs","modelValue","activeTab","_cache","$event","sticky","default","_withCtx","_component_van_tab","_hoisted_2","_component_van_grid","border","_component_van_grid_item","_hoisted_3","_hoisted_4","_toDisplayString","baziData","yearPillar","heavenlyStem","_hoisted_5","earthlyBranch","_","_hoisted_6","_hoisted_7","monthPillar","_hoisted_8","_hoisted_9","_hoisted_10","dayPillar","_hoisted_11","_hoisted_12","_hoisted_13","hourPillar","_hoisted_14","_hoisted_15","_Fragment","_renderList","fiveElements","value","element","_hoisted_16","getElementName","_hoisted_17","_createCommentVNode","shenSha","_hoisted_18","_component_van_cell_group","inset","_component_van_cell","dayChong","zhiShen","pengZuGan","pengZuZhi","xiShen","fuShen","caiShen","benMing","join","daYun","_hoisted_19","_hoisted_20","startAge","startYear","_hoisted_21","daYunList","item","_createBlock","index","endYear","_hoisted_22","_component_van_steps","direction","active","flowingYears","slice","year","_component_van_step","_createTextVNode","__","_hoisted_23","userAge","_hoisted_24","_component_van_notice_bar","color","background","_hoisted_25","_hoisted_26","_hoisted_27","aiAnalysis","health","_hoisted_28","personality","getAnalysisContent","_hoisted_29","education","_hoisted_30","parents","_hoisted_31","social","_hoisted_32","wealth","_hoisted_33","career","_hoisted_34","relationship","_hoisted_35","children","_hoisted_36","future","overall","_hoisted_37","_hoisted_38","_component_van_button","type","block","onClick","downloadPDF","plain","style","shareResult","reloadBaziData"],"sources":["D:\\Python\\20250522开发八字命理AI指导功能页码\\开发八字命理AI指导功能页码\\frontend\\src\\Result.vue"],"sourcesContent":["<template>\n  <div class=\"result-container\">\n    <van-nav-bar\n      title=\"八字分析结果\"\n      left-text=\"返回\"\n      left-arrow\n      @click-left=\"onClickLeft\"\n    />\n    \n    <div class=\"result-header\">\n      <h2>您的八字命盘分析</h2>\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\n    </div>\n    \n    <van-tabs v-model=\"activeTab\" sticky>\n      <van-tab title=\"命盘信息\">\n        <div class=\"bazi-chart\">\n          <h3>八字命盘</h3>\n          <van-grid :column-num=\"4\" :border=\"false\">\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\n                  <div class=\"label\">年柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\n                  <div class=\"label\">月柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\n                  <div class=\"label\">日柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\n                  <div class=\"label\">时柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n          </van-grid>\n          \n          <h3>五行分布</h3>\n          <div class=\"five-elements\">\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">{{ value }}</div>\n            </div>\n          </div>\n          \n          <!-- 添加神煞显示 -->\n          <h3>神煞信息</h3>\n          <div class=\"shen-sha-info\" v-if=\"baziData.shenSha\">\n            <van-cell-group inset>\n              <van-cell title=\"日冲\" :value=\"baziData.shenSha.dayChong\" />\n              <van-cell title=\"值神\" :value=\"baziData.shenSha.zhiShen\" />\n              <van-cell title=\"彭祖百忌\" :value=\"`${baziData.shenSha.pengZuGan} ${baziData.shenSha.pengZuZhi}`\" />\n              <van-cell title=\"喜神方位\" :value=\"baziData.shenSha.xiShen\" />\n              <van-cell title=\"福神方位\" :value=\"baziData.shenSha.fuShen\" />\n              <van-cell title=\"财神方位\" :value=\"baziData.shenSha.caiShen\" />\n              <van-cell title=\"本命神煞\" :value=\"baziData.shenSha.benMing ? baziData.shenSha.benMing.join('、') : '无'\" />\n            </van-cell-group>\n          </div>\n          \n          <!-- 添加大运显示 -->\n          <h3>大运信息</h3>\n          <div class=\"da-yun-info\" v-if=\"baziData.daYun\">\n            <p class=\"qi-yun-info\">起运年龄: {{ baziData.daYun.startAge }}岁，起运年份: {{ baziData.daYun.startYear }}年</p>\n            \n            <div class=\"da-yun-table\">\n              <van-cell-group inset>\n                <van-cell v-for=\"item in baziData.daYun.daYunList\" :key=\"item.index\"\n                  :title=\"`${item.index}. ${item.heavenlyStem}${item.earthlyBranch} (${item.element})`\"\n                  :value=\"`${item.startYear}-${item.endYear}年`\"\n                />\n              </van-cell-group>\n            </div>\n          </div>\n          \n          <h3>大运流年</h3>\n          <div class=\"flowing-years\">\n            <van-steps direction=\"horizontal\" :active=\"2\">\n              <van-step v-for=\"(year, index) in baziData.flowingYears.slice(0, 5)\" :key=\"index\">\n                {{ year.year }}年<br>\n                {{ year.heavenlyStem }}{{ year.earthlyBranch }}\n              </van-step>\n            </van-steps>\n          </div>\n        </div>\n      </van-tab>\n      \n      <van-tab title=\"AI分析结果\">\n        <div class=\"ai-analysis\">\n          <div v-if=\"userAge < 0\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge < 6\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对婴幼儿({{userAge}}岁)，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge < 18\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未成年人({{userAge}}岁)，重点关注性格特点、学业发展和健康状况。\n            </van-notice-bar>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>身体健康</h3>\n            <p>{{ aiAnalysis.health }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>性格特点</h3>\n            <p>{{ aiAnalysis.personality || getAnalysisContent('性格特点') }}</p>\n          </div>\n          \n          <!-- 学业分析（对所有年龄段显示，但侧重点不同） -->\n          <div class=\"analysis-section\">\n            <h3>学业分析</h3>\n            <p>{{ aiAnalysis.education || getAnalysisContent('学业分析') }}</p>\n          </div>\n          \n          <!-- 父母情况（所有年龄段都显示） -->\n          <div class=\"analysis-section\">\n            <h3>父母情况</h3>\n            <p>{{ aiAnalysis.parents || '暂无父母情况分析' }}</p>\n          </div>\n          \n          <!-- 人际关系（所有年龄段都显示） -->\n          <div class=\"analysis-section\">\n            <h3>人际关系</h3>\n            <p>{{ aiAnalysis.social || '暂无人际关系分析' }}</p>\n          </div>\n          \n          <!-- 财运分析（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge >= 18 ? '财运分析' : '未来财运发展' }}</h3>\n            <p>{{ aiAnalysis.wealth }}</p>\n          </div>\n          \n          <!-- 事业发展（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge >= 18 ? '事业发展' : '未来事业发展' }}</h3>\n            <p>{{ aiAnalysis.career }}</p>\n          </div>\n          \n          <!-- 婚姻感情（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge >= 18 ? '婚姻感情' : '未来感情发展' }}</h3>\n            <p>{{ aiAnalysis.relationship }}</p>\n          </div>\n          \n          <!-- 子女情况（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge >= 18 ? '子女情况' : '未来子女缘分' }}</h3>\n            <p>{{ aiAnalysis.children }}</p>\n          </div>\n          \n          <!-- 近五年运势（所有年龄段都显示） -->\n          <div class=\"analysis-section\">\n            <h3>近五年运势</h3>\n            <p>{{ aiAnalysis.future || getAnalysisContent('近五年运势') || aiAnalysis.overall }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>综合建议</h3>\n            <p>{{ aiAnalysis.overall }}</p>\n          </div>\n        </div>\n      </van-tab>\n    </van-tabs>\n    \n    <div class=\"action-buttons\">\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\n        下载PDF报告\n      </van-button>\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\n        分享结果\n      </van-button>\n      \n      <!-- 调试按钮 -->\n      <van-button plain type=\"warning\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"reloadBaziData\">\n        重新加载分析数据\n      </van-button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport http from './api/http'; // 导入配置好的http实例\n\nconst route = useRoute();\nconst router = useRouter();\nconst resultId = route.params.id || route.query.resultId;\nconst activeTab = ref(0);\n\n// 用户年龄，从URL参数或localStorage获取\nconst userAge = ref(parseInt(route.query.age) || parseInt(localStorage.getItem('userAge')) || null);\n\n// 从分析文本中提取特定部分内容\nconst getAnalysisContent = (sectionName) => {\n  try {\n    // 如果是性格特点或学业发展，直接从对应字段获取\n    if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n      return aiAnalysis.value.personality;\n    }\n    \n    if (sectionName === '学业发展' && aiAnalysis.value.education) {\n      return aiAnalysis.value.education;\n    }\n    \n    // 处理健康分析文本，尝试提取学业、性格等内容\n    if (aiAnalysis.value.health) {\n      const healthText = aiAnalysis.value.health;\n      \n      // 查找各部分的标记\n      const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n      if (sectionMatch && sectionMatch[1]) {\n        return sectionMatch[1].trim();\n      }\n      \n      // 如果是未来发展，尝试从overall中提取\n      if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n        const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n        if (futureMatch && futureMatch[2]) {\n          return futureMatch[2].trim();\n        }\n      }\n    }\n    \n    // 如果没有找到对应部分或提取失败，返回空字符串\n    return '';\n  } catch (e) {\n    console.error(`提取${sectionName}内容时出错:`, e);\n    return '';\n  }\n};\n\n// 模拟数据，作为API调用失败时的备用数据\nconst focusAreas = ref(['health', 'wealth', 'career', 'relationship']);\n\n// 备用数据，只在API调用失败时使用\nconst baziData = ref({\n  yearPillar: {\n    heavenlyStem: '甲',\n    earthlyBranch: '子',\n    element: '水'\n  },\n  monthPillar: {\n    heavenlyStem: '丙',\n    earthlyBranch: '寅',\n    element: '木'\n  },\n  dayPillar: {\n    heavenlyStem: '戊',\n    earthlyBranch: '午',\n    element: '火'\n  },\n  hourPillar: {\n    heavenlyStem: '庚',\n    earthlyBranch: '申',\n    element: '金'\n  },\n  fiveElements: {\n    wood: 2,\n    fire: 2,\n    earth: 1,\n    metal: 2,\n    water: 1\n  },\n  flowingYears: [\n    {\n      year: 2025,\n      heavenlyStem: '乙',\n      earthlyBranch: '丑',\n      element: '土'\n    },\n    {\n      year: 2026,\n      heavenlyStem: '丙',\n      earthlyBranch: '寅',\n      element: '木'\n    },\n    {\n      year: 2027,\n      heavenlyStem: '丁',\n      earthlyBranch: '卯',\n      element: '木'\n    },\n    {\n      year: 2028,\n      heavenlyStem: '戊',\n      earthlyBranch: '辰',\n      element: '土'\n    },\n    {\n      year: 2029,\n      heavenlyStem: '己',\n      earthlyBranch: '巳',\n      element: '火'\n    }\n  ]\n});\n\n// 备用分析数据，只在API调用失败时使用\nconst aiAnalysis = ref({\n  health: '您的八字中火土较旺，木水偏弱。从健康角度看，您需要注意心脑血管系统和消化系统的保养。建议平时多喝水，保持规律作息，避免过度劳累和情绪波动。2025-2026年间需特别注意肝胆健康，可适当增加绿色蔬菜的摄入，定期体检。',\n  wealth: '您的财运在2025年有明显上升趋势，特别是在春夏季节。八字中金水相生，适合从事金融、贸易、水利相关行业。投资方面，稳健为主，可考虑分散投资组合。2027年有意外财运，但需谨慎对待，避免投机性强的项目。',\n  career: '您的事业宫位较为稳定，具有较强的组织能力和执行力。2025-2026年是事业发展的关键期，有升职或转行的机会。建议提升专业技能，扩展人脉关系。您适合在团队中担任协调或管理角色，发挥沟通才能。',\n  relationship: '您的八字中日柱为戊午，感情态度较为务实。2025年下半年至2026年上半年是感情发展的良好时期。已婚者需注意与伴侣的沟通，避免因工作忙碌而忽略家庭。单身者有机会通过社交活动或朋友介绍认识合适的对象。',\n  children: '您的子女宫位较为温和，与子女关系和谐。教育方面，建议采用引导式而非强制式的方法，尊重子女的兴趣发展。2026-2027年是子女发展的重要阶段，可能需要您更多的关注和支持。',\n  overall: '综合分析您的八字，2025-2027年是您人生的一个上升期，各方面都有良好发展。建议把握这段时间，在事业上积极进取，在健康上注意保养，在人际关系上广结善缘。您的人生态度积极乐观，具有较强的适应能力和抗压能力，这将帮助您度过人生中的各种挑战。'\n});\n\nconst testApiConnection = async () => {\n  try {\n    Toast.loading('正在测试API连接...');\n    // 使用配置好的http实例\n    const response = await http.get('/');\n    console.log('API根路径响应:', response.data);\n    Toast.success('API连接成功');\n    return true;\n  } catch (error) {\n    console.error('API连接测试失败:', error);\n    Toast.fail('API连接失败，请检查后端服务');\n    return false;\n  }\n};\n\nonMounted(async () => {\n  // 先测试API连接\n  const isApiConnected = await testApiConnection();\n  if (!isApiConnected) {\n    console.warn('API连接失败，将使用模拟数据');\n    return;\n  }\n  \n  console.log('结果页面加载，ID:', resultId);\n  \n  // 如果没有resultId，尝试从本地存储获取\n  const localResultId = localStorage.getItem('resultId');\n  if (!resultId && localResultId) {\n    console.log('从本地存储获取ID:', localResultId);\n  }\n  \n  const finalResultId = resultId || localResultId;\n  \n  if (!finalResultId) {\n    console.error('缺少结果ID，无法获取分析结果');\n    Toast.fail('缺少结果ID，无法获取分析结果');\n    return;\n  }\n  \n  try {\n    console.log('调用API获取结果:', `/api/bazi/result/${finalResultId}`);\n    \n    // 显示加载提示，提醒用户需要等待\n    Toast.loading({\n      message: '正在调用AI进行八字分析，请耐心等待30-60秒...',\n      duration: 10000,\n      position: 'middle'\n    });\n    \n    // 使用配置好的http实例\n    const response = await http.get(`/api/bazi/result/${finalResultId}`);\n    \n    console.log('API响应:', response.status, response.data);\n    \n    if (response.data.code === 200) {\n      console.log('获取成功，更新数据');\n      // 确保从API获取数据并更新视图\n      baziData.value = response.data.data.baziChart;\n      aiAnalysis.value = response.data.data.aiAnalysis;\n      focusAreas.value = response.data.data.focusAreas;\n      \n      Toast.success('分析结果加载成功');\n    } else if (response.data.code === 202) {\n      // 服务器接受了请求但还在处理中（异步分析）\n      console.log('分析正在进行中，等待时间:', response.data.data.waitTime || '未知');\n      \n      // 显示清晰的等待提示，告知用户确切的等待情况\n      Toast.loading({\n        message: `AI正在专注分析您的八字命盘，已经分析了${response.data.data.waitTime || 0}秒，完整分析需要30-60秒，请稍候...`,\n        duration: 8000,\n        position: 'middle'\n      });\n      \n      // 预先显示部分数据\n      if (response.data.data.baziChart) {\n        baziData.value = response.data.data.baziChart;\n      }\n      if (response.data.data.aiAnalysis) {\n        aiAnalysis.value = response.data.data.aiAnalysis;\n      }\n      if (response.data.data.focusAreas) {\n        focusAreas.value = response.data.data.focusAreas;\n      }\n      \n      // 创建轮询定时器引用\n      const pollInterval = ref(null);\n      const maxPollTimeout = ref(null);\n      \n      // 启动轮询，每15秒查询一次直到分析完成\n      pollInterval.value = setInterval(async () => {\n        try {\n          console.log('轮询查询分析结果...');\n          const pollResponse = await http.get(`/api/bazi/result/${finalResultId}`);\n          \n          // 添加更详细的日志\n          console.log(`轮询响应状态码: ${pollResponse.status}, 响应code: ${pollResponse.data.code}`);\n          \n          // 首先检查是否有分析结果\n          const hasAnalysis = pollResponse.data.data && \n                              pollResponse.data.data.aiAnalysis && \n                              Object.values(pollResponse.data.data.aiAnalysis).some(v => v);\n          \n          if (pollResponse.data.code === 200 || hasAnalysis) {\n            // 分析完成，更新数据\n            console.log('分析已完成，更新数据');\n            baziData.value = pollResponse.data.data.baziChart;\n            aiAnalysis.value = pollResponse.data.data.aiAnalysis;\n            focusAreas.value = pollResponse.data.data.focusAreas;\n            Toast.success('分析结果加载成功！您的八字命盘解析已完成');\n            \n            // 清除所有定时器\n            if (pollInterval.value) {\n              clearInterval(pollInterval.value);\n              pollInterval.value = null;\n            }\n            if (maxPollTimeout.value) {\n              clearTimeout(maxPollTimeout.value);\n              maxPollTimeout.value = null;\n            }\n            \n            // 自动切换到AI分析结果标签\n            activeTab.value = 1;\n          } else if (pollResponse.data.code !== 202) {\n            // 如果返回其他错误码，停止轮询\n            console.error('轮询时发生错误:', pollResponse.data.message);\n            Toast.fail(`查询错误: ${pollResponse.data.message}`);\n            \n            // 清除所有定时器\n            if (pollInterval.value) {\n              clearInterval(pollInterval.value);\n              pollInterval.value = null;\n            }\n            if (maxPollTimeout.value) {\n              clearTimeout(maxPollTimeout.value);\n              maxPollTimeout.value = null;\n            }\n          } else {\n            // 仍在分析中，更新等待时间\n            const waitTime = pollResponse.data.data.waitTime || 0;\n            const remainingTime = Math.max(0, 60 - waitTime);  // 假设总时间为60秒\n            \n            Toast.loading({\n              message: `AI正在专注分析中(${Math.round(waitTime/60*100)}%)，预计还需${remainingTime}秒完成...`,\n              duration: 5000,\n              position: 'middle'\n            });\n            console.log('仍在分析中，已等待:', waitTime, '秒');\n          }\n        } catch (err) {\n          console.error('轮询时出错:', err);\n          // 出错也停止轮询并清除定时器\n          if (pollInterval.value) {\n            clearInterval(pollInterval.value);\n            pollInterval.value = null;\n          }\n        }\n      }, 15000); // 每15秒查询一次，减少服务器压力\n      \n      // 设置最大轮询时间，防止无限轮询\n      maxPollTimeout.value = setTimeout(() => {\n        if (pollInterval.value) {\n          clearInterval(pollInterval.value);\n          pollInterval.value = null;\n          console.log('超过最大轮询时间，停止轮询');\n          \n          // 显示一个友好的提示，询问用户是否要继续等待\n          Dialog.confirm({\n            title: '分析耗时较长',\n            message: '您的八字命理分析正在进行中，但耗时较长。您可以选择继续等待或稍后再查看结果。',\n            confirmButtonText: '继续等待',\n            cancelButtonText: '稍后查看',\n          }).then(() => {\n            // 用户选择继续等待，重新启动轮询\n            window.location.reload();\n          }).catch(() => {\n            // 用户选择稍后查看，可以先返回首页\n            router.push('/');\n          });\n        }\n      }, 180000); // 最多轮询3分钟\n    } else {\n      console.error('API返回错误:', response.data.message);\n      Toast.fail(response.data.message || '获取分析结果失败');\n    }\n  } catch (error) {\n    console.error('获取分析结果出错:', error);\n    console.error('错误详情:', error.response ? error.response.data : '无响应数据');\n    Toast.fail('获取分析结果失败，请稍后重试');\n    \n    // 备选方案：如果ID以\"RES\"开头，尝试模拟支付再获取结果\n    if (finalResultId.startsWith('RES')) {\n      try {\n        console.log('尝试使用模拟支付接口...');\n        \n        // 显示加载提示\n        Toast.loading({\n          message: '正在模拟支付并进行八字分析，请耐心等待30-60秒...',\n          duration: 20000,  // 增加等待时间\n          position: 'middle'\n        });\n        \n        const orderId = finalResultId.replace('RES', '');\n        \n        // 从URL查询参数中获取出生日期和时间\n        const urlParams = new URLSearchParams(window.location.search);\n        const birthDate = urlParams.get('birthDate') || '2023-06-06'; // 使用默认值\n        const birthTime = urlParams.get('birthTime') || '辰时 (07:00-09:00)'; // 使用默认值\n        const gender = urlParams.get('gender') || 'male'; // 使用默认值\n        \n        // 验证日期格式\n        let validBirthDate = birthDate;\n        try {\n          // 检查日期格式是否正确\n          const dateParts = birthDate.split('-');\n          if (dateParts.length === 3) {\n            const year = parseInt(dateParts[0]);\n            const month = parseInt(dateParts[1]);\n            const day = parseInt(dateParts[2]);\n            \n            // 验证年份在合理范围内\n            if (year < 1900 || year > 2100) {\n              console.warn(`出生年份 ${year} 超出推荐范围(1900-2100)，使用默认值`);\n              validBirthDate = '2000-01-01';\n            }\n          } else {\n            console.warn(`日期格式错误: ${birthDate}，使用默认值`);\n            validBirthDate = '2000-01-01';\n          }\n        } catch (e) {\n          console.error('日期验证错误:', e);\n          validBirthDate = '2000-01-01';\n        }\n        \n        console.log('模拟支付使用参数:', { birthDate: validBirthDate, birthTime, gender });\n        \n        // 添加参数到URL\n        const mockPaymentUrl = `/api/order/mock/pay/${orderId}?birthDate=${encodeURIComponent(validBirthDate)}&birthTime=${encodeURIComponent(birthTime)}&gender=${encodeURIComponent(gender)}`;\n        \n        // 准备请求数据\n        const requestData = {\n          birthDate: validBirthDate,\n          birthTime: birthTime,\n          gender: gender\n        };\n        \n        console.log('模拟支付请求数据:', requestData);\n        \n        // 尝试最多3次请求\n        let retryCount = 0;\n        let mockPaymentResponse = null;\n        \n        while (retryCount < 3) {\n          try {\n            console.log(`尝试请求模拟支付 (${retryCount + 1}/3)...`);\n            // 发送POST请求，确保设置正确的Content-Type\n            mockPaymentResponse = await http.post(mockPaymentUrl, requestData, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            \n            // 如果成功，跳出循环\n            if (mockPaymentResponse && mockPaymentResponse.data && mockPaymentResponse.data.code === 200) {\n              break;\n            }\n            \n            // 如果失败但有响应，记录错误\n            console.error('模拟支付请求失败:', mockPaymentResponse?.data);\n            \n            // 等待一秒后重试\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            retryCount++;\n          } catch (retryError) {\n            console.error(`模拟支付请求出错 (尝试 ${retryCount + 1}/3):`, retryError);\n            \n            // 等待一秒后重试\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            retryCount++;\n          }\n        }\n        \n        // 检查是否成功获取响应\n        if (mockPaymentResponse && mockPaymentResponse.data && mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n          const newResultId = mockPaymentResponse.data.data.resultId;\n          console.log('获取到新的resultId:', newResultId);\n          \n          // 等待2秒，让服务器有时间处理结果\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          \n          // 尝试最多3次获取结果\n          let resultRetryCount = 0;\n          let resultSuccess = false;\n          \n          while (resultRetryCount < 3 && !resultSuccess) {\n            try {\n              console.log(`尝试获取结果 (${resultRetryCount + 1}/3)...`);\n              const retryResponse = await http.get(`/api/bazi/result/${newResultId}`);\n              \n              if (retryResponse.data.code === 200) {\n                baziData.value = retryResponse.data.data.baziChart;\n                aiAnalysis.value = retryResponse.data.data.aiAnalysis;\n                focusAreas.value = retryResponse.data.data.focusAreas;\n                Toast.success('分析结果加载成功');\n                resultSuccess = true;\n                break;\n              } else if (retryResponse.data.code === 202) {\n                // 结果正在处理中，等待更长时间再重试\n                console.log('结果正在处理中，等待...');\n                await new Promise(resolve => setTimeout(resolve, 3000));\n              } else {\n                console.error('获取结果失败:', retryResponse.data);\n                await new Promise(resolve => setTimeout(resolve, 1000));\n              }\n            } catch (resultError) {\n              console.error(`获取结果出错 (尝试 ${resultRetryCount + 1}/3):`, resultError);\n              await new Promise(resolve => setTimeout(resolve, 1000));\n            }\n            \n            resultRetryCount++;\n          }\n          \n          if (resultSuccess) {\n            return; // 成功获取结果，退出函数\n          }\n        }\n        \n        // 如果所有尝试都失败，显示错误提示\n        Toast.fail('无法获取分析结果，请稍后刷新页面重试');\n      } catch (mockError) {\n        console.error('模拟支付失败:', mockError);\n        Toast.fail('模拟支付失败，请稍后重试');\n      }\n    }\n  }\n});\n\nconst getElementName = (element) => {\n  const elementNames = {\n    wood: '木',\n    fire: '火',\n    earth: '土',\n    metal: '金',\n    water: '水'\n  };\n  return elementNames[element] || element;\n};\n\nconst onClickLeft = () => {\n  router.push('/');\n};\n\nconst downloadPDF = async () => {\n  Toast.loading({\n    message: '正在生成并下载PDF报告...',\n    duration: 5000,\n    position: 'middle'\n  });\n  \n  if (!resultId) {\n    Toast.fail('缺少结果ID，无法生成报告');\n    return;\n  }\n  \n  // 使用流式下载模式\n  await downloadPDFAsStream();\n};\n\n// 新增直接流下载函数\nconst downloadPDFAsStream = async () => {\n  Toast.loading({\n    message: '正在生成PDF并下载报告...',\n    duration: 0,\n    position: 'middle',\n    forbidClick: true\n  });\n  \n  if (!resultId) {\n    Toast.clear();\n    Toast.fail('缺少结果ID，无法下载报告');\n    return;\n  }\n  \n  try {\n    console.log('直接下载报告, 结果ID:', resultId);\n    \n    // 请求PDF文件流，添加随机参数避免缓存\n    const response = await fetch(`/api/bazi/pdf/${resultId}?mode=stream&_=${Date.now()}`);\n    \n    // 检查错误\n    if (!response.ok) {\n      let errorMsg = '下载失败';\n      try {\n        const errorData = await response.json();\n        errorMsg = errorData.message || errorMsg;\n      } catch (e) {\n        // 如果不是JSON格式的错误，尝试获取文本错误信息\n        try {\n          const errorText = await response.text();\n          if (errorText) {\n            errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n          }\n        } catch (textError) {\n          // 如果无法获取文本，使用HTTP状态码\n          errorMsg = `下载失败: HTTP错误 ${response.status}`;\n        }\n      }\n      throw new Error(errorMsg);\n    }\n    \n    // 检查内容类型\n    const contentType = response.headers.get('content-type');\n    if (!contentType || contentType.indexOf('application/pdf') === -1) {\n      // 如果返回的不是PDF，尝试解析错误信息\n      let errorMsg = '服务器返回的不是PDF文件';\n      try {\n        const errorData = await response.text();\n        errorMsg = `错误: ${errorData.substring(0, 200)}`;\n      } catch (e) {\n        // 保持默认错误信息\n      }\n      throw new Error(errorMsg);\n    }\n    \n    // 转换为Blob对象\n    const blob = await response.blob();\n    \n    // 创建下载链接\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `八字命理分析_${resultId}.pdf`;\n    \n    // 触发下载\n    document.body.appendChild(a);\n    a.click();\n    \n    // 清理\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n    \n    Toast.clear();\n    Toast.success('报告下载成功');\n  } catch (error) {\n    console.error('直接下载PDF出错:', error);\n    Toast.clear();\n    Toast.fail(error.message || '下载失败，请稍后重试');\n    \n    // 如果直接下载失败，提示用户使用本地PDF生成\n    Dialog.confirm({\n      title: 'PDF下载失败',\n      message: '服务器生成PDF失败，是否要使用浏览器生成PDF文件？注意：本地生成的PDF格式可能不如服务器生成的完善。',\n      confirmButtonText: '使用本地生成',\n      cancelButtonText: '取消',\n    }).then(() => {\n      // 用户选择使用本地生成\n      generatePDFLocally();\n    }).catch(() => {\n      // 用户取消\n      console.log('用户取消本地PDF生成');\n    });\n  }\n};\n\n// 本地生成PDF的函数\nconst generatePDFLocally = async () => {\n  console.log('使用客户端jsPDF库生成PDF');\n  \n  // 获取内容元素\n  const element = document.querySelector('.result-container');\n  if (!element) {\n    throw new Error('找不到要转换的内容元素');\n  }\n  \n  Toast.loading({\n    message: '正在捕获页面内容...',\n    duration: 5000\n  });\n  \n  try {\n    // 使用html2canvas捕获内容\n    const canvas = await html2canvas(element, {\n      scale: 1,\n      useCORS: true,\n      logging: false,\n      windowWidth: document.documentElement.offsetWidth,\n      windowHeight: document.documentElement.offsetHeight,\n    });\n    \n    Toast.loading({\n      message: '正在生成PDF文件...',\n      duration: 5000\n    });\n        \n    // 创建PDF文档\n    const pdf = new jsPDF('p', 'mm', 'a4');\n        \n    // 计算尺寸和比例\n    const imgData = canvas.toDataURL('image/png');\n    const imgWidth = 210; // A4宽度，单位mm\n    const pageHeight = 297; // A4高度，单位mm\n    const imgHeight = canvas.height * imgWidth / canvas.width;\n    let heightLeft = imgHeight;\n    let position = 0;\n          \n    // 添加首页\n    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n    heightLeft -= pageHeight;\n    \n    // 如果内容超过一页，添加更多页\n    while (heightLeft > 0) {\n      position = heightLeft - imgHeight;\n      pdf.addPage();\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n    }\n    \n    // 添加页脚\n    const pageCount = pdf.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      pdf.setPage(i);\n      pdf.setFontSize(10);\n      pdf.setTextColor(150);\n      pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });\n    }\n    \n    // 保存PDF\n    pdf.save(`八字命理分析_${resultId}.pdf`);\n    \n    return true;\n  } catch (error) {\n    console.error('本地PDF生成错误:', error);\n    throw error;\n  }\n};\n\nconst shareResult = () => {\n  Toast.success('分享功能开发中');\n};\n\nconst reloadBaziData = async () => {\n  Toast.loading('正在重新加载数据...');\n  \n  try {\n    // 测试模拟支付接口以获取分析结果\n    if (!resultId) {\n      Toast.fail('缺少结果ID');\n      return;\n    }\n    \n    // 首先尝试使用模拟支付接口\n    try {\n      console.log('尝试使用模拟支付接口...');\n      \n      // 显示加载提示\n      Toast.loading({\n        message: '正在重新分析八字，请耐心等待30-60秒...',\n        duration: 10000,\n        position: 'middle'\n      });\n      \n      const mockPaymentResponse = await http.post(`/api/order/mock/pay/${resultId.replace('RES', '')}`);\n      console.log('模拟支付响应:', mockPaymentResponse.data);\n      \n      if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n        // 使用返回的resultId重新加载数据\n        const newResultId = mockPaymentResponse.data.data.resultId;\n        console.log('获取到新的resultId:', newResultId);\n        \n        const response = await http.get(`/api/bazi/result/${newResultId}`);\n        if (response.data.code === 200) {\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('数据加载成功');\n          return;\n        }\n      }\n    } catch (mockError) {\n      console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n    }\n    \n    // 如果模拟支付失败，尝试直接获取结果\n    const response = await http.get(`/api/bazi/result/${resultId}`);\n    \n    if (response.data.code === 200) {\n      baziData.value = response.data.data.baziChart;\n      aiAnalysis.value = response.data.data.aiAnalysis;\n      focusAreas.value = response.data.data.focusAreas;\n      Toast.success('数据加载成功');\n    } else {\n      Toast.fail(response.data.message || '加载失败');\n    }\n  } catch (error) {\n    console.error('重新加载失败:', error);\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\n  }\n};\n</script>\n\n<style scoped>\n.result-container {\n  padding-bottom: 20px;\n}\n\n.result-header {\n  text-align: center;\n  padding: 20px 0;\n  background-color: #f2f3f5;\n}\n\n.result-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #323233;\n}\n\n.result-header p {\n  margin: 10px 0 0;\n  font-size: 14px;\n  color: #969799;\n}\n\n.bazi-chart {\n  padding: 20px 16px;\n}\n\n.bazi-chart h3 {\n  margin: 20px 0 10px;\n  color: #323233;\n}\n\n.pillar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.stem {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #1989fa;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.branch {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #07c160;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.label {\n  font-size: 12px;\n  color: #646566;\n}\n\n.five-elements {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n}\n\n.element {\n  text-align: center;\n  flex: 1;\n}\n\n.element-name {\n  font-size: 14px;\n  color: #323233;\n}\n\n.element-value {\n  font-size: 18px;\n  font-weight: bold;\n  color: #1989fa;\n  margin-top: 5px;\n}\n\n.flowing-years {\n  margin: 20px 0;\n}\n\n.ai-analysis {\n  padding: 20px 16px;\n}\n\n.analysis-section {\n  margin-bottom: 20px;\n}\n\n.analysis-section h3 {\n  margin: 0 0 10px;\n  color: #323233;\n}\n\n.analysis-section p {\n  margin: 0;\n  font-size: 14px;\n  color: #646566;\n  line-height: 1.6;\n}\n\n.action-buttons {\n  padding: 20px 16px;\n}\n\n.age-notice {\n  margin-bottom: 20px;\n}\n\n.shen-sha-info {\n  margin-bottom: 20px;\n}\n\n.da-yun-info {\n  margin-bottom: 20px;\n}\n\n.qi-yun-info {\n  margin: 0 0 10px;\n  font-size: 14px;\n  color: #646566;\n}\n\n.da-yun-table {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}