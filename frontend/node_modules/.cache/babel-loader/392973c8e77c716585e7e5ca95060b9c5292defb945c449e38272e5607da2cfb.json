{"ast":null,"code":"import { ref, onMounted, reactive, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport http from './api/http'; // 导入配置好的http实例\n\nexport default {\n  __name: 'Result',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const resultId = route.params.id || route.query.resultId;\n    const activeTab = ref(0);\n\n    // 计算用户年龄\n    const userAge = ref(null);\n\n    // 从八字命盘中提取和计算年龄\n    const calculateAge = () => {\n      try {\n        // 尝试从八字命盘中提取出生年份\n        if (baziData.value.flowingYears && baziData.value.flowingYears.length > 0) {\n          // 通常流年信息中的第一个年份与出生年份相近，这里简单估算\n          const firstFlowingYear = baziData.value.flowingYears[0].year;\n          const birthYear = firstFlowingYear - 10; // 估算出生年份\n          const currentYear = new Date().getFullYear();\n          userAge.value = currentYear - birthYear;\n          console.log(`估算年龄: 当前年份=${currentYear}, 出生年份=${birthYear}, 年龄=${userAge.value}`);\n        }\n      } catch (e) {\n        console.error('计算年龄时出错:', e);\n        userAge.value = null;\n      }\n    };\n\n    // 从分析文本中提取特定部分内容\n    const getAnalysisContent = sectionName => {\n      try {\n        // 处理健康分析文本，尝试提取学业、性格等内容\n        if (aiAnalysis.value.health) {\n          const healthText = aiAnalysis.value.health;\n\n          // 查找各部分的标记\n          const academicMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n          if (academicMatch && academicMatch[1]) {\n            return academicMatch[1].trim();\n          }\n\n          // 如果是未来发展，尝试从overall中提取\n          if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n            const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n            if (futureMatch && futureMatch[2]) {\n              return futureMatch[2].trim();\n            }\n          }\n        }\n\n        // 如果没有找到对应部分或提取失败，返回空字符串\n        return '';\n      } catch (e) {\n        console.error(`提取${sectionName}内容时出错:`, e);\n        return '';\n      }\n    };\n\n    // 模拟数据，作为API调用失败时的备用数据\n    const focusAreas = ref(['health', 'wealth', 'career', 'relationship']);\n\n    // 备用数据，只在API调用失败时使用\n    const baziData = ref({\n      yearPillar: {\n        heavenlyStem: '甲',\n        earthlyBranch: '子',\n        element: '水'\n      },\n      monthPillar: {\n        heavenlyStem: '丙',\n        earthlyBranch: '寅',\n        element: '木'\n      },\n      dayPillar: {\n        heavenlyStem: '戊',\n        earthlyBranch: '午',\n        element: '火'\n      },\n      hourPillar: {\n        heavenlyStem: '庚',\n        earthlyBranch: '申',\n        element: '金'\n      },\n      fiveElements: {\n        wood: 2,\n        fire: 2,\n        earth: 1,\n        metal: 2,\n        water: 1\n      },\n      flowingYears: [{\n        year: 2025,\n        heavenlyStem: '乙',\n        earthlyBranch: '丑',\n        element: '土'\n      }, {\n        year: 2026,\n        heavenlyStem: '丙',\n        earthlyBranch: '寅',\n        element: '木'\n      }, {\n        year: 2027,\n        heavenlyStem: '丁',\n        earthlyBranch: '卯',\n        element: '木'\n      }, {\n        year: 2028,\n        heavenlyStem: '戊',\n        earthlyBranch: '辰',\n        element: '土'\n      }, {\n        year: 2029,\n        heavenlyStem: '己',\n        earthlyBranch: '巳',\n        element: '火'\n      }]\n    });\n\n    // 备用分析数据，只在API调用失败时使用\n    const aiAnalysis = ref({\n      health: '您的八字中火土较旺，木水偏弱。从健康角度看，您需要注意心脑血管系统和消化系统的保养。建议平时多喝水，保持规律作息，避免过度劳累和情绪波动。2025-2026年间需特别注意肝胆健康，可适当增加绿色蔬菜的摄入，定期体检。',\n      wealth: '您的财运在2025年有明显上升趋势，特别是在春夏季节。八字中金水相生，适合从事金融、贸易、水利相关行业。投资方面，稳健为主，可考虑分散投资组合。2027年有意外财运，但需谨慎对待，避免投机性强的项目。',\n      career: '您的事业宫位较为稳定，具有较强的组织能力和执行力。2025-2026年是事业发展的关键期，有升职或转行的机会。建议提升专业技能，扩展人脉关系。您适合在团队中担任协调或管理角色，发挥沟通才能。',\n      relationship: '您的八字中日柱为戊午，感情态度较为务实。2025年下半年至2026年上半年是感情发展的良好时期。已婚者需注意与伴侣的沟通，避免因工作忙碌而忽略家庭。单身者有机会通过社交活动或朋友介绍认识合适的对象。',\n      children: '您的子女宫位较为温和，与子女关系和谐。教育方面，建议采用引导式而非强制式的方法，尊重子女的兴趣发展。2026-2027年是子女发展的重要阶段，可能需要您更多的关注和支持。',\n      overall: '综合分析您的八字，2025-2027年是您人生的一个上升期，各方面都有良好发展。建议把握这段时间，在事业上积极进取，在健康上注意保养，在人际关系上广结善缘。您的人生态度积极乐观，具有较强的适应能力和抗压能力，这将帮助您度过人生中的各种挑战。'\n    });\n    const testApiConnection = async () => {\n      try {\n        Toast.loading('正在测试API连接...');\n        // 使用配置好的http实例\n        const response = await http.get('/');\n        console.log('API根路径响应:', response.data);\n        Toast.success('API连接成功');\n        return true;\n      } catch (error) {\n        console.error('API连接测试失败:', error);\n        Toast.fail('API连接失败，请检查后端服务');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 先测试API连接\n      const isApiConnected = await testApiConnection();\n      if (!isApiConnected) {\n        console.warn('API连接失败，将使用模拟数据');\n        return;\n      }\n      console.log('结果页面加载，ID:', resultId);\n\n      // 如果没有resultId，尝试从本地存储获取\n      const localResultId = localStorage.getItem('resultId');\n      if (!resultId && localResultId) {\n        console.log('从本地存储获取ID:', localResultId);\n      }\n      const finalResultId = resultId || localResultId;\n      if (!finalResultId) {\n        console.error('缺少结果ID，无法获取分析结果');\n        Toast.fail('缺少结果ID，无法获取分析结果');\n        return;\n      }\n      try {\n        console.log('调用API获取结果:', `/api/bazi/result/${finalResultId}`);\n\n        // 显示加载提示，提醒用户需要等待\n        Toast.loading({\n          message: '正在调用AI进行八字分析，请耐心等待30-60秒...',\n          duration: 10000,\n          position: 'middle'\n        });\n\n        // 使用配置好的http实例\n        const response = await http.get(`/api/bazi/result/${finalResultId}`);\n        console.log('API响应:', response.status, response.data);\n        if (response.data.code === 200) {\n          console.log('获取成功，更新数据');\n          // 确保从API获取数据并更新视图\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n\n          // 计算用户年龄\n          calculateAge();\n          Toast.success('分析结果加载成功');\n        } else if (response.data.code === 202) {\n          // 服务器接受了请求但还在处理中（异步分析）\n          console.log('分析正在进行中，等待时间:', response.data.data.waitTime || '未知');\n\n          // 显示清晰的等待提示，告知用户确切的等待情况\n          Toast.loading({\n            message: `AI正在专注分析您的八字命盘，已经分析了${response.data.data.waitTime || 0}秒，完整分析需要30-60秒，请稍候...`,\n            duration: 8000,\n            position: 'middle'\n          });\n\n          // 预先显示部分数据\n          if (response.data.data.baziChart) {\n            baziData.value = response.data.data.baziChart;\n          }\n          if (response.data.data.aiAnalysis) {\n            aiAnalysis.value = response.data.data.aiAnalysis;\n          }\n          if (response.data.data.focusAreas) {\n            focusAreas.value = response.data.data.focusAreas;\n          }\n\n          // 启动轮询，每15秒查询一次直到分析完成\n          // 增加轮询间隔，减少服务器压力\n          const pollInterval = setInterval(async () => {\n            try {\n              console.log('轮询查询分析结果...');\n              const pollResponse = await http.get(`/api/bazi/result/${finalResultId}`);\n\n              // 添加更详细的日志\n              console.log(`轮询响应状态码: ${pollResponse.status}, 响应code: ${pollResponse.data.code}`);\n\n              // 首先检查是否有分析结果\n              const hasAnalysis = pollResponse.data.data && pollResponse.data.data.aiAnalysis && Object.values(pollResponse.data.data.aiAnalysis).some(v => v);\n              if (pollResponse.data.code === 200 || hasAnalysis) {\n                // 分析完成，更新数据\n                console.log('分析已完成，更新数据');\n                baziData.value = pollResponse.data.data.baziChart;\n                aiAnalysis.value = pollResponse.data.data.aiAnalysis;\n                focusAreas.value = pollResponse.data.data.focusAreas;\n                Toast.success('分析结果加载成功！您的八字命盘解析已完成');\n                clearInterval(pollInterval); // 停止轮询\n\n                // 自动切换到AI分析结果标签\n                activeTab.value = 1;\n\n                // 计算用户年龄\n                calculateAge();\n              } else if (pollResponse.data.code !== 202) {\n                // 如果返回其他错误码，停止轮询\n                console.error('轮询时发生错误:', pollResponse.data.message);\n                Toast.fail(`查询错误: ${pollResponse.data.message}`);\n                clearInterval(pollInterval); // 停止轮询\n              } else {\n                // 仍在分析中，更新等待时间\n                const waitTime = pollResponse.data.data.waitTime || 0;\n                const remainingTime = Math.max(0, 60 - waitTime); // 假设总时间为60秒\n\n                Toast.loading({\n                  message: `AI正在专注分析中(${Math.round(waitTime / 60 * 100)}%)，预计还需${remainingTime}秒完成...`,\n                  duration: 5000,\n                  position: 'middle'\n                });\n                console.log('仍在分析中，已等待:', waitTime, '秒');\n              }\n            } catch (err) {\n              console.error('轮询时出错:', err);\n              clearInterval(pollInterval); // 出错也停止轮询\n            }\n          }, 15000); // 每15秒查询一次，减少服务器压力\n\n          // 设置最大轮询时间，防止无限轮询\n          setTimeout(() => {\n            if (pollInterval) {\n              clearInterval(pollInterval);\n              console.log('超过最大轮询时间，停止轮询');\n\n              // 显示一个友好的提示，询问用户是否要继续等待\n              Dialog.confirm({\n                title: '分析耗时较长',\n                message: '您的八字命理分析正在进行中，但耗时较长。您可以选择继续等待或稍后再查看结果。',\n                confirmButtonText: '继续等待',\n                cancelButtonText: '稍后查看'\n              }).then(() => {\n                // 用户选择继续等待，重新启动轮询\n                window.location.reload();\n              }).catch(() => {\n                // 用户选择稍后查看，可以先返回首页\n                router.push('/');\n              });\n            }\n          }, 180000); // 最多轮询3分钟\n        } else {\n          console.error('API返回错误:', response.data.message);\n          Toast.fail(response.data.message || '获取分析结果失败');\n        }\n      } catch (error) {\n        console.error('获取分析结果出错:', error);\n        console.error('错误详情:', error.response ? error.response.data : '无响应数据');\n        Toast.fail('获取分析结果失败，请稍后重试');\n\n        // 备选方案：如果ID以\"RES\"开头，尝试模拟支付再获取结果\n        if (finalResultId.startsWith('RES')) {\n          try {\n            console.log('尝试使用模拟支付接口...');\n\n            // 显示加载提示\n            Toast.loading({\n              message: '正在模拟支付并进行八字分析，请耐心等待30-60秒...',\n              duration: 10000,\n              position: 'middle'\n            });\n            const orderId = finalResultId.replace('RES', '');\n            const mockPaymentResponse = await http.post(`/api/order/mock/pay/${orderId}`);\n            if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n              const newResultId = mockPaymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n              const retryResponse = await http.get(`/api/bazi/result/${newResultId}`);\n              if (retryResponse.data.code === 200) {\n                baziData.value = retryResponse.data.data.baziChart;\n                aiAnalysis.value = retryResponse.data.data.aiAnalysis;\n                focusAreas.value = retryResponse.data.data.focusAreas;\n                Toast.success('分析结果加载成功');\n                return;\n              }\n            }\n          } catch (mockError) {\n            console.error('模拟支付失败:', mockError);\n          }\n        }\n      }\n    });\n    const getElementName = element => {\n      const elementNames = {\n        wood: '木',\n        fire: '火',\n        earth: '土',\n        metal: '金',\n        water: '水'\n      };\n      return elementNames[element] || element;\n    };\n    const onClickLeft = () => {\n      router.push('/');\n    };\n    const downloadPDF = async () => {\n      Toast.loading({\n        message: '正在生成并下载PDF报告...',\n        duration: 5000,\n        position: 'middle'\n      });\n      if (!resultId) {\n        Toast.fail('缺少结果ID，无法生成报告');\n        return;\n      }\n\n      // 使用流式下载模式\n      await downloadPDFAsStream();\n    };\n\n    // 新增直接流下载函数\n    const downloadPDFAsStream = async () => {\n      Toast.loading({\n        message: '正在生成PDF并下载报告...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      if (!resultId) {\n        Toast.clear();\n        Toast.fail('缺少结果ID，无法下载报告');\n        return;\n      }\n      try {\n        console.log('直接下载报告, 结果ID:', resultId);\n\n        // 请求PDF文件流\n        const response = await fetch(`/api/bazi/pdf/${resultId}?mode=stream`);\n\n        // 检查错误\n        if (!response.ok) {\n          let errorMsg = '下载失败';\n          try {\n            const errorData = await response.json();\n            errorMsg = errorData.message || errorMsg;\n          } catch (e) {\n            // 如果不是JSON格式的错误，使用默认错误信息\n          }\n          throw new Error(errorMsg);\n        }\n\n        // 检查内容类型\n        const contentType = response.headers.get('content-type');\n        if (!contentType || contentType.indexOf('application/pdf') === -1) {\n          throw new Error('服务器返回的不是PDF文件');\n        }\n\n        // 转换为Blob对象\n        const blob = await response.blob();\n\n        // 创建下载链接\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `八字命理分析_${resultId}.pdf`;\n\n        // 触发下载\n        document.body.appendChild(a);\n        a.click();\n\n        // 清理\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        Toast.clear();\n        Toast.success('报告下载成功');\n      } catch (error) {\n        console.error('直接下载PDF出错:', error);\n        Toast.clear();\n        Toast.fail(error.message || '下载失败，请稍后重试');\n\n        // 如果直接下载失败，可以提示用户使用本地PDF生成\n        if (confirm('直接下载失败，是否要使用本地PDF生成方式？')) {\n          generatePDFLocally();\n        }\n      }\n    };\n\n    // 本地生成PDF的函数\n    const generatePDFLocally = async () => {\n      console.log('使用客户端jsPDF库生成PDF');\n\n      // 获取内容元素\n      const element = document.querySelector('.result-container');\n      if (!element) {\n        throw new Error('找不到要转换的内容元素');\n      }\n      Toast.loading({\n        message: '正在捕获页面内容...',\n        duration: 5000\n      });\n      try {\n        // 使用html2canvas捕获内容\n        const canvas = await html2canvas(element, {\n          scale: 1,\n          useCORS: true,\n          logging: false,\n          windowWidth: document.documentElement.offsetWidth,\n          windowHeight: document.documentElement.offsetHeight\n        });\n        Toast.loading({\n          message: '正在生成PDF文件...',\n          duration: 5000\n        });\n\n        // 创建PDF文档\n        const pdf = new jsPDF('p', 'mm', 'a4');\n\n        // 计算尺寸和比例\n        const imgData = canvas.toDataURL('image/png');\n        const imgWidth = 210; // A4宽度，单位mm\n        const pageHeight = 297; // A4高度，单位mm\n        const imgHeight = canvas.height * imgWidth / canvas.width;\n        let heightLeft = imgHeight;\n        let position = 0;\n\n        // 添加首页\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n\n        // 如果内容超过一页，添加更多页\n        while (heightLeft > 0) {\n          position = heightLeft - imgHeight;\n          pdf.addPage();\n          pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n          heightLeft -= pageHeight;\n        }\n\n        // 添加页脚\n        const pageCount = pdf.internal.getNumberOfPages();\n        for (let i = 1; i <= pageCount; i++) {\n          pdf.setPage(i);\n          pdf.setFontSize(10);\n          pdf.setTextColor(150);\n          pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, {\n            align: 'center'\n          });\n        }\n\n        // 保存PDF\n        pdf.save(`八字命理分析_${resultId}.pdf`);\n        return true;\n      } catch (error) {\n        console.error('本地PDF生成错误:', error);\n        throw error;\n      }\n    };\n    const shareResult = () => {\n      Toast.success('分享功能开发中');\n    };\n    const reloadBaziData = async () => {\n      Toast.loading('正在重新加载数据...');\n      try {\n        // 测试模拟支付接口以获取分析结果\n        if (!resultId) {\n          Toast.fail('缺少结果ID');\n          return;\n        }\n\n        // 首先尝试使用模拟支付接口\n        try {\n          console.log('尝试使用模拟支付接口...');\n\n          // 显示加载提示\n          Toast.loading({\n            message: '正在重新分析八字，请耐心等待30-60秒...',\n            duration: 10000,\n            position: 'middle'\n          });\n          const mockPaymentResponse = await http.post(`/api/order/mock/pay/${resultId.replace('RES', '')}`);\n          console.log('模拟支付响应:', mockPaymentResponse.data);\n          if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n            // 使用返回的resultId重新加载数据\n            const newResultId = mockPaymentResponse.data.data.resultId;\n            console.log('获取到新的resultId:', newResultId);\n            const response = await http.get(`/api/bazi/result/${newResultId}`);\n            if (response.data.code === 200) {\n              baziData.value = response.data.data.baziChart;\n              aiAnalysis.value = response.data.data.aiAnalysis;\n              focusAreas.value = response.data.data.focusAreas;\n              Toast.success('数据加载成功');\n              return;\n            }\n          }\n        } catch (mockError) {\n          console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n        }\n\n        // 如果模拟支付失败，尝试直接获取结果\n        const response = await http.get(`/api/bazi/result/${resultId}`);\n        if (response.data.code === 200) {\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('数据加载成功');\n        } else {\n          Toast.fail(response.data.message || '加载失败');\n        }\n      } catch (error) {\n        console.error('重新加载失败:', error);\n        Toast.fail('加载失败: ' + (error.message || '未知错误'));\n      }\n    };\n    const __returned__ = {\n      route,\n      router,\n      resultId,\n      activeTab,\n      userAge,\n      calculateAge,\n      getAnalysisContent,\n      focusAreas,\n      baziData,\n      aiAnalysis,\n      testApiConnection,\n      getElementName,\n      onClickLeft,\n      downloadPDF,\n      downloadPDFAsStream,\n      generatePDFLocally,\n      shareResult,\n      reloadBaziData,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get jsPDF() {\n        return jsPDF;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get axios() {\n        return axios;\n      },\n      get http() {\n        return http;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","useRoute","useRouter","Toast","Dialog","jsPDF","html2canvas","axios","http","route","router","resultId","params","id","query","activeTab","userAge","calculateAge","baziData","value","flowingYears","length","firstFlowingYear","year","birthYear","currentYear","Date","getFullYear","console","log","e","error","getAnalysisContent","sectionName","aiAnalysis","health","healthText","academicMatch","match","RegExp","trim","overall","futureMatch","focusAreas","yearPillar","heavenlyStem","earthlyBranch","element","monthPillar","dayPillar","hourPillar","fiveElements","wood","fire","earth","metal","water","wealth","career","relationship","children","testApiConnection","loading","response","get","data","success","fail","isApiConnected","warn","localResultId","localStorage","getItem","finalResultId","message","duration","position","status","code","baziChart","waitTime","pollInterval","setInterval","pollResponse","hasAnalysis","Object","values","some","v","clearInterval","remainingTime","Math","max","round","err","setTimeout","confirm","title","confirmButtonText","cancelButtonText","then","window","location","reload","catch","push","startsWith","orderId","replace","mockPaymentResponse","post","newResultId","retryResponse","mockError","getElementName","elementNames","onClickLeft","downloadPDF","downloadPDFAsStream","forbidClick","clear","fetch","ok","errorMsg","errorData","json","Error","contentType","headers","indexOf","blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","generatePDFLocally","querySelector","canvas","scale","useCORS","logging","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","pdf","imgData","toDataURL","imgWidth","pageHeight","imgHeight","height","width","heightLeft","addImage","addPage","pageCount","internal","getNumberOfPages","i","setPage","setFontSize","setTextColor","text","pageSize","getWidth","getHeight","align","save","shareResult","reloadBaziData"],"sources":["C:/Users/Administrator/Desktop/开发八字命理AI指导功能页码/frontend/src/Result.vue"],"sourcesContent":["<template>\n  <div class=\"result-container\">\n    <van-nav-bar\n      title=\"八字分析结果\"\n      left-text=\"返回\"\n      left-arrow\n      @click-left=\"onClickLeft\"\n    />\n    \n    <div class=\"result-header\">\n      <h2>您的八字命盘分析</h2>\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\n    </div>\n    \n    <van-tabs v-model=\"activeTab\" sticky>\n      <van-tab title=\"命盘信息\">\n        <div class=\"bazi-chart\">\n          <h3>八字命盘</h3>\n          <van-grid :column-num=\"4\" :border=\"false\">\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\n                  <div class=\"label\">年柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\n                  <div class=\"label\">月柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\n                  <div class=\"label\">日柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\n                  <div class=\"label\">时柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n          </van-grid>\n          \n          <h3>五行分布</h3>\n          <div class=\"five-elements\">\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">{{ value }}</div>\n            </div>\n          </div>\n          \n          <h3>大运流年</h3>\n          <div class=\"flowing-years\">\n            <van-steps direction=\"horizontal\" :active=\"2\">\n              <van-step v-for=\"(year, index) in baziData.flowingYears.slice(0, 5)\" :key=\"index\">\n                {{ year.year }}年<br>\n                {{ year.heavenlyStem }}{{ year.earthlyBranch }}\n              </van-step>\n            </van-steps>\n          </div>\n        </div>\n      </van-tab>\n      \n      <van-tab title=\"AI分析结果\">\n        <div class=\"ai-analysis\">\n          <div v-if=\"userAge < 0\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge < 6\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对婴幼儿({{userAge}}岁)，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge < 18\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未成年人({{userAge}}岁)，重点关注性格特点、学业发展和健康状况。\n            </van-notice-bar>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>身体健康</h3>\n            <p>{{ aiAnalysis.health }}</p>\n          </div>\n          \n          <div v-if=\"userAge < 18 && userAge >= 0\" class=\"analysis-section\">\n            <h3>学业发展</h3>\n            <p>{{ getAnalysisContent('学业发展') }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>性格特点</h3>\n            <p>{{ getAnalysisContent('性格特点') }}</p>\n          </div>\n          \n          <div v-if=\"userAge >= 18 && focusAreas.includes('wealth')\" class=\"analysis-section\">\n            <h3>财运分析</h3>\n            <p>{{ aiAnalysis.wealth }}</p>\n          </div>\n          \n          <div v-if=\"userAge >= 18 && focusAreas.includes('career')\" class=\"analysis-section\">\n            <h3>事业发展</h3>\n            <p>{{ aiAnalysis.career }}</p>\n          </div>\n          \n          <div v-if=\"userAge >= 18 && focusAreas.includes('relationship')\" class=\"analysis-section\">\n            <h3>婚姻感情</h3>\n            <p>{{ aiAnalysis.relationship }}</p>\n          </div>\n          \n          <div v-if=\"userAge >= 18 && focusAreas.includes('children')\" class=\"analysis-section\">\n            <h3>子女缘分</h3>\n            <p>{{ aiAnalysis.children }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>未来发展</h3>\n            <p>{{ getAnalysisContent('未来发展') || aiAnalysis.overall }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>综合建议</h3>\n            <p>{{ aiAnalysis.overall }}</p>\n          </div>\n        </div>\n      </van-tab>\n    </van-tabs>\n    \n    <div class=\"action-buttons\">\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\n        下载PDF报告\n      </van-button>\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\n        分享结果\n      </van-button>\n      \n      <!-- 调试按钮 -->\n      <van-button plain type=\"warning\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"reloadBaziData\">\n        重新加载分析数据\n      </van-button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport http from './api/http'; // 导入配置好的http实例\n\nconst route = useRoute();\nconst router = useRouter();\nconst resultId = route.params.id || route.query.resultId;\nconst activeTab = ref(0);\n\n// 计算用户年龄\nconst userAge = ref(null);\n\n// 从八字命盘中提取和计算年龄\nconst calculateAge = () => {\n  try {\n    // 尝试从八字命盘中提取出生年份\n    if (baziData.value.flowingYears && baziData.value.flowingYears.length > 0) {\n      // 通常流年信息中的第一个年份与出生年份相近，这里简单估算\n      const firstFlowingYear = baziData.value.flowingYears[0].year;\n      const birthYear = firstFlowingYear - 10; // 估算出生年份\n      const currentYear = new Date().getFullYear();\n      userAge.value = currentYear - birthYear;\n      console.log(`估算年龄: 当前年份=${currentYear}, 出生年份=${birthYear}, 年龄=${userAge.value}`);\n    }\n  } catch (e) {\n    console.error('计算年龄时出错:', e);\n    userAge.value = null;\n  }\n};\n\n// 从分析文本中提取特定部分内容\nconst getAnalysisContent = (sectionName) => {\n  try {\n    // 处理健康分析文本，尝试提取学业、性格等内容\n    if (aiAnalysis.value.health) {\n      const healthText = aiAnalysis.value.health;\n      \n      // 查找各部分的标记\n      const academicMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n      if (academicMatch && academicMatch[1]) {\n        return academicMatch[1].trim();\n      }\n      \n      // 如果是未来发展，尝试从overall中提取\n      if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n        const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n        if (futureMatch && futureMatch[2]) {\n          return futureMatch[2].trim();\n        }\n      }\n    }\n    \n    // 如果没有找到对应部分或提取失败，返回空字符串\n    return '';\n  } catch (e) {\n    console.error(`提取${sectionName}内容时出错:`, e);\n    return '';\n  }\n};\n\n// 模拟数据，作为API调用失败时的备用数据\nconst focusAreas = ref(['health', 'wealth', 'career', 'relationship']);\n\n// 备用数据，只在API调用失败时使用\nconst baziData = ref({\n  yearPillar: {\n    heavenlyStem: '甲',\n    earthlyBranch: '子',\n    element: '水'\n  },\n  monthPillar: {\n    heavenlyStem: '丙',\n    earthlyBranch: '寅',\n    element: '木'\n  },\n  dayPillar: {\n    heavenlyStem: '戊',\n    earthlyBranch: '午',\n    element: '火'\n  },\n  hourPillar: {\n    heavenlyStem: '庚',\n    earthlyBranch: '申',\n    element: '金'\n  },\n  fiveElements: {\n    wood: 2,\n    fire: 2,\n    earth: 1,\n    metal: 2,\n    water: 1\n  },\n  flowingYears: [\n    {\n      year: 2025,\n      heavenlyStem: '乙',\n      earthlyBranch: '丑',\n      element: '土'\n    },\n    {\n      year: 2026,\n      heavenlyStem: '丙',\n      earthlyBranch: '寅',\n      element: '木'\n    },\n    {\n      year: 2027,\n      heavenlyStem: '丁',\n      earthlyBranch: '卯',\n      element: '木'\n    },\n    {\n      year: 2028,\n      heavenlyStem: '戊',\n      earthlyBranch: '辰',\n      element: '土'\n    },\n    {\n      year: 2029,\n      heavenlyStem: '己',\n      earthlyBranch: '巳',\n      element: '火'\n    }\n  ]\n});\n\n// 备用分析数据，只在API调用失败时使用\nconst aiAnalysis = ref({\n  health: '您的八字中火土较旺，木水偏弱。从健康角度看，您需要注意心脑血管系统和消化系统的保养。建议平时多喝水，保持规律作息，避免过度劳累和情绪波动。2025-2026年间需特别注意肝胆健康，可适当增加绿色蔬菜的摄入，定期体检。',\n  wealth: '您的财运在2025年有明显上升趋势，特别是在春夏季节。八字中金水相生，适合从事金融、贸易、水利相关行业。投资方面，稳健为主，可考虑分散投资组合。2027年有意外财运，但需谨慎对待，避免投机性强的项目。',\n  career: '您的事业宫位较为稳定，具有较强的组织能力和执行力。2025-2026年是事业发展的关键期，有升职或转行的机会。建议提升专业技能，扩展人脉关系。您适合在团队中担任协调或管理角色，发挥沟通才能。',\n  relationship: '您的八字中日柱为戊午，感情态度较为务实。2025年下半年至2026年上半年是感情发展的良好时期。已婚者需注意与伴侣的沟通，避免因工作忙碌而忽略家庭。单身者有机会通过社交活动或朋友介绍认识合适的对象。',\n  children: '您的子女宫位较为温和，与子女关系和谐。教育方面，建议采用引导式而非强制式的方法，尊重子女的兴趣发展。2026-2027年是子女发展的重要阶段，可能需要您更多的关注和支持。',\n  overall: '综合分析您的八字，2025-2027年是您人生的一个上升期，各方面都有良好发展。建议把握这段时间，在事业上积极进取，在健康上注意保养，在人际关系上广结善缘。您的人生态度积极乐观，具有较强的适应能力和抗压能力，这将帮助您度过人生中的各种挑战。'\n});\n\nconst testApiConnection = async () => {\n  try {\n    Toast.loading('正在测试API连接...');\n    // 使用配置好的http实例\n    const response = await http.get('/');\n    console.log('API根路径响应:', response.data);\n    Toast.success('API连接成功');\n    return true;\n  } catch (error) {\n    console.error('API连接测试失败:', error);\n    Toast.fail('API连接失败，请检查后端服务');\n    return false;\n  }\n};\n\nonMounted(async () => {\n  // 先测试API连接\n  const isApiConnected = await testApiConnection();\n  if (!isApiConnected) {\n    console.warn('API连接失败，将使用模拟数据');\n    return;\n  }\n  \n  console.log('结果页面加载，ID:', resultId);\n  \n  // 如果没有resultId，尝试从本地存储获取\n  const localResultId = localStorage.getItem('resultId');\n  if (!resultId && localResultId) {\n    console.log('从本地存储获取ID:', localResultId);\n  }\n  \n  const finalResultId = resultId || localResultId;\n  \n  if (!finalResultId) {\n    console.error('缺少结果ID，无法获取分析结果');\n    Toast.fail('缺少结果ID，无法获取分析结果');\n    return;\n  }\n  \n  try {\n    console.log('调用API获取结果:', `/api/bazi/result/${finalResultId}`);\n    \n    // 显示加载提示，提醒用户需要等待\n    Toast.loading({\n      message: '正在调用AI进行八字分析，请耐心等待30-60秒...',\n      duration: 10000,\n      position: 'middle'\n    });\n    \n    // 使用配置好的http实例\n    const response = await http.get(`/api/bazi/result/${finalResultId}`);\n    \n    console.log('API响应:', response.status, response.data);\n    \n    if (response.data.code === 200) {\n      console.log('获取成功，更新数据');\n      // 确保从API获取数据并更新视图\n      baziData.value = response.data.data.baziChart;\n      aiAnalysis.value = response.data.data.aiAnalysis;\n      focusAreas.value = response.data.data.focusAreas;\n      \n      // 计算用户年龄\n      calculateAge();\n      \n      Toast.success('分析结果加载成功');\n    } else if (response.data.code === 202) {\n      // 服务器接受了请求但还在处理中（异步分析）\n      console.log('分析正在进行中，等待时间:', response.data.data.waitTime || '未知');\n      \n      // 显示清晰的等待提示，告知用户确切的等待情况\n      Toast.loading({\n        message: `AI正在专注分析您的八字命盘，已经分析了${response.data.data.waitTime || 0}秒，完整分析需要30-60秒，请稍候...`,\n        duration: 8000,\n        position: 'middle'\n      });\n      \n      // 预先显示部分数据\n      if (response.data.data.baziChart) {\n        baziData.value = response.data.data.baziChart;\n      }\n      if (response.data.data.aiAnalysis) {\n        aiAnalysis.value = response.data.data.aiAnalysis;\n      }\n      if (response.data.data.focusAreas) {\n        focusAreas.value = response.data.data.focusAreas;\n      }\n      \n      // 启动轮询，每15秒查询一次直到分析完成\n      // 增加轮询间隔，减少服务器压力\n      const pollInterval = setInterval(async () => {\n        try {\n          console.log('轮询查询分析结果...');\n          const pollResponse = await http.get(`/api/bazi/result/${finalResultId}`);\n          \n          // 添加更详细的日志\n          console.log(`轮询响应状态码: ${pollResponse.status}, 响应code: ${pollResponse.data.code}`);\n          \n          // 首先检查是否有分析结果\n          const hasAnalysis = pollResponse.data.data && \n                              pollResponse.data.data.aiAnalysis && \n                              Object.values(pollResponse.data.data.aiAnalysis).some(v => v);\n          \n          if (pollResponse.data.code === 200 || hasAnalysis) {\n            // 分析完成，更新数据\n            console.log('分析已完成，更新数据');\n            baziData.value = pollResponse.data.data.baziChart;\n            aiAnalysis.value = pollResponse.data.data.aiAnalysis;\n            focusAreas.value = pollResponse.data.data.focusAreas;\n            Toast.success('分析结果加载成功！您的八字命盘解析已完成');\n            clearInterval(pollInterval); // 停止轮询\n            \n            // 自动切换到AI分析结果标签\n            activeTab.value = 1;\n            \n            // 计算用户年龄\n            calculateAge();\n          } else if (pollResponse.data.code !== 202) {\n            // 如果返回其他错误码，停止轮询\n            console.error('轮询时发生错误:', pollResponse.data.message);\n            Toast.fail(`查询错误: ${pollResponse.data.message}`);\n            clearInterval(pollInterval); // 停止轮询\n          } else {\n            // 仍在分析中，更新等待时间\n            const waitTime = pollResponse.data.data.waitTime || 0;\n            const remainingTime = Math.max(0, 60 - waitTime);  // 假设总时间为60秒\n            \n            Toast.loading({\n              message: `AI正在专注分析中(${Math.round(waitTime/60*100)}%)，预计还需${remainingTime}秒完成...`,\n              duration: 5000,\n              position: 'middle'\n            });\n            console.log('仍在分析中，已等待:', waitTime, '秒');\n          }\n        } catch (err) {\n          console.error('轮询时出错:', err);\n          clearInterval(pollInterval); // 出错也停止轮询\n        }\n      }, 15000); // 每15秒查询一次，减少服务器压力\n      \n      // 设置最大轮询时间，防止无限轮询\n      setTimeout(() => {\n        if (pollInterval) {\n          clearInterval(pollInterval);\n          console.log('超过最大轮询时间，停止轮询');\n          \n          // 显示一个友好的提示，询问用户是否要继续等待\n          Dialog.confirm({\n            title: '分析耗时较长',\n            message: '您的八字命理分析正在进行中，但耗时较长。您可以选择继续等待或稍后再查看结果。',\n            confirmButtonText: '继续等待',\n            cancelButtonText: '稍后查看',\n          }).then(() => {\n            // 用户选择继续等待，重新启动轮询\n            window.location.reload();\n          }).catch(() => {\n            // 用户选择稍后查看，可以先返回首页\n            router.push('/');\n          });\n        }\n      }, 180000); // 最多轮询3分钟\n    } else {\n      console.error('API返回错误:', response.data.message);\n      Toast.fail(response.data.message || '获取分析结果失败');\n    }\n  } catch (error) {\n    console.error('获取分析结果出错:', error);\n    console.error('错误详情:', error.response ? error.response.data : '无响应数据');\n    Toast.fail('获取分析结果失败，请稍后重试');\n    \n    // 备选方案：如果ID以\"RES\"开头，尝试模拟支付再获取结果\n    if (finalResultId.startsWith('RES')) {\n      try {\n        console.log('尝试使用模拟支付接口...');\n        \n        // 显示加载提示\n        Toast.loading({\n          message: '正在模拟支付并进行八字分析，请耐心等待30-60秒...',\n          duration: 10000,\n          position: 'middle'\n        });\n        \n        const orderId = finalResultId.replace('RES', '');\n        const mockPaymentResponse = await http.post(`/api/order/mock/pay/${orderId}`);\n        \n        if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n          const newResultId = mockPaymentResponse.data.data.resultId;\n          console.log('获取到新的resultId:', newResultId);\n          \n          const retryResponse = await http.get(`/api/bazi/result/${newResultId}`);\n          if (retryResponse.data.code === 200) {\n            baziData.value = retryResponse.data.data.baziChart;\n            aiAnalysis.value = retryResponse.data.data.aiAnalysis;\n            focusAreas.value = retryResponse.data.data.focusAreas;\n            Toast.success('分析结果加载成功');\n            return;\n          }\n        }\n      } catch (mockError) {\n        console.error('模拟支付失败:', mockError);\n      }\n    }\n  }\n});\n\nconst getElementName = (element) => {\n  const elementNames = {\n    wood: '木',\n    fire: '火',\n    earth: '土',\n    metal: '金',\n    water: '水'\n  };\n  return elementNames[element] || element;\n};\n\nconst onClickLeft = () => {\n  router.push('/');\n};\n\nconst downloadPDF = async () => {\n  Toast.loading({\n    message: '正在生成并下载PDF报告...',\n    duration: 5000,\n    position: 'middle'\n  });\n  \n  if (!resultId) {\n    Toast.fail('缺少结果ID，无法生成报告');\n    return;\n  }\n  \n  // 使用流式下载模式\n  await downloadPDFAsStream();\n};\n\n// 新增直接流下载函数\nconst downloadPDFAsStream = async () => {\n  Toast.loading({\n    message: '正在生成PDF并下载报告...',\n    duration: 0,\n    position: 'middle',\n    forbidClick: true\n  });\n  \n  if (!resultId) {\n    Toast.clear();\n    Toast.fail('缺少结果ID，无法下载报告');\n    return;\n  }\n  \n  try {\n    console.log('直接下载报告, 结果ID:', resultId);\n    \n    // 请求PDF文件流\n    const response = await fetch(`/api/bazi/pdf/${resultId}?mode=stream`);\n    \n    // 检查错误\n    if (!response.ok) {\n      let errorMsg = '下载失败';\n      try {\n        const errorData = await response.json();\n        errorMsg = errorData.message || errorMsg;\n      } catch (e) {\n        // 如果不是JSON格式的错误，使用默认错误信息\n      }\n      throw new Error(errorMsg);\n    }\n    \n    // 检查内容类型\n    const contentType = response.headers.get('content-type');\n    if (!contentType || contentType.indexOf('application/pdf') === -1) {\n      throw new Error('服务器返回的不是PDF文件');\n    }\n    \n    // 转换为Blob对象\n    const blob = await response.blob();\n    \n    // 创建下载链接\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `八字命理分析_${resultId}.pdf`;\n    \n    // 触发下载\n    document.body.appendChild(a);\n    a.click();\n    \n    // 清理\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n    \n    Toast.clear();\n    Toast.success('报告下载成功');\n  } catch (error) {\n    console.error('直接下载PDF出错:', error);\n    Toast.clear();\n    Toast.fail(error.message || '下载失败，请稍后重试');\n    \n    // 如果直接下载失败，可以提示用户使用本地PDF生成\n    if (confirm('直接下载失败，是否要使用本地PDF生成方式？')) {\n      generatePDFLocally();\n    }\n  }\n};\n\n// 本地生成PDF的函数\nconst generatePDFLocally = async () => {\n  console.log('使用客户端jsPDF库生成PDF');\n  \n  // 获取内容元素\n  const element = document.querySelector('.result-container');\n  if (!element) {\n    throw new Error('找不到要转换的内容元素');\n  }\n  \n  Toast.loading({\n    message: '正在捕获页面内容...',\n    duration: 5000\n  });\n  \n  try {\n    // 使用html2canvas捕获内容\n    const canvas = await html2canvas(element, {\n      scale: 1,\n      useCORS: true,\n      logging: false,\n      windowWidth: document.documentElement.offsetWidth,\n      windowHeight: document.documentElement.offsetHeight,\n    });\n    \n    Toast.loading({\n      message: '正在生成PDF文件...',\n      duration: 5000\n    });\n        \n    // 创建PDF文档\n    const pdf = new jsPDF('p', 'mm', 'a4');\n        \n    // 计算尺寸和比例\n    const imgData = canvas.toDataURL('image/png');\n    const imgWidth = 210; // A4宽度，单位mm\n    const pageHeight = 297; // A4高度，单位mm\n    const imgHeight = canvas.height * imgWidth / canvas.width;\n    let heightLeft = imgHeight;\n    let position = 0;\n          \n    // 添加首页\n    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n    heightLeft -= pageHeight;\n    \n    // 如果内容超过一页，添加更多页\n    while (heightLeft > 0) {\n      position = heightLeft - imgHeight;\n      pdf.addPage();\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n    }\n    \n    // 添加页脚\n    const pageCount = pdf.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      pdf.setPage(i);\n      pdf.setFontSize(10);\n      pdf.setTextColor(150);\n      pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });\n    }\n    \n    // 保存PDF\n    pdf.save(`八字命理分析_${resultId}.pdf`);\n    \n    return true;\n  } catch (error) {\n    console.error('本地PDF生成错误:', error);\n    throw error;\n  }\n};\n\nconst shareResult = () => {\n  Toast.success('分享功能开发中');\n};\n\nconst reloadBaziData = async () => {\n  Toast.loading('正在重新加载数据...');\n  \n  try {\n    // 测试模拟支付接口以获取分析结果\n    if (!resultId) {\n      Toast.fail('缺少结果ID');\n      return;\n    }\n    \n    // 首先尝试使用模拟支付接口\n    try {\n      console.log('尝试使用模拟支付接口...');\n      \n      // 显示加载提示\n      Toast.loading({\n        message: '正在重新分析八字，请耐心等待30-60秒...',\n        duration: 10000,\n        position: 'middle'\n      });\n      \n      const mockPaymentResponse = await http.post(`/api/order/mock/pay/${resultId.replace('RES', '')}`);\n      console.log('模拟支付响应:', mockPaymentResponse.data);\n      \n      if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n        // 使用返回的resultId重新加载数据\n        const newResultId = mockPaymentResponse.data.data.resultId;\n        console.log('获取到新的resultId:', newResultId);\n        \n        const response = await http.get(`/api/bazi/result/${newResultId}`);\n        if (response.data.code === 200) {\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('数据加载成功');\n          return;\n        }\n      }\n    } catch (mockError) {\n      console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n    }\n    \n    // 如果模拟支付失败，尝试直接获取结果\n    const response = await http.get(`/api/bazi/result/${resultId}`);\n    \n    if (response.data.code === 200) {\n      baziData.value = response.data.data.baziChart;\n      aiAnalysis.value = response.data.data.aiAnalysis;\n      focusAreas.value = response.data.data.focusAreas;\n      Toast.success('数据加载成功');\n    } else {\n      Toast.fail(response.data.message || '加载失败');\n    }\n  } catch (error) {\n    console.error('重新加载失败:', error);\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\n  }\n};\n</script>\n\n<style scoped>\n.result-container {\n  padding-bottom: 20px;\n}\n\n.result-header {\n  text-align: center;\n  padding: 20px 0;\n  background-color: #f2f3f5;\n}\n\n.result-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #323233;\n}\n\n.result-header p {\n  margin: 10px 0 0;\n  font-size: 14px;\n  color: #969799;\n}\n\n.bazi-chart {\n  padding: 20px 16px;\n}\n\n.bazi-chart h3 {\n  margin: 20px 0 10px;\n  color: #323233;\n}\n\n.pillar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.stem {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #1989fa;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.branch {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #07c160;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.label {\n  font-size: 12px;\n  color: #646566;\n}\n\n.five-elements {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n}\n\n.element {\n  text-align: center;\n  flex: 1;\n}\n\n.element-name {\n  font-size: 14px;\n  color: #323233;\n}\n\n.element-value {\n  font-size: 18px;\n  font-weight: bold;\n  color: #1989fa;\n  margin-top: 5px;\n}\n\n.flowing-years {\n  margin: 20px 0;\n}\n\n.ai-analysis {\n  padding: 20px 16px;\n}\n\n.analysis-section {\n  margin-bottom: 20px;\n}\n\n.analysis-section h3 {\n  margin: 0 0 10px;\n  color: #323233;\n}\n\n.analysis-section p {\n  margin: 0;\n  font-size: 14px;\n  color: #646566;\n  line-height: 1.6;\n}\n\n.action-buttons {\n  padding: 20px 16px;\n}\n\n.age-notice {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}