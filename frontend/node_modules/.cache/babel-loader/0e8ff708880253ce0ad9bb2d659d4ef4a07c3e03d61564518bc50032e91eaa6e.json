{"ast":null,"code":"import { ref, onMounted, reactive, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nexport default {\n  __name: 'Result',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const resultId = route.params.id || route.query.resultId;\n    const activeTab = ref(0);\n    const loading = ref(false);\n\n    // 用户年龄，从URL参数或localStorage获取\n    const userAge = ref(null);\n    // 尝试从URL参数获取年龄\n    if (route.query.age && !isNaN(parseInt(route.query.age))) {\n      userAge.value = parseInt(route.query.age);\n    }\n    // 如果URL参数中没有年龄，尝试从localStorage获取\n    else if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n      userAge.value = parseInt(localStorage.getItem('userAge'));\n    }\n    // 记录用户年龄到控制台，便于调试\n    console.log('用户年龄:', userAge.value);\n\n    // 从分析文本中提取特定部分内容\n    const getAnalysisContent = sectionName => {\n      try {\n        // 如果是性格特点或学业发展，直接从对应字段获取\n        if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n          return aiAnalysis.value.personality;\n        }\n        if (sectionName === '学业发展' && aiAnalysis.value.education) {\n          return aiAnalysis.value.education;\n        }\n\n        // 处理健康分析文本，尝试提取学业、性格等内容\n        if (aiAnalysis.value.health) {\n          const healthText = aiAnalysis.value.health;\n\n          // 查找各部分的标记\n          const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n          if (sectionMatch && sectionMatch[1]) {\n            return sectionMatch[1].trim();\n          }\n\n          // 如果是未来发展，尝试从overall中提取\n          if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n            const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n            if (futureMatch && futureMatch[2]) {\n              return futureMatch[2].trim();\n            }\n          }\n        }\n\n        // 如果没有找到对应部分或提取失败，返回空字符串\n        return '';\n      } catch (e) {\n        console.error(`提取${sectionName}内容时出错:`, e);\n        return '';\n      }\n    };\n\n    // 修改数据初始化\n    const focusAreas = ref([]);\n\n    // 初始化八字数据\n    const baziData = ref({\n      yearPillar: null,\n      monthPillar: null,\n      dayPillar: null,\n      hourPillar: null,\n      fiveElements: null,\n      flowingYears: [],\n      shenSha: null,\n      daYun: null,\n      birthDate: null,\n      birthTime: null,\n      gender: null\n    });\n\n    // 初始化分析数据\n    const aiAnalysis = ref({\n      health: '',\n      wealth: '',\n      career: '',\n      relationship: '',\n      children: '',\n      overall: '',\n      personality: '',\n      education: '',\n      parents: '',\n      social: '',\n      future: ''\n    });\n    const testApiConnection = async () => {\n      try {\n        Toast.loading('正在测试API连接...');\n        // 使用配置好的http实例\n        const response = await axios.get('/');\n        console.log('API根路径响应:', response.data);\n        Toast.success('API连接成功');\n        return true;\n      } catch (error) {\n        console.error('API连接测试失败:', error);\n        Toast.fail('API连接失败，请检查后端服务');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 先测试API连接\n      const isApiConnected = await testApiConnection();\n      if (!isApiConnected) {\n        console.warn('API连接失败，将使用模拟数据');\n        loading.value = false;\n        return;\n      }\n      console.log('结果页面加载，ID:', resultId);\n\n      // 如果没有resultId，尝试从本地存储获取\n      const localResultId = localStorage.getItem('resultId');\n      if (!resultId && localResultId) {\n        console.log('从本地存储获取ID:', localResultId);\n      }\n      const finalResultId = resultId || localResultId;\n      if (!finalResultId) {\n        console.error('缺少结果ID，无法获取分析结果');\n        Toast.fail('缺少结果ID，无法获取分析结果');\n        loading.value = false;\n        return;\n      }\n\n      // 调用getBaziResult函数获取结果\n      await getBaziResult();\n    });\n    const getElementName = element => {\n      if (!element) return '--';\n      const elementNames = {\n        'wood': '木',\n        'fire': '火',\n        'earth': '土',\n        'metal': '金',\n        'water': '水'\n      };\n      return elementNames[element] || element;\n    };\n    const onClickLeft = () => {\n      router.push('/');\n    };\n\n    // 修改后的直接流下载函数，适应后端始终返回文件流\n    const downloadPDFAsStream = async () => {\n      Toast.loading({\n        message: '正在生成PDF并下载报告...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      if (!resultId) {\n        Toast.clear();\n        Toast.fail('缺少结果ID，无法下载报告');\n        return false;\n      }\n      try {\n        console.log('直接下载报告, 结果ID:', resultId);\n\n        // 创建下载链接，添加时间戳避免缓存问题\n        const timestamp = new Date().getTime();\n        const downloadUrl = `/api/bazi/pdf/${resultId}?t=${timestamp}`;\n        console.log('下载URL:', downloadUrl);\n\n        // 使用fetch API获取文件流\n        const response = await fetch(downloadUrl, {\n          method: 'GET',\n          cache: 'no-cache',\n          headers: {\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': '0'\n          }\n        });\n\n        // 检查错误\n        if (!response.ok) {\n          let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n          try {\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n              const errorData = await response.json();\n              errorMsg = errorData.message || errorMsg;\n            } else {\n              // 如果不是JSON格式的错误，尝试获取文本错误信息\n              const errorText = await response.text();\n              if (errorText) {\n                errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n              }\n            }\n          } catch (e) {\n            console.error('解析错误响应失败:', e);\n          }\n          throw new Error(errorMsg);\n        }\n\n        // 检查内容类型\n        const contentType = response.headers.get('content-type');\n        const disposition = response.headers.get('content-disposition');\n        console.log('响应内容类型:', contentType);\n        console.log('响应内容处置:', disposition);\n\n        // 确定文件名和扩展名\n        let filename = `八字命理分析_${resultId}.pdf`;\n        if (disposition && disposition.includes('filename=')) {\n          const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n\n        // 确定文件类型\n        const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n        if (!filename.endsWith(fileExtension)) {\n          filename = `八字命理分析_${resultId}.${fileExtension}`;\n        }\n\n        // 转换为Blob对象\n        const blob = await response.blob();\n\n        // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n        // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n        const isDownloadStarted = disposition && disposition.includes('attachment');\n        if (blob.size === 0 && !isDownloadStarted) {\n          throw new Error('下载的文件为空');\n        }\n\n        // 对于小文件，我们可以验证文件内容\n        // 但对于大文件或浏览器接管的下载，跳过验证\n        if (blob.size > 0 && blob.size < 1024 * 1024 && contentType && contentType.includes('pdf')) {\n          try {\n            // 读取文件头部以验证是否为有效的PDF\n            const fileReader = new FileReader();\n            const headerPromise = new Promise((resolve, reject) => {\n              fileReader.onloadend = e => resolve(e.target.result);\n              fileReader.onerror = e => reject(e);\n            });\n            fileReader.readAsArrayBuffer(blob.slice(0, 5));\n            const header = await headerPromise;\n            const headerView = new Uint8Array(header);\n            const headerString = String.fromCharCode.apply(null, headerView);\n            if (!headerString.startsWith('%PDF')) {\n              console.error('无效的PDF文件头:', headerString);\n              throw new Error('下载的不是有效的PDF文件');\n            }\n          } catch (e) {\n            console.error('验证PDF文件失败:', e);\n            // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n            if (!isDownloadStarted) {\n              throw new Error('验证PDF文件失败: ' + e.message);\n            } else {\n              console.warn('浏览器接管了下载，跳过PDF验证');\n            }\n          }\n        }\n\n        // 如果浏览器已经接管下载（通过Content-Disposition头部），\n        // 我们不需要手动创建下载链接\n        if (!isDownloadStarted) {\n          // 创建下载链接\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = filename;\n\n          // 触发下载\n          document.body.appendChild(a);\n          a.click();\n\n          // 清理\n          setTimeout(() => {\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n          }, 100);\n        }\n        Toast.clear();\n        Toast.success('报告下载成功');\n        return true;\n      } catch (error) {\n        console.error('直接下载PDF出错:', error);\n        Toast.clear();\n\n        // 检查是否是因为浏览器已经接管了下载而导致的错误\n        if (error.message && (error.message.includes('下载的文件为空') || error.message.includes('验证PDF文件失败'))) {\n          // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n          console.log('可能是浏览器已经接管了下载，不显示错误');\n          Toast.success('报告下载已开始，请等待浏览器完成下载');\n          return true;\n        }\n\n        // 显示错误信息\n        Toast.fail(error.message || '下载失败，请稍后重试');\n        return false;\n      }\n    };\n\n    // 修改主下载函数，添加重试逻辑\n    const downloadPDF = async () => {\n      Toast.loading({\n        message: '正在生成并下载PDF报告...',\n        duration: 5000,\n        position: 'middle'\n      });\n      if (!resultId) {\n        Toast.fail('缺少结果ID，无法生成报告');\n        return;\n      }\n\n      // 最多尝试3次下载\n      let attempts = 0;\n      let success = false;\n      while (attempts < 3 && !success) {\n        attempts++;\n        if (attempts > 1) {\n          console.log(`尝试第${attempts}次下载...`);\n          Toast.loading({\n            message: `尝试第${attempts}次下载...`,\n            duration: 2000\n          });\n          // 在重试之前等待一段时间\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n\n        // 使用流式下载模式，并处理返回值\n        success = await downloadPDFAsStream();\n\n        // 如果流式下载成功，直接返回，不再尝试其他方法\n        if (success === true) {\n          return;\n        }\n      }\n\n      // 如果多次尝试后仍然失败，提示用户\n      if (!success) {\n        Toast.clear();\n        Dialog.alert({\n          title: 'PDF下载失败',\n          message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。'\n        });\n      }\n    };\n\n    // 本地生成PDF的函数\n    const generatePDFLocally = async () => {\n      console.log('使用客户端jsPDF库生成PDF');\n\n      // 获取内容元素\n      const element = document.querySelector('.result-container');\n      if (!element) {\n        throw new Error('找不到要转换的内容元素');\n      }\n      Toast.loading({\n        message: '正在捕获页面内容...',\n        duration: 5000\n      });\n      try {\n        // 使用html2canvas捕获内容\n        const canvas = await html2canvas(element, {\n          scale: 1,\n          useCORS: true,\n          logging: false,\n          windowWidth: document.documentElement.offsetWidth,\n          windowHeight: document.documentElement.offsetHeight\n        });\n        Toast.loading({\n          message: '正在生成PDF文件...',\n          duration: 5000\n        });\n\n        // 创建PDF文档\n        const pdf = new jsPDF('p', 'mm', 'a4');\n\n        // 计算尺寸和比例\n        const imgData = canvas.toDataURL('image/png');\n        const imgWidth = 210; // A4宽度，单位mm\n        const pageHeight = 297; // A4高度，单位mm\n        const imgHeight = canvas.height * imgWidth / canvas.width;\n        let heightLeft = imgHeight;\n        let position = 0;\n\n        // 添加首页\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n\n        // 如果内容超过一页，添加更多页\n        while (heightLeft > 0) {\n          position = heightLeft - imgHeight;\n          pdf.addPage();\n          pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n          heightLeft -= pageHeight;\n        }\n\n        // 添加页脚\n        const pageCount = pdf.internal.getNumberOfPages();\n        for (let i = 1; i <= pageCount; i++) {\n          pdf.setPage(i);\n          pdf.setFontSize(10);\n          pdf.setTextColor(150);\n          pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, {\n            align: 'center'\n          });\n        }\n\n        // 保存PDF\n        pdf.save(`八字命理分析_${resultId}.pdf`);\n        return true;\n      } catch (error) {\n        console.error('本地PDF生成错误:', error);\n        throw error;\n      }\n    };\n    const shareResult = () => {\n      Toast.success('分享功能开发中');\n    };\n\n    // 处理本地PDF生成\n    const handleLocalPDFGeneration = async () => {\n      try {\n        Toast.loading({\n          message: '正在本地生成PDF...',\n          duration: 0,\n          forbidClick: true\n        });\n        await generatePDFLocally();\n        Toast.clear();\n        Toast.success('本地PDF生成成功');\n      } catch (error) {\n        console.error('本地PDF生成失败:', error);\n        Toast.clear();\n        Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n      }\n    };\n    const reloadBaziData = async () => {\n      Toast.loading('正在重新加载数据...');\n      try {\n        if (!resultId) {\n          Toast.fail('缺少结果ID');\n          return;\n        }\n\n        // 获取URL参数\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // 尝试使用模拟支付接口\n        try {\n          console.log('尝试使用模拟支付接口...');\n\n          // 显示加载提示\n          Toast.loading({\n            message: '正在重新分析八字，请耐心等待30-60秒...',\n            duration: 10000,\n            position: 'middle'\n          });\n\n          // 直接使用完整的resultId，不要去掉RES前缀\n          const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId}`, {\n            birthDate: urlParams.get('birthDate') || baziData.value.birthDate,\n            birthTime: urlParams.get('birthTime') || baziData.value.birthTime,\n            gender: urlParams.get('gender') || baziData.value.gender\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('模拟支付响应:', mockPaymentResponse.data);\n          if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n            // 使用返回的resultId重新加载数据\n            const newResultId = mockPaymentResponse.data.data.resultId;\n            console.log('获取到新的resultId:', newResultId);\n            const response = await axios.get(`/api/bazi/result/${newResultId}`);\n            if (response.data.code === 200) {\n              // 更新八字数据，使用空值合并运算符确保数据存在\n              baziData.value = {\n                yearPillar: response.data.data.baziChart?.yearPillar || null,\n                monthPillar: response.data.data.baziChart?.monthPillar || null,\n                dayPillar: response.data.data.baziChart?.dayPillar || null,\n                hourPillar: response.data.data.baziChart?.hourPillar || null,\n                fiveElements: response.data.data.baziChart?.fiveElements || null,\n                flowingYears: response.data.data.baziChart?.flowingYears || [],\n                shenSha: response.data.data.baziChart?.shenSha || null,\n                daYun: response.data.data.baziChart?.daYun || null,\n                birthDate: response.data.data.baziChart?.birthDate || null,\n                birthTime: response.data.data.baziChart?.birthTime || null,\n                gender: response.data.data.baziChart?.gender || null\n              };\n\n              // 更新AI分析结果\n              aiAnalysis.value = {\n                health: response.data.data.aiAnalysis?.health || '',\n                wealth: response.data.data.aiAnalysis?.wealth || '',\n                career: response.data.data.aiAnalysis?.career || '',\n                relationship: response.data.data.aiAnalysis?.relationship || '',\n                children: response.data.data.aiAnalysis?.children || '',\n                overall: response.data.data.aiAnalysis?.overall || '',\n                personality: response.data.data.aiAnalysis?.personality || '',\n                education: response.data.data.aiAnalysis?.education || '',\n                parents: response.data.data.aiAnalysis?.parents || '',\n                social: response.data.data.aiAnalysis?.social || '',\n                future: response.data.data.aiAnalysis?.future || ''\n              };\n              Toast.success('数据加载成功');\n              return;\n            }\n          }\n        } catch (mockError) {\n          console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n        }\n\n        // 如果模拟支付失败，尝试直接获取结果\n        const response = await axios.get(`/api/bazi/result/${resultId}`);\n        if (response.data.code === 200) {\n          // 更新八字数据，使用空值合并运算符确保数据存在\n          baziData.value = {\n            yearPillar: response.data.data.baziChart?.yearPillar || null,\n            monthPillar: response.data.data.baziChart?.monthPillar || null,\n            dayPillar: response.data.data.baziChart?.dayPillar || null,\n            hourPillar: response.data.data.baziChart?.hourPillar || null,\n            fiveElements: response.data.data.baziChart?.fiveElements || null,\n            flowingYears: response.data.data.baziChart?.flowingYears || [],\n            shenSha: response.data.data.baziChart?.shenSha || null,\n            daYun: response.data.data.baziChart?.daYun || null,\n            birthDate: response.data.data.baziChart?.birthDate || null,\n            birthTime: response.data.data.baziChart?.birthTime || null,\n            gender: response.data.data.baziChart?.gender || null\n          };\n\n          // 更新AI分析结果\n          aiAnalysis.value = {\n            health: response.data.data.aiAnalysis?.health || '',\n            wealth: response.data.data.aiAnalysis?.wealth || '',\n            career: response.data.data.aiAnalysis?.career || '',\n            relationship: response.data.data.aiAnalysis?.relationship || '',\n            children: response.data.data.aiAnalysis?.children || '',\n            overall: response.data.data.aiAnalysis?.overall || '',\n            personality: response.data.data.aiAnalysis?.personality || '',\n            education: response.data.data.aiAnalysis?.education || '',\n            parents: response.data.data.aiAnalysis?.parents || '',\n            social: response.data.data.aiAnalysis?.social || '',\n            future: response.data.data.aiAnalysis?.future || ''\n          };\n          Toast.success('数据加载成功');\n        } else {\n          Toast.fail(response.data.message || '加载失败');\n        }\n      } catch (error) {\n        console.error('重新加载失败:', error);\n        Toast.fail('加载失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 追问相关状态\n    const followupOptions = ref([{\n      id: 'marriage',\n      name: '婚姻感情',\n      selected: false,\n      paid: false\n    }, {\n      id: 'career',\n      name: '事业财运',\n      selected: false,\n      paid: false\n    }, {\n      id: 'children',\n      name: '子女情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'parents',\n      name: '父母情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'health',\n      name: '身体健康',\n      selected: false,\n      paid: false\n    }, {\n      id: 'education',\n      name: '学业',\n      selected: false,\n      paid: false\n    }, {\n      id: 'relationship',\n      name: '人际关系',\n      selected: false,\n      paid: false\n    }, {\n      id: 'fiveYears',\n      name: '近五年运势',\n      selected: false,\n      paid: false\n    }]);\n    const currentFollowup = ref(null);\n    const showFollowupDialog = ref(false);\n    const followupAnalysis = ref({});\n    const isLoadingFollowup = ref(false);\n\n    // 选择追问选项\n    const selectFollowupOption = option => {\n      // 如果已经支付过，直接显示结果\n      if (option.paid) {\n        // 显示已支付的分析结果\n        currentFollowup.value = option;\n        return;\n      }\n\n      // 否则设置当前选择的追问选项\n      currentFollowup.value = option;\n      showFollowupDialog.value = true;\n    };\n\n    // 支付追问费用\n    const payForFollowup = async () => {\n      if (!currentFollowup.value) return;\n      try {\n        isLoadingFollowup.value = true;\n        Toast.loading({\n          message: '处理中...',\n          forbidClick: true,\n          duration: 0\n        });\n\n        // 创建追问订单\n        const orderResponse = await axios.post('/api/order/create/followup', {\n          resultId: resultId,\n          area: currentFollowup.value.id\n        });\n        if (orderResponse.data.code === 200) {\n          const followupOrderId = orderResponse.data.data.orderId;\n          console.log('追问订单创建成功:', followupOrderId);\n\n          // 模拟支付\n          const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\n            birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\n            birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\n            gender: baziData.value?.gender || urlParams.get('gender'),\n            area: currentFollowup.value.id,\n            resultId: resultId\n          });\n          if (paymentResponse.data.code === 200) {\n            console.log('追问支付成功:', paymentResponse.data);\n\n            // 获取追问分析结果\n            await getFollowupAnalysis(currentFollowup.value.id);\n\n            // 标记为已支付\n            const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n            if (index !== -1) {\n              followupOptions.value[index].paid = true;\n            }\n            showFollowupDialog.value = false;\n            Toast.success('分析完成');\n          } else {\n            Toast.fail('支付失败');\n          }\n        } else {\n          Toast.fail('创建订单失败');\n        }\n      } catch (error) {\n        console.error('追问支付过程出错:', error);\n        Toast.fail('处理失败，请重试');\n      } finally {\n        isLoadingFollowup.value = false;\n        Toast.clear();\n      }\n    };\n\n    // 获取追问分析结果\n    const getFollowupAnalysis = async area => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`/api/bazi/followup/${resultId}/${area}`);\n        if (response.data.code === 200) {\n          console.log('获取追问分析成功:', response.data);\n          followupAnalysis.value[area] = response.data.data.analysis;\n          return response.data.data.analysis;\n        } else {\n          console.error('获取追问分析失败:', response.data);\n          return null;\n        }\n      } catch (error) {\n        console.error('获取追问分析出错:', error);\n        return null;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 检查已支付的追问\n    const checkPaidFollowups = async () => {\n      try {\n        const response = await axios.get(`/api/bazi/followup/list/${resultId}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            const isPaid = paidFollowups.some(f => f.area === option.id);\n            if (isPaid) {\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n        }\n      } catch (error) {\n        console.error('检查已支付追问出错:', error);\n      }\n    };\n\n    // 修改getBaziResult函数\n    const getBaziResult = async () => {\n      loading.value = true;\n      try {\n        console.log('获取八字分析结果，ID:', resultId);\n        const response = await axios.get(`/api/bazi/result/${resultId}`);\n        console.log('八字分析结果:', response.data);\n        if (response.data.code === 200 && response.data.data) {\n          // 更新八字数据，使用空值合并运算符确保数据存在\n          baziData.value = {\n            yearPillar: response.data.data.baziChart?.yearPillar || null,\n            monthPillar: response.data.data.baziChart?.monthPillar || null,\n            dayPillar: response.data.data.baziChart?.dayPillar || null,\n            hourPillar: response.data.data.baziChart?.hourPillar || null,\n            fiveElements: response.data.data.baziChart?.fiveElements || null,\n            flowingYears: response.data.data.baziChart?.flowingYears || [],\n            shenSha: response.data.data.baziChart?.shenSha || null,\n            daYun: response.data.data.baziChart?.daYun || null,\n            birthDate: response.data.data.baziChart?.birthDate || null,\n            birthTime: response.data.data.baziChart?.birthTime || null,\n            gender: response.data.data.baziChart?.gender || null\n          };\n\n          // 更新AI分析结果\n          aiAnalysis.value = {\n            health: response.data.data.aiAnalysis?.health || '',\n            wealth: response.data.data.aiAnalysis?.wealth || '',\n            career: response.data.data.aiAnalysis?.career || '',\n            relationship: response.data.data.aiAnalysis?.relationship || '',\n            children: response.data.data.aiAnalysis?.children || '',\n            overall: response.data.data.aiAnalysis?.overall || '',\n            personality: response.data.data.aiAnalysis?.personality || '',\n            education: response.data.data.aiAnalysis?.education || '',\n            parents: response.data.data.aiAnalysis?.parents || '',\n            social: response.data.data.aiAnalysis?.social || '',\n            future: response.data.data.aiAnalysis?.future || ''\n          };\n\n          // 检查数据完整性\n          if (!baziData.value.yearPillar || !baziData.value.monthPillar || !baziData.value.dayPillar || !baziData.value.hourPillar) {\n            console.warn('八字数据不完整');\n            Toast.fail('八字数据不完整，请重新生成');\n            return;\n          }\n\n          // 初始化追问选项\n          initFollowupOptions();\n\n          // 加载已支付的追问分析结果\n          await loadFollowupResults();\n          Toast.success('分析结果加载成功');\n        } else {\n          console.error('获取八字分析结果失败:', response.data.message);\n          Toast.fail(response.data.message || '获取分析结果失败');\n        }\n      } catch (error) {\n        console.error('获取八字分析结果出错:', error);\n        Toast.fail('获取分析结果失败，请稍后再试');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 添加缺失的函数\n    // 初始化追问选项\n    const initFollowupOptions = () => {\n      // 根据用户年龄调整追问选项\n      if (userAge.value !== null) {\n        if (userAge.value < 6) {\n          // 为婴幼儿调整选项\n          followupOptions.value = followupOptions.value.filter(option => ['health', 'personality', 'education', 'parents'].includes(option.id));\n        } else if (userAge.value < 18) {\n          // 为未成年人调整选项\n          followupOptions.value = followupOptions.value.filter(option => !['marriage', 'career'].includes(option.id));\n        }\n      }\n      console.log('初始化追问选项完成:', followupOptions.value);\n    };\n\n    // 加载已支付的追问分析结果\n    const loadFollowupResults = async () => {\n      try {\n        // 检查是否有结果ID\n        if (!resultId) {\n          console.warn('缺少结果ID，无法加载追问分析');\n          return;\n        }\n\n        // 调用API获取已支付的追问列表\n        const response = await axios.get(`/api/bazi/followup/list/${resultId}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            const isPaid = paidFollowups.some(f => f.area === option.id);\n            if (isPaid) {\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n          console.log('已加载追问分析结果:', paidFollowups);\n        }\n      } catch (error) {\n        console.error('加载追问分析结果出错:', error);\n        // 出错时不显示错误提示，静默失败\n      }\n    };\n    const __returned__ = {\n      route,\n      router,\n      resultId,\n      activeTab,\n      loading,\n      userAge,\n      getAnalysisContent,\n      focusAreas,\n      baziData,\n      aiAnalysis,\n      testApiConnection,\n      getElementName,\n      onClickLeft,\n      downloadPDFAsStream,\n      downloadPDF,\n      generatePDFLocally,\n      shareResult,\n      handleLocalPDFGeneration,\n      reloadBaziData,\n      followupOptions,\n      currentFollowup,\n      showFollowupDialog,\n      followupAnalysis,\n      isLoadingFollowup,\n      selectFollowupOption,\n      payForFollowup,\n      getFollowupAnalysis,\n      checkPaidFollowups,\n      getBaziResult,\n      initFollowupOptions,\n      loadFollowupResults,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get jsPDF() {\n        return jsPDF;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","useRoute","useRouter","Toast","Dialog","jsPDF","html2canvas","axios","route","router","resultId","params","id","query","activeTab","loading","userAge","age","isNaN","parseInt","value","localStorage","getItem","console","log","getAnalysisContent","sectionName","aiAnalysis","personality","education","health","healthText","sectionMatch","match","RegExp","trim","overall","futureMatch","e","error","focusAreas","baziData","yearPillar","monthPillar","dayPillar","hourPillar","fiveElements","flowingYears","shenSha","daYun","birthDate","birthTime","gender","wealth","career","relationship","children","parents","social","future","testApiConnection","response","get","data","success","fail","isApiConnected","warn","localResultId","finalResultId","getBaziResult","getElementName","element","elementNames","onClickLeft","push","downloadPDFAsStream","message","duration","position","forbidClick","clear","timestamp","Date","getTime","downloadUrl","fetch","method","cache","headers","ok","errorMsg","status","contentType","includes","errorData","json","errorText","text","substring","Error","disposition","filename","filenameMatch","fileExtension","endsWith","blob","isDownloadStarted","size","fileReader","FileReader","headerPromise","Promise","resolve","reject","onloadend","target","result","onerror","readAsArrayBuffer","slice","header","headerView","Uint8Array","headerString","String","fromCharCode","apply","startsWith","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","setTimeout","revokeObjectURL","removeChild","downloadPDF","attempts","alert","title","generatePDFLocally","querySelector","canvas","scale","useCORS","logging","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","pdf","imgData","toDataURL","imgWidth","pageHeight","imgHeight","height","width","heightLeft","addImage","addPage","pageCount","internal","getNumberOfPages","i","setPage","setFontSize","setTextColor","pageSize","getWidth","getHeight","align","save","shareResult","handleLocalPDFGeneration","reloadBaziData","urlParams","URLSearchParams","location","search","mockPaymentResponse","post","code","newResultId","baziChart","mockError","followupOptions","name","selected","paid","currentFollowup","showFollowupDialog","followupAnalysis","isLoadingFollowup","selectFollowupOption","option","payForFollowup","orderResponse","area","followupOrderId","orderId","paymentResponse","getFollowupAnalysis","index","findIndex","o","analysis","checkPaidFollowups","followups","paidFollowups","map","isPaid","some","f","initFollowupOptions","loadFollowupResults","filter"],"sources":["D:/Python/20250603开发八字命理AI指导功能页码/开发八字命理AI指导功能页码/frontend/src/Result.vue"],"sourcesContent":["<template>\r\n  <div class=\"result-container\">\r\n    <van-nav-bar\r\n      title=\"八字分析结果\"\r\n      left-text=\"返回\"\r\n      left-arrow\r\n      @click-left=\"onClickLeft\"\r\n    />\r\n    \r\n    <div class=\"result-header\">\r\n      <h2>您的八字命盘分析</h2>\r\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\r\n    </div>\r\n    \r\n    <van-tabs v-model=\"activeTab\" sticky>\r\n      <van-tab title=\"命盘信息\">\r\n        <div class=\"bazi-chart\">\r\n          <h3>八字命盘</h3>\r\n          <van-grid :column-num=\"4\" :border=\"false\" v-if=\"baziData && baziData.yearPillar && baziData.monthPillar && baziData.dayPillar && baziData.hourPillar\">\r\n            <van-grid-item>\r\n              <template #default>\r\n                <div class=\"pillar\">\r\n                  <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\r\n                  <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\r\n                  <div class=\"label\">年柱</div>\r\n                </div>\r\n              </template>\r\n            </van-grid-item>\r\n            <van-grid-item>\r\n              <template #default>\r\n                <div class=\"pillar\">\r\n                  <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\r\n                  <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\r\n                  <div class=\"label\">月柱</div>\r\n                </div>\r\n              </template>\r\n            </van-grid-item>\r\n            <van-grid-item>\r\n              <template #default>\r\n                <div class=\"pillar\">\r\n                  <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\r\n                  <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\r\n                  <div class=\"label\">日柱</div>\r\n                </div>\r\n              </template>\r\n            </van-grid-item>\r\n            <van-grid-item>\r\n              <template #default>\r\n                <div class=\"pillar\">\r\n                  <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\r\n                  <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\r\n                  <div class=\"label\">时柱</div>\r\n                </div>\r\n              </template>\r\n            </van-grid-item>\r\n          </van-grid>\r\n          \r\n          <!-- 数据缺失时显示占位符 -->\r\n          <van-grid :column-num=\"4\" :border=\"false\" v-else>\r\n            <van-grid-item v-for=\"pillar in ['年柱', '月柱', '日柱', '时柱']\" :key=\"pillar\">\r\n              <template #default>\r\n                <div class=\"pillar\">\r\n                  <div class=\"stem placeholder\">--</div>\r\n                  <div class=\"branch placeholder\">--</div>\r\n                  <div class=\"label\">{{ pillar }}</div>\r\n                </div>\r\n              </template>\r\n            </van-grid-item>\r\n          </van-grid>\r\n          \r\n          <h3>五行分布</h3>\r\n          <div class=\"five-elements\" v-if=\"baziData && baziData.fiveElements\">\r\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\r\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\r\n              <div class=\"element-value\">{{ value }}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"five-elements\" v-else>\r\n            <div class=\"element\" v-for=\"element in ['wood', 'fire', 'earth', 'metal', 'water']\" :key=\"element\">\r\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\r\n              <div class=\"element-value\">--</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 添加神煞显示 -->\r\n          <h3>神煞信息</h3>\r\n          <div class=\"shen-sha-info\" v-if=\"baziData && baziData.shenSha\">\r\n            <van-cell-group inset>\r\n              <van-cell title=\"日冲\" :value=\"baziData.shenSha.dayChong || '无'\" />\r\n              <van-cell title=\"值神\" :value=\"baziData.shenSha.zhiShen || '无'\" />\r\n              <van-cell title=\"彭祖百忌\" :value=\"(baziData.shenSha.pengZuGan && baziData.shenSha.pengZuZhi) ? `干：${baziData.shenSha.pengZuGan} 支：${baziData.shenSha.pengZuZhi}` : '无'\" />\r\n              <van-cell title=\"喜神方位\" :value=\"baziData.shenSha.xiShen || '无'\" />\r\n              <van-cell title=\"福神方位\" :value=\"baziData.shenSha.fuShen || '无'\" />\r\n              <van-cell title=\"财神方位\" :value=\"baziData.shenSha.caiShen || '无'\" />\r\n              <van-cell title=\"本命神煞\" :value=\"baziData.shenSha.benMing && baziData.shenSha.benMing.length ? baziData.shenSha.benMing.join('、') : '无'\" />\r\n              <van-cell title=\"年干神煞\" :value=\"baziData.shenSha.yearGan && baziData.shenSha.yearGan.length ? baziData.shenSha.yearGan.join('、') : '无'\" />\r\n              <van-cell title=\"年支神煞\" :value=\"baziData.shenSha.yearZhi && baziData.shenSha.yearZhi.length ? baziData.shenSha.yearZhi.join('、') : '无'\" />\r\n              <van-cell title=\"日干神煞\" :value=\"baziData.shenSha.dayGan && baziData.shenSha.dayGan.length ? baziData.shenSha.dayGan.join('、') : '无'\" />\r\n              <van-cell title=\"日支神煞\" :value=\"baziData.shenSha.dayZhi && baziData.shenSha.dayZhi.length ? baziData.shenSha.dayZhi.join('、') : '无'\" />\r\n            </van-cell-group>\r\n          </div>\r\n          <div class=\"shen-sha-info\" v-else>\r\n            <van-cell-group inset>\r\n              <van-cell title=\"神煞信息\" value=\"暂无数据\" />\r\n            </van-cell-group>\r\n          </div>\r\n          \r\n          <!-- 添加大运显示 -->\r\n          <h3>大运信息</h3>\r\n          <div class=\"da-yun-info\" v-if=\"baziData && baziData.daYun\">\r\n            <van-cell-group inset>\r\n              <van-cell title=\"起运年龄\" :value=\"`${baziData.daYun.startAge}岁`\" />\r\n              <van-cell title=\"起运年份\" :value=\"`${baziData.daYun.startYear}年`\" />\r\n              <van-cell title=\"排法\" :value=\"baziData.daYun.isForward ? '顺排' : '逆排'\" />\r\n            </van-cell-group>\r\n            \r\n            <!-- 大运列表 -->\r\n            <div class=\"da-yun-list\" v-if=\"baziData.daYun.daYunList && baziData.daYun.daYunList.length\">\r\n              <van-cell-group inset>\r\n                <van-cell v-for=\"(yun, index) in baziData.daYun.daYunList\" :key=\"index\"\r\n                          :title=\"`第${yun.index}运 (${yun.startAge}-${yun.endAge}岁)`\"\r\n                          :value=\"`${yun.ganZhi} ${yun.element}`\">\r\n                  <template #label>\r\n                    <div>{{yun.startYear}}-{{yun.endYear}}年</div>\r\n                    <div>十神: {{yun.shiShen}}</div>\r\n                    <div>旺衰: {{yun.wangShuai}}</div>\r\n                    <div>纳音: {{yun.naYin}}</div>\r\n                  </template>\r\n                </van-cell>\r\n              </van-cell-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"da-yun-info\" v-else>\r\n            <van-cell-group inset>\r\n              <van-cell title=\"大运信息\" value=\"暂无数据\" />\r\n            </van-cell-group>\r\n          </div>\r\n          \r\n          <h3>流年信息</h3>\r\n          <div class=\"flowing-years\" v-if=\"baziData && baziData.flowingYears && baziData.flowingYears.length\">\r\n            <van-cell-group inset>\r\n              <van-cell v-for=\"(year, index) in baziData.flowingYears\" :key=\"index\"\r\n                :title=\"`${year.year || '--'}年: ${year.heavenlyStem || '--'}${year.earthlyBranch || '--'} (${getElementName(year.element) || '--'})`\"\r\n                :value=\"year.shenSha && year.shenSha.length ? year.shenSha.join('、') : '无神煞'\"\r\n              />\r\n            </van-cell-group>\r\n          </div>\r\n          <div class=\"flowing-years\" v-else>\r\n            <van-cell-group inset>\r\n              <van-cell title=\"流年信息\" value=\"暂无数据\" />\r\n            </van-cell-group>\r\n          </div>\r\n        </div>\r\n      </van-tab>\r\n      \r\n      <van-tab title=\"AI分析结果\">\r\n        <div class=\"ai-analysis\">\r\n          <div v-if=\"userAge !== null && userAge < 0\" class=\"age-notice\">\r\n            <van-notice-bar\r\n              color=\"#1989fa\"\r\n              background=\"#ecf9ff\"\r\n              left-icon=\"info-o\"\r\n            >\r\n              此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。\r\n            </van-notice-bar>\r\n          </div>\r\n          <div v-else-if=\"userAge !== null && userAge < 6\" class=\"age-notice\">\r\n            <van-notice-bar\r\n              color=\"#1989fa\"\r\n              background=\"#ecf9ff\"\r\n              left-icon=\"info-o\"\r\n            >\r\n              此分析针对婴幼儿({{userAge}}岁)，重点关注性格特点、天赋才能和健康发展趋势。\r\n            </van-notice-bar>\r\n          </div>\r\n          <div v-else-if=\"userAge !== null && userAge < 18\" class=\"age-notice\">\r\n            <van-notice-bar\r\n              color=\"#1989fa\"\r\n              background=\"#ecf9ff\"\r\n              left-icon=\"info-o\"\r\n            >\r\n              此分析针对未成年人({{userAge}}岁)，重点关注性格特点、学业发展和健康状况。\r\n            </van-notice-bar>\r\n          </div>\r\n          \r\n          <div class=\"analysis-section\">\r\n            <h3>身体健康</h3>\r\n            <p>{{ aiAnalysis.health }}</p>\r\n          </div>\r\n          \r\n          <div class=\"analysis-section\">\r\n            <h3>性格特点</h3>\r\n            <p>{{ aiAnalysis.personality || getAnalysisContent('性格特点') }}</p>\r\n          </div>\r\n          \r\n          <!-- 学业分析（对所有年龄段显示，但侧重点不同） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>学业分析</h3>\r\n            <p>{{ aiAnalysis.education || getAnalysisContent('学业分析') }}</p>\r\n          </div>\r\n          \r\n          <!-- 父母情况（所有年龄段都显示） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>父母情况</h3>\r\n            <p>{{ aiAnalysis.parents || '暂无父母情况分析' }}</p>\r\n          </div>\r\n          \r\n          <!-- 人际关系（所有年龄段都显示） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>人际关系</h3>\r\n            <p>{{ aiAnalysis.social || '暂无人际关系分析' }}</p>\r\n          </div>\r\n          \r\n          <!-- 财运分析（18岁以上显示，或者标注为未来发展） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>{{ userAge !== null && userAge >= 18 ? '财运分析' : '未来财运发展' }}</h3>\r\n            <p>{{ aiAnalysis.wealth }}</p>\r\n          </div>\r\n          \r\n          <!-- 事业发展（18岁以上显示，或者标注为未来发展） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>{{ userAge !== null && userAge >= 18 ? '事业发展' : '未来事业发展' }}</h3>\r\n            <p>{{ aiAnalysis.career }}</p>\r\n          </div>\r\n          \r\n          <!-- 婚姻感情（18岁以上显示，或者标注为未来发展） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>{{ userAge !== null && userAge >= 18 ? '婚姻感情' : '未来感情发展' }}</h3>\r\n            <p>{{ aiAnalysis.relationship }}</p>\r\n          </div>\r\n          \r\n          <!-- 子女情况（18岁以上显示，或者标注为未来发展） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>{{ userAge !== null && userAge >= 18 ? '子女情况' : '未来子女缘分' }}</h3>\r\n            <p>{{ aiAnalysis.children }}</p>\r\n          </div>\r\n          \r\n          <!-- 近五年运势（所有年龄段都显示） -->\r\n          <div class=\"analysis-section\">\r\n            <h3>近五年运势</h3>\r\n            <p>{{ aiAnalysis.future || getAnalysisContent('近五年运势') || aiAnalysis.overall }}</p>\r\n          </div>\r\n          \r\n          <div class=\"analysis-section\">\r\n            <h3>综合建议</h3>\r\n            <p>{{ aiAnalysis.overall }}</p>\r\n          </div>\r\n        </div>\r\n      </van-tab>\r\n    </van-tabs>\r\n    \r\n    <div class=\"action-buttons\">\r\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\r\n        下载PDF报告\r\n      </van-button>\r\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\r\n        分享结果\r\n      </van-button>\r\n      \r\n      <!-- 本地生成PDF按钮 -->\r\n      <van-button plain type=\"info\" \r\n                  block \r\n                  style=\"margin-top: 10px;\" \r\n                  @click=\"handleLocalPDFGeneration\">\r\n        本地生成PDF\r\n      </van-button>\r\n      \r\n      <!-- 调试按钮 -->\r\n      <van-button plain type=\"warning\" \r\n                  block \r\n                  style=\"margin-top: 10px;\" \r\n                  @click=\"reloadBaziData\">\r\n        重新加载分析数据\r\n      </van-button>\r\n    </div>\r\n    \r\n    <!-- 添加追问部分 -->\r\n    <div class=\"followup-section\" v-if=\"baziData && !loading\">\r\n      <h2 class=\"section-title\">深度分析</h2>\r\n      <p class=\"section-desc\">选择您感兴趣的领域，进行深度分析</p>\r\n      \r\n      <div class=\"followup-options\">\r\n        <div \r\n          v-for=\"option in followupOptions\" \r\n          :key=\"option.id\" \r\n          class=\"followup-option\" \r\n          :class=\"{ 'paid': option.paid }\"\r\n          @click=\"selectFollowupOption(option)\"\r\n        >\r\n          <div class=\"option-content\">\r\n            <span class=\"option-name\">{{ option.name }}</span>\r\n            <span class=\"option-status\" v-if=\"option.paid\">已解锁</span>\r\n            <span class=\"option-status\" v-else>￥9.9</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 已支付的追问分析结果展示 -->\r\n      <div v-if=\"currentFollowup && currentFollowup.paid\" class=\"followup-result\">\r\n        <h3>{{ currentFollowup.name }}分析</h3>\r\n        <div class=\"analysis-content\">\r\n          {{ followupAnalysis[currentFollowup.id] || '暂无分析结果' }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 追问支付对话框 -->\r\n    <van-dialog\r\n      v-model:show=\"showFollowupDialog\"\r\n      title=\"深度分析\"\r\n      confirm-button-text=\"支付 ￥9.9\"\r\n      @confirm=\"payForFollowup\"\r\n      :before-close=\"() => !isLoadingFollowup\"\r\n    >\r\n      <div class=\"followup-dialog-content\">\r\n        <p>您选择了「{{ currentFollowup?.name }}」深度分析</p>\r\n        <p>支付后，AI将根据您的八字和流年运势，为您提供专业的命理分析</p>\r\n      </div>\r\n    </van-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive, computed } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { Toast, Dialog } from 'vant';\r\nimport { jsPDF } from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport axios from 'axios';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst resultId = route.params.id || route.query.resultId;\r\nconst activeTab = ref(0);\r\nconst loading = ref(false);\r\n\r\n// 用户年龄，从URL参数或localStorage获取\r\nconst userAge = ref(null);\r\n// 尝试从URL参数获取年龄\r\nif (route.query.age && !isNaN(parseInt(route.query.age))) {\r\n  userAge.value = parseInt(route.query.age);\r\n} \r\n// 如果URL参数中没有年龄，尝试从localStorage获取\r\nelse if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\r\n  userAge.value = parseInt(localStorage.getItem('userAge'));\r\n}\r\n// 记录用户年龄到控制台，便于调试\r\nconsole.log('用户年龄:', userAge.value);\r\n\r\n// 从分析文本中提取特定部分内容\r\nconst getAnalysisContent = (sectionName) => {\r\n  try {\r\n    // 如果是性格特点或学业发展，直接从对应字段获取\r\n    if (sectionName === '性格特点' && aiAnalysis.value.personality) {\r\n      return aiAnalysis.value.personality;\r\n    }\r\n    \r\n    if (sectionName === '学业发展' && aiAnalysis.value.education) {\r\n      return aiAnalysis.value.education;\r\n    }\r\n    \r\n    // 处理健康分析文本，尝试提取学业、性格等内容\r\n    if (aiAnalysis.value.health) {\r\n      const healthText = aiAnalysis.value.health;\r\n      \r\n      // 查找各部分的标记\r\n      const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\r\n      if (sectionMatch && sectionMatch[1]) {\r\n        return sectionMatch[1].trim();\r\n      }\r\n      \r\n      // 如果是未来发展，尝试从overall中提取\r\n      if (sectionName === '未来发展' && aiAnalysis.value.overall) {\r\n        const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\r\n        if (futureMatch && futureMatch[2]) {\r\n          return futureMatch[2].trim();\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 如果没有找到对应部分或提取失败，返回空字符串\r\n    return '';\r\n  } catch (e) {\r\n    console.error(`提取${sectionName}内容时出错:`, e);\r\n    return '';\r\n  }\r\n};\r\n\r\n// 修改数据初始化\r\nconst focusAreas = ref([]);\r\n\r\n// 初始化八字数据\r\nconst baziData = ref({\r\n  yearPillar: null,\r\n  monthPillar: null,\r\n  dayPillar: null,\r\n  hourPillar: null,\r\n  fiveElements: null,\r\n  flowingYears: [],\r\n  shenSha: null,\r\n  daYun: null,\r\n  birthDate: null,\r\n  birthTime: null,\r\n  gender: null\r\n});\r\n\r\n// 初始化分析数据\r\nconst aiAnalysis = ref({\r\n  health: '',\r\n  wealth: '',\r\n  career: '',\r\n  relationship: '',\r\n  children: '',\r\n  overall: '',\r\n  personality: '',\r\n  education: '',\r\n  parents: '',\r\n  social: '',\r\n  future: ''\r\n});\r\n\r\nconst testApiConnection = async () => {\r\n  try {\r\n    Toast.loading('正在测试API连接...');\r\n    // 使用配置好的http实例\r\n    const response = await axios.get('/');\r\n    console.log('API根路径响应:', response.data);\r\n    Toast.success('API连接成功');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('API连接测试失败:', error);\r\n    Toast.fail('API连接失败，请检查后端服务');\r\n    return false;\r\n  }\r\n};\r\n\r\nonMounted(async () => {\r\n  // 先测试API连接\r\n  const isApiConnected = await testApiConnection();\r\n  if (!isApiConnected) {\r\n    console.warn('API连接失败，将使用模拟数据');\r\n    loading.value = false;\r\n    return;\r\n  }\r\n  \r\n  console.log('结果页面加载，ID:', resultId);\r\n  \r\n  // 如果没有resultId，尝试从本地存储获取\r\n  const localResultId = localStorage.getItem('resultId');\r\n  if (!resultId && localResultId) {\r\n    console.log('从本地存储获取ID:', localResultId);\r\n  }\r\n  \r\n  const finalResultId = resultId || localResultId;\r\n  \r\n  if (!finalResultId) {\r\n    console.error('缺少结果ID，无法获取分析结果');\r\n    Toast.fail('缺少结果ID，无法获取分析结果');\r\n    loading.value = false;\r\n    return;\r\n  }\r\n  \r\n  // 调用getBaziResult函数获取结果\r\n  await getBaziResult();\r\n});\r\n\r\nconst getElementName = (element) => {\r\n  if (!element) return '--';\r\n  \r\n  const elementNames = {\r\n    'wood': '木',\r\n    'fire': '火',\r\n    'earth': '土',\r\n    'metal': '金',\r\n    'water': '水'\r\n  };\r\n  \r\n  return elementNames[element] || element;\r\n};\r\n\r\nconst onClickLeft = () => {\r\n  router.push('/');\r\n};\r\n\r\n// 修改后的直接流下载函数，适应后端始终返回文件流\r\nconst downloadPDFAsStream = async () => {\r\n  Toast.loading({\r\n    message: '正在生成PDF并下载报告...',\r\n    duration: 0,\r\n    position: 'middle',\r\n    forbidClick: true\r\n  });\r\n  \r\n  if (!resultId) {\r\n    Toast.clear();\r\n    Toast.fail('缺少结果ID，无法下载报告');\r\n    return false;\r\n  }\r\n  \r\n  try {\r\n    console.log('直接下载报告, 结果ID:', resultId);\r\n    \r\n    // 创建下载链接，添加时间戳避免缓存问题\r\n    const timestamp = new Date().getTime();\r\n    const downloadUrl = `/api/bazi/pdf/${resultId}?t=${timestamp}`;\r\n    console.log('下载URL:', downloadUrl);\r\n    \r\n    // 使用fetch API获取文件流\r\n    const response = await fetch(downloadUrl, {\r\n      method: 'GET',\r\n      cache: 'no-cache',\r\n      headers: {\r\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n        'Pragma': 'no-cache',\r\n        'Expires': '0'\r\n      }\r\n    });\r\n    \r\n    // 检查错误\r\n    if (!response.ok) {\r\n      let errorMsg = `下载失败: HTTP错误 ${response.status}`;\r\n      try {\r\n        const contentType = response.headers.get('content-type');\r\n        if (contentType && contentType.includes('application/json')) {\r\n          const errorData = await response.json();\r\n          errorMsg = errorData.message || errorMsg;\r\n        } else {\r\n          // 如果不是JSON格式的错误，尝试获取文本错误信息\r\n          const errorText = await response.text();\r\n          if (errorText) {\r\n            errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error('解析错误响应失败:', e);\r\n      }\r\n      throw new Error(errorMsg);\r\n    }\r\n    \r\n    // 检查内容类型\r\n    const contentType = response.headers.get('content-type');\r\n    const disposition = response.headers.get('content-disposition');\r\n    \r\n    console.log('响应内容类型:', contentType);\r\n    console.log('响应内容处置:', disposition);\r\n    \r\n    // 确定文件名和扩展名\r\n    let filename = `八字命理分析_${resultId}.pdf`;\r\n    if (disposition && disposition.includes('filename=')) {\r\n      const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\r\n      if (filenameMatch && filenameMatch[1]) {\r\n        filename = filenameMatch[1];\r\n      }\r\n    }\r\n    \r\n    // 确定文件类型\r\n    const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\r\n    if (!filename.endsWith(fileExtension)) {\r\n      filename = `八字命理分析_${resultId}.${fileExtension}`;\r\n    }\r\n    \r\n    // 转换为Blob对象\r\n    const blob = await response.blob();\r\n    \r\n    // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\r\n    // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\r\n    const isDownloadStarted = disposition && disposition.includes('attachment');\r\n    if (blob.size === 0 && !isDownloadStarted) {\r\n      throw new Error('下载的文件为空');\r\n    }\r\n    \r\n    // 对于小文件，我们可以验证文件内容\r\n    // 但对于大文件或浏览器接管的下载，跳过验证\r\n    if (blob.size > 0 && blob.size < 1024*1024 && contentType && contentType.includes('pdf')) {\r\n      try {\r\n        // 读取文件头部以验证是否为有效的PDF\r\n        const fileReader = new FileReader();\r\n        const headerPromise = new Promise((resolve, reject) => {\r\n          fileReader.onloadend = (e) => resolve(e.target.result);\r\n          fileReader.onerror = (e) => reject(e);\r\n        });\r\n        fileReader.readAsArrayBuffer(blob.slice(0, 5));\r\n        \r\n        const header = await headerPromise;\r\n        const headerView = new Uint8Array(header);\r\n        const headerString = String.fromCharCode.apply(null, headerView);\r\n        \r\n        if (!headerString.startsWith('%PDF')) {\r\n          console.error('无效的PDF文件头:', headerString);\r\n          throw new Error('下载的不是有效的PDF文件');\r\n        }\r\n      } catch (e) {\r\n        console.error('验证PDF文件失败:', e);\r\n        // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\r\n        if (!isDownloadStarted) {\r\n          throw new Error('验证PDF文件失败: ' + e.message);\r\n        } else {\r\n          console.warn('浏览器接管了下载，跳过PDF验证');\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 如果浏览器已经接管下载（通过Content-Disposition头部），\r\n    // 我们不需要手动创建下载链接\r\n    if (!isDownloadStarted) {\r\n      // 创建下载链接\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = filename;\r\n      \r\n      // 触发下载\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      \r\n      // 清理\r\n      setTimeout(() => {\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(a);\r\n      }, 100);\r\n    }\r\n    \r\n    Toast.clear();\r\n    Toast.success('报告下载成功');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('直接下载PDF出错:', error);\r\n    Toast.clear();\r\n    \r\n    // 检查是否是因为浏览器已经接管了下载而导致的错误\r\n    if (error.message && (\r\n        error.message.includes('下载的文件为空') || \r\n        error.message.includes('验证PDF文件失败')\r\n      )) {\r\n      // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\r\n      console.log('可能是浏览器已经接管了下载，不显示错误');\r\n      Toast.success('报告下载已开始，请等待浏览器完成下载');\r\n      return true;\r\n    }\r\n    \r\n    // 显示错误信息\r\n    Toast.fail(error.message || '下载失败，请稍后重试');\r\n    return false;\r\n  }\r\n};\r\n\r\n// 修改主下载函数，添加重试逻辑\r\nconst downloadPDF = async () => {\r\n  Toast.loading({\r\n    message: '正在生成并下载PDF报告...',\r\n    duration: 5000,\r\n    position: 'middle'\r\n  });\r\n  \r\n  if (!resultId) {\r\n    Toast.fail('缺少结果ID，无法生成报告');\r\n    return;\r\n  }\r\n  \r\n  // 最多尝试3次下载\r\n  let attempts = 0;\r\n  let success = false;\r\n  \r\n  while (attempts < 3 && !success) {\r\n    attempts++;\r\n    \r\n    if (attempts > 1) {\r\n      console.log(`尝试第${attempts}次下载...`);\r\n      Toast.loading({\r\n        message: `尝试第${attempts}次下载...`,\r\n        duration: 2000\r\n      });\r\n      // 在重试之前等待一段时间\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n    }\r\n    \r\n    // 使用流式下载模式，并处理返回值\r\n    success = await downloadPDFAsStream();\r\n    \r\n    // 如果流式下载成功，直接返回，不再尝试其他方法\r\n    if (success === true) {\r\n      return;\r\n    }\r\n  }\r\n  \r\n  // 如果多次尝试后仍然失败，提示用户\r\n  if (!success) {\r\n    Toast.clear();\r\n    Dialog.alert({\r\n      title: 'PDF下载失败',\r\n      message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。',\r\n    });\r\n  }\r\n};\r\n\r\n// 本地生成PDF的函数\r\nconst generatePDFLocally = async () => {\r\n  console.log('使用客户端jsPDF库生成PDF');\r\n  \r\n  // 获取内容元素\r\n  const element = document.querySelector('.result-container');\r\n  if (!element) {\r\n    throw new Error('找不到要转换的内容元素');\r\n  }\r\n  \r\n  Toast.loading({\r\n    message: '正在捕获页面内容...',\r\n    duration: 5000\r\n  });\r\n  \r\n  try {\r\n    // 使用html2canvas捕获内容\r\n    const canvas = await html2canvas(element, {\r\n      scale: 1,\r\n      useCORS: true,\r\n      logging: false,\r\n      windowWidth: document.documentElement.offsetWidth,\r\n      windowHeight: document.documentElement.offsetHeight,\r\n    });\r\n    \r\n    Toast.loading({\r\n      message: '正在生成PDF文件...',\r\n      duration: 5000\r\n    });\r\n        \r\n    // 创建PDF文档\r\n    const pdf = new jsPDF('p', 'mm', 'a4');\r\n        \r\n    // 计算尺寸和比例\r\n    const imgData = canvas.toDataURL('image/png');\r\n    const imgWidth = 210; // A4宽度，单位mm\r\n    const pageHeight = 297; // A4高度，单位mm\r\n    const imgHeight = canvas.height * imgWidth / canvas.width;\r\n    let heightLeft = imgHeight;\r\n    let position = 0;\r\n          \r\n    // 添加首页\r\n    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\r\n    heightLeft -= pageHeight;\r\n    \r\n    // 如果内容超过一页，添加更多页\r\n    while (heightLeft > 0) {\r\n      position = heightLeft - imgHeight;\r\n      pdf.addPage();\r\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\r\n      heightLeft -= pageHeight;\r\n    }\r\n    \r\n    // 添加页脚\r\n    const pageCount = pdf.internal.getNumberOfPages();\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      pdf.setPage(i);\r\n      pdf.setFontSize(10);\r\n      pdf.setTextColor(150);\r\n      pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });\r\n    }\r\n    \r\n    // 保存PDF\r\n    pdf.save(`八字命理分析_${resultId}.pdf`);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('本地PDF生成错误:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst shareResult = () => {\r\n  Toast.success('分享功能开发中');\r\n};\r\n\r\n// 处理本地PDF生成\r\nconst handleLocalPDFGeneration = async () => {\r\n  try {\r\n    Toast.loading({\r\n      message: '正在本地生成PDF...',\r\n      duration: 0,\r\n      forbidClick: true\r\n    });\r\n    \r\n    await generatePDFLocally();\r\n    \r\n    Toast.clear();\r\n    Toast.success('本地PDF生成成功');\r\n  } catch (error) {\r\n    console.error('本地PDF生成失败:', error);\r\n    Toast.clear();\r\n    Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\r\n  }\r\n};\r\n\r\nconst reloadBaziData = async () => {\r\n  Toast.loading('正在重新加载数据...');\r\n  \r\n  try {\r\n    if (!resultId) {\r\n      Toast.fail('缺少结果ID');\r\n      return;\r\n    }\r\n    \r\n    // 获取URL参数\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    \r\n    // 尝试使用模拟支付接口\r\n    try {\r\n      console.log('尝试使用模拟支付接口...');\r\n      \r\n      // 显示加载提示\r\n      Toast.loading({\r\n        message: '正在重新分析八字，请耐心等待30-60秒...',\r\n        duration: 10000,\r\n        position: 'middle'\r\n      });\r\n      \r\n      // 直接使用完整的resultId，不要去掉RES前缀\r\n      const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId}`, {\r\n        birthDate: urlParams.get('birthDate') || baziData.value.birthDate,\r\n        birthTime: urlParams.get('birthTime') || baziData.value.birthTime,\r\n        gender: urlParams.get('gender') || baziData.value.gender\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      console.log('模拟支付响应:', mockPaymentResponse.data);\r\n      \r\n      if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\r\n        // 使用返回的resultId重新加载数据\r\n        const newResultId = mockPaymentResponse.data.data.resultId;\r\n        console.log('获取到新的resultId:', newResultId);\r\n        \r\n        const response = await axios.get(`/api/bazi/result/${newResultId}`);\r\n        if (response.data.code === 200) {\r\n          // 更新八字数据，使用空值合并运算符确保数据存在\r\n          baziData.value = {\r\n            yearPillar: response.data.data.baziChart?.yearPillar || null,\r\n            monthPillar: response.data.data.baziChart?.monthPillar || null,\r\n            dayPillar: response.data.data.baziChart?.dayPillar || null,\r\n            hourPillar: response.data.data.baziChart?.hourPillar || null,\r\n            fiveElements: response.data.data.baziChart?.fiveElements || null,\r\n            flowingYears: response.data.data.baziChart?.flowingYears || [],\r\n            shenSha: response.data.data.baziChart?.shenSha || null,\r\n            daYun: response.data.data.baziChart?.daYun || null,\r\n            birthDate: response.data.data.baziChart?.birthDate || null,\r\n            birthTime: response.data.data.baziChart?.birthTime || null,\r\n            gender: response.data.data.baziChart?.gender || null\r\n          };\r\n          \r\n          // 更新AI分析结果\r\n          aiAnalysis.value = {\r\n            health: response.data.data.aiAnalysis?.health || '',\r\n            wealth: response.data.data.aiAnalysis?.wealth || '',\r\n            career: response.data.data.aiAnalysis?.career || '',\r\n            relationship: response.data.data.aiAnalysis?.relationship || '',\r\n            children: response.data.data.aiAnalysis?.children || '',\r\n            overall: response.data.data.aiAnalysis?.overall || '',\r\n            personality: response.data.data.aiAnalysis?.personality || '',\r\n            education: response.data.data.aiAnalysis?.education || '',\r\n            parents: response.data.data.aiAnalysis?.parents || '',\r\n            social: response.data.data.aiAnalysis?.social || '',\r\n            future: response.data.data.aiAnalysis?.future || ''\r\n          };\r\n          \r\n          Toast.success('数据加载成功');\r\n          return;\r\n        }\r\n      }\r\n    } catch (mockError) {\r\n      console.warn('模拟支付失败，尝试直接获取结果:', mockError);\r\n    }\r\n    \r\n    // 如果模拟支付失败，尝试直接获取结果\r\n    const response = await axios.get(`/api/bazi/result/${resultId}`);\r\n    \r\n    if (response.data.code === 200) {\r\n      // 更新八字数据，使用空值合并运算符确保数据存在\r\n      baziData.value = {\r\n        yearPillar: response.data.data.baziChart?.yearPillar || null,\r\n        monthPillar: response.data.data.baziChart?.monthPillar || null,\r\n        dayPillar: response.data.data.baziChart?.dayPillar || null,\r\n        hourPillar: response.data.data.baziChart?.hourPillar || null,\r\n        fiveElements: response.data.data.baziChart?.fiveElements || null,\r\n        flowingYears: response.data.data.baziChart?.flowingYears || [],\r\n        shenSha: response.data.data.baziChart?.shenSha || null,\r\n        daYun: response.data.data.baziChart?.daYun || null,\r\n        birthDate: response.data.data.baziChart?.birthDate || null,\r\n        birthTime: response.data.data.baziChart?.birthTime || null,\r\n        gender: response.data.data.baziChart?.gender || null\r\n      };\r\n      \r\n      // 更新AI分析结果\r\n      aiAnalysis.value = {\r\n        health: response.data.data.aiAnalysis?.health || '',\r\n        wealth: response.data.data.aiAnalysis?.wealth || '',\r\n        career: response.data.data.aiAnalysis?.career || '',\r\n        relationship: response.data.data.aiAnalysis?.relationship || '',\r\n        children: response.data.data.aiAnalysis?.children || '',\r\n        overall: response.data.data.aiAnalysis?.overall || '',\r\n        personality: response.data.data.aiAnalysis?.personality || '',\r\n        education: response.data.data.aiAnalysis?.education || '',\r\n        parents: response.data.data.aiAnalysis?.parents || '',\r\n        social: response.data.data.aiAnalysis?.social || '',\r\n        future: response.data.data.aiAnalysis?.future || ''\r\n      };\r\n      \r\n      Toast.success('数据加载成功');\r\n    } else {\r\n      Toast.fail(response.data.message || '加载失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('重新加载失败:', error);\r\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\r\n  }\r\n};\r\n\r\n// 追问相关状态\r\nconst followupOptions = ref([\r\n  { id: 'marriage', name: '婚姻感情', selected: false, paid: false },\r\n  { id: 'career', name: '事业财运', selected: false, paid: false },\r\n  { id: 'children', name: '子女情况', selected: false, paid: false },\r\n  { id: 'parents', name: '父母情况', selected: false, paid: false },\r\n  { id: 'health', name: '身体健康', selected: false, paid: false },\r\n  { id: 'education', name: '学业', selected: false, paid: false },\r\n  { id: 'relationship', name: '人际关系', selected: false, paid: false },\r\n  { id: 'fiveYears', name: '近五年运势', selected: false, paid: false }\r\n]);\r\n\r\nconst currentFollowup = ref(null);\r\nconst showFollowupDialog = ref(false);\r\nconst followupAnalysis = ref({});\r\nconst isLoadingFollowup = ref(false);\r\n\r\n// 选择追问选项\r\nconst selectFollowupOption = (option) => {\r\n  // 如果已经支付过，直接显示结果\r\n  if (option.paid) {\r\n    // 显示已支付的分析结果\r\n    currentFollowup.value = option;\r\n    return;\r\n  }\r\n  \r\n  // 否则设置当前选择的追问选项\r\n  currentFollowup.value = option;\r\n  showFollowupDialog.value = true;\r\n};\r\n\r\n// 支付追问费用\r\nconst payForFollowup = async () => {\r\n  if (!currentFollowup.value) return;\r\n  \r\n  try {\r\n    isLoadingFollowup.value = true;\r\n    Toast.loading({\r\n      message: '处理中...',\r\n      forbidClick: true,\r\n      duration: 0\r\n    });\r\n    \r\n    // 创建追问订单\r\n    const orderResponse = await axios.post('/api/order/create/followup', {\r\n      resultId: resultId,\r\n      area: currentFollowup.value.id\r\n    });\r\n    \r\n    if (orderResponse.data.code === 200) {\r\n      const followupOrderId = orderResponse.data.data.orderId;\r\n      console.log('追问订单创建成功:', followupOrderId);\r\n      \r\n      // 模拟支付\r\n      const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\r\n        birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\r\n        birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\r\n        gender: baziData.value?.gender || urlParams.get('gender'),\r\n        area: currentFollowup.value.id,\r\n        resultId: resultId\r\n      });\r\n      \r\n      if (paymentResponse.data.code === 200) {\r\n        console.log('追问支付成功:', paymentResponse.data);\r\n        \r\n        // 获取追问分析结果\r\n        await getFollowupAnalysis(currentFollowup.value.id);\r\n        \r\n        // 标记为已支付\r\n        const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\r\n        if (index !== -1) {\r\n          followupOptions.value[index].paid = true;\r\n        }\r\n        \r\n        showFollowupDialog.value = false;\r\n        Toast.success('分析完成');\r\n      } else {\r\n        Toast.fail('支付失败');\r\n      }\r\n    } else {\r\n      Toast.fail('创建订单失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('追问支付过程出错:', error);\r\n    Toast.fail('处理失败，请重试');\r\n  } finally {\r\n    isLoadingFollowup.value = false;\r\n    Toast.clear();\r\n  }\r\n};\r\n\r\n// 获取追问分析结果\r\nconst getFollowupAnalysis = async (area) => {\r\n  loading.value = true;\r\n  try {\r\n    const response = await axios.get(`/api/bazi/followup/${resultId}/${area}`);\r\n    \r\n    if (response.data.code === 200) {\r\n      console.log('获取追问分析成功:', response.data);\r\n      followupAnalysis.value[area] = response.data.data.analysis;\r\n      return response.data.data.analysis;\r\n    } else {\r\n      console.error('获取追问分析失败:', response.data);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error('获取追问分析出错:', error);\r\n    return null;\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 检查已支付的追问\r\nconst checkPaidFollowups = async () => {\r\n  try {\r\n    const response = await axios.get(`/api/bazi/followup/list/${resultId}`);\r\n    \r\n    if (response.data.code === 200 && response.data.data.followups) {\r\n      const paidFollowups = response.data.data.followups;\r\n      \r\n      // 更新已支付的追问选项\r\n      followupOptions.value = followupOptions.value.map(option => {\r\n        const isPaid = paidFollowups.some(f => f.area === option.id);\r\n        if (isPaid) {\r\n          // 如果已支付，获取分析结果\r\n          getFollowupAnalysis(option.id);\r\n        }\r\n        return { ...option, paid: isPaid };\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('检查已支付追问出错:', error);\r\n  }\r\n};\r\n\r\n// 修改getBaziResult函数\r\nconst getBaziResult = async () => {\r\n  loading.value = true;\r\n  try {\r\n    console.log('获取八字分析结果，ID:', resultId);\r\n    const response = await axios.get(`/api/bazi/result/${resultId}`);\r\n    console.log('八字分析结果:', response.data);\r\n    \r\n    if (response.data.code === 200 && response.data.data) {\r\n      // 更新八字数据，使用空值合并运算符确保数据存在\r\n      baziData.value = {\r\n        yearPillar: response.data.data.baziChart?.yearPillar || null,\r\n        monthPillar: response.data.data.baziChart?.monthPillar || null,\r\n        dayPillar: response.data.data.baziChart?.dayPillar || null,\r\n        hourPillar: response.data.data.baziChart?.hourPillar || null,\r\n        fiveElements: response.data.data.baziChart?.fiveElements || null,\r\n        flowingYears: response.data.data.baziChart?.flowingYears || [],\r\n        shenSha: response.data.data.baziChart?.shenSha || null,\r\n        daYun: response.data.data.baziChart?.daYun || null,\r\n        birthDate: response.data.data.baziChart?.birthDate || null,\r\n        birthTime: response.data.data.baziChart?.birthTime || null,\r\n        gender: response.data.data.baziChart?.gender || null\r\n      };\r\n      \r\n      // 更新AI分析结果\r\n      aiAnalysis.value = {\r\n        health: response.data.data.aiAnalysis?.health || '',\r\n        wealth: response.data.data.aiAnalysis?.wealth || '',\r\n        career: response.data.data.aiAnalysis?.career || '',\r\n        relationship: response.data.data.aiAnalysis?.relationship || '',\r\n        children: response.data.data.aiAnalysis?.children || '',\r\n        overall: response.data.data.aiAnalysis?.overall || '',\r\n        personality: response.data.data.aiAnalysis?.personality || '',\r\n        education: response.data.data.aiAnalysis?.education || '',\r\n        parents: response.data.data.aiAnalysis?.parents || '',\r\n        social: response.data.data.aiAnalysis?.social || '',\r\n        future: response.data.data.aiAnalysis?.future || ''\r\n      };\r\n      \r\n      // 检查数据完整性\r\n      if (!baziData.value.yearPillar || !baziData.value.monthPillar || \r\n          !baziData.value.dayPillar || !baziData.value.hourPillar) {\r\n        console.warn('八字数据不完整');\r\n        Toast.fail('八字数据不完整，请重新生成');\r\n        return;\r\n      }\r\n      \r\n      // 初始化追问选项\r\n      initFollowupOptions();\r\n      \r\n      // 加载已支付的追问分析结果\r\n      await loadFollowupResults();\r\n      \r\n      Toast.success('分析结果加载成功');\r\n    } else {\r\n      console.error('获取八字分析结果失败:', response.data.message);\r\n      Toast.fail(response.data.message || '获取分析结果失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取八字分析结果出错:', error);\r\n    Toast.fail('获取分析结果失败，请稍后再试');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 添加缺失的函数\r\n// 初始化追问选项\r\nconst initFollowupOptions = () => {\r\n  // 根据用户年龄调整追问选项\r\n  if (userAge.value !== null) {\r\n    if (userAge.value < 6) {\r\n      // 为婴幼儿调整选项\r\n      followupOptions.value = followupOptions.value.filter(option => \r\n        ['health', 'personality', 'education', 'parents'].includes(option.id)\r\n      );\r\n    } else if (userAge.value < 18) {\r\n      // 为未成年人调整选项\r\n      followupOptions.value = followupOptions.value.filter(option => \r\n        !['marriage', 'career'].includes(option.id)\r\n      );\r\n    }\r\n  }\r\n  \r\n  console.log('初始化追问选项完成:', followupOptions.value);\r\n};\r\n\r\n// 加载已支付的追问分析结果\r\nconst loadFollowupResults = async () => {\r\n  try {\r\n    // 检查是否有结果ID\r\n    if (!resultId) {\r\n      console.warn('缺少结果ID，无法加载追问分析');\r\n      return;\r\n    }\r\n    \r\n    // 调用API获取已支付的追问列表\r\n    const response = await axios.get(`/api/bazi/followup/list/${resultId}`);\r\n    \r\n    if (response.data.code === 200 && response.data.data.followups) {\r\n      const paidFollowups = response.data.data.followups;\r\n      \r\n      // 更新已支付的追问选项\r\n      followupOptions.value = followupOptions.value.map(option => {\r\n        const isPaid = paidFollowups.some(f => f.area === option.id);\r\n        if (isPaid) {\r\n          // 如果已支付，获取分析结果\r\n          getFollowupAnalysis(option.id);\r\n        }\r\n        return { ...option, paid: isPaid };\r\n      });\r\n      \r\n      console.log('已加载追问分析结果:', paidFollowups);\r\n    }\r\n  } catch (error) {\r\n    console.error('加载追问分析结果出错:', error);\r\n    // 出错时不显示错误提示，静默失败\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.result-container {\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.result-header {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n  background-color: #f2f3f5;\r\n}\r\n\r\n.result-header h2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  color: #323233;\r\n}\r\n\r\n.result-header p {\r\n  margin: 10px 0 0;\r\n  font-size: 14px;\r\n  color: #969799;\r\n}\r\n\r\n.bazi-chart {\r\n  padding: 20px 16px;\r\n}\r\n\r\n.bazi-chart h3 {\r\n  margin: 20px 0 10px;\r\n  color: #323233;\r\n}\r\n\r\n.pillar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.stem {\r\n  width: 40px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n  background-color: #1989fa;\r\n  color: white;\r\n  border-radius: 4px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.branch {\r\n  width: 40px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n  background-color: #07c160;\r\n  color: white;\r\n  border-radius: 4px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.label {\r\n  font-size: 12px;\r\n  color: #646566;\r\n}\r\n\r\n.five-elements {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n}\r\n\r\n.element {\r\n  text-align: center;\r\n  flex: 1;\r\n}\r\n\r\n.element-name {\r\n  font-size: 14px;\r\n  color: #323233;\r\n}\r\n\r\n.element-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #1989fa;\r\n  margin-top: 5px;\r\n}\r\n\r\n.flowing-years {\r\n  margin: 20px 0;\r\n}\r\n\r\n.ai-analysis {\r\n  padding: 20px 16px;\r\n}\r\n\r\n.analysis-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.analysis-section h3 {\r\n  margin: 0 0 10px;\r\n  color: #323233;\r\n}\r\n\r\n.analysis-section p {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #646566;\r\n  line-height: 1.6;\r\n}\r\n\r\n.action-buttons {\r\n  padding: 20px 16px;\r\n}\r\n\r\n.age-notice {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.shen-sha-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.da-yun-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.qi-yun-info {\r\n  margin: 0 0 10px;\r\n  font-size: 14px;\r\n  color: #646566;\r\n}\r\n\r\n.da-yun-table {\r\n  margin-top: 10px;\r\n}\r\n\r\n.placeholder {\r\n  background-color: #f2f3f5;\r\n  color: #969799;\r\n}\r\n\r\n/* 追问部分样式 */\r\n.followup-section {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.section-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.section-desc {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.followup-options {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 12px;\r\n}\r\n\r\n.followup-option {\r\n  background-color: #f5f7fa;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.followup-option:hover {\r\n  background-color: #e8f0fe;\r\n}\r\n\r\n.followup-option.paid {\r\n  background-color: #e6f7ff;\r\n  border: 1px solid #91d5ff;\r\n}\r\n\r\n.option-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.option-name {\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.option-status {\r\n  font-size: 13px;\r\n  color: #ff6b00;\r\n}\r\n\r\n.followup-option.paid .option-status {\r\n  color: #52c41a;\r\n}\r\n\r\n.followup-result {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #1989fa;\r\n}\r\n\r\n.followup-result h3 {\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.analysis-content {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  color: #333;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.followup-dialog-content {\r\n  padding: 15px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}