{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { Toast } from 'vant';\nexport default {\n  __name: 'Home',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const showDatePicker = ref(false);\n    const showTimePicker = ref(false);\n    const currentDate = ref(new Date());\n\n    // 重新定义时辰数据为正确的格式\n    const timeData = [{\n      text: '子时 (23:00-01:00)'\n    }, {\n      text: '丑时 (01:00-03:00)'\n    }, {\n      text: '寅时 (03:00-05:00)'\n    }, {\n      text: '卯时 (05:00-07:00)'\n    }, {\n      text: '辰时 (07:00-09:00)'\n    }, {\n      text: '巳时 (09:00-11:00)'\n    }, {\n      text: '午时 (11:00-13:00)'\n    }, {\n      text: '未时 (13:00-15:00)'\n    }, {\n      text: '申时 (15:00-17:00)'\n    }, {\n      text: '酉时 (17:00-19:00)'\n    }, {\n      text: '戌时 (19:00-21:00)'\n    }, {\n      text: '亥时 (21:00-23:00)'\n    }];\n    const formData = reactive({\n      gender: 'male',\n      calendarType: 'solar',\n      birthDate: '',\n      birthTime: '',\n      focusAreas: []\n    });\n    const formatDate = date => {\n      // 确保月份和日期为两位数\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      return `${date.getFullYear()}-${month}-${day}`;\n    };\n    const onConfirmDate = value => {\n      // 检查value是否为数组，如果不是则使用当前日期\n      if (Array.isArray(value)) {\n        const [year, month, day] = value;\n        // 格式化月份和日期为两位数\n        const formattedMonth = month.toString().padStart(2, '0');\n        const formattedDay = day.toString().padStart(2, '0');\n        formData.birthDate = `${year}-${formattedMonth}-${formattedDay}`;\n      } else if (value && typeof value === 'object' && value.getFullYear) {\n        // 如果是Date对象，使用格式化函数\n        formData.birthDate = formatDate(value);\n      } else {\n        // 如果value不是数组也不是Date，使用currentDate的值\n        formData.birthDate = formatDate(currentDate.value);\n      }\n\n      // 确保关闭日期选择器并打印调试信息\n      console.log('选择的日期:', formData.birthDate);\n      showDatePicker.value = false;\n    };\n    const selectTime = time => {\n      formData.birthTime = time;\n      showTimePicker.value = false;\n      console.log('选择的时辰:', formData.birthTime);\n    };\n    const onSubmit = () => {\n      // 表单验证\n      if (!formData.birthDate) {\n        Toast.fail('请选择出生日期');\n        return;\n      }\n      if (!formData.birthTime) {\n        Toast.fail('请选择出生时辰');\n        return;\n      }\n      if (formData.focusAreas.length === 0) {\n        Toast.fail('请至少选择一个推算侧重点');\n        return;\n      }\n\n      // 创建订单并跳转到支付页面\n      // 实际项目中这里应该调用API创建订单\n      router.push({\n        path: '/payment',\n        query: {\n          gender: formData.gender,\n          calendarType: formData.calendarType,\n          birthDate: formData.birthDate,\n          birthTime: formData.birthTime,\n          focusAreas: formData.focusAreas.join(',')\n        }\n      });\n    };\n    const tempDate = ref('');\n    const confirmNativeDate = () => {\n      if (tempDate.value) {\n        const selectedDate = new Date(tempDate.value);\n        onConfirmDate([selectedDate.getFullYear(), selectedDate.getMonth() + 1, selectedDate.getDate()]);\n      }\n    };\n    const __returned__ = {\n      router,\n      showDatePicker,\n      showTimePicker,\n      currentDate,\n      timeData,\n      formData,\n      formatDate,\n      onConfirmDate,\n      selectTime,\n      onSubmit,\n      tempDate,\n      confirmNativeDate,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","Toast","router","showDatePicker","showTimePicker","currentDate","Date","timeData","text","formData","gender","calendarType","birthDate","birthTime","focusAreas","formatDate","date","month","getMonth","toString","padStart","day","getDate","getFullYear","onConfirmDate","value","Array","isArray","year","formattedMonth","formattedDay","console","log","selectTime","time","onSubmit","fail","length","push","path","query","join","tempDate","confirmNativeDate","selectedDate"],"sources":["C:/Users/Administrator/Desktop/开发八字命理AI指导功能页码/frontend/src/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <van-nav-bar title=\"八字命理AI人生指导\" />\n    \n    <div class=\"banner\">\n      <img src=\"./assets/banner.png\" alt=\"八字命理AI人生指导\" class=\"banner-img\">\n      <h2 class=\"slogan\">传统命理 · 现代科技 · 智慧人生</h2>\n    </div>\n    \n    <van-form @submit=\"onSubmit\">\n      <van-cell-group inset>\n        <van-field name=\"gender\" label=\"性别\">\n          <template #input>\n            <van-radio-group v-model=\"formData.gender\" direction=\"horizontal\">\n              <van-radio name=\"male\">男</van-radio>\n              <van-radio name=\"female\">女</van-radio>\n            </van-radio-group>\n          </template>\n        </van-field>\n        \n        <van-field name=\"calendarType\" label=\"历法选择\">\n          <template #input>\n            <van-radio-group v-model=\"formData.calendarType\" direction=\"horizontal\">\n              <van-radio name=\"solar\">公历</van-radio>\n              <van-radio name=\"lunar\">农历</van-radio>\n            </van-radio-group>\n          </template>\n        </van-field>\n        \n        <van-field name=\"birthDate\" label=\"出生日期\">\n          <template #input>\n            <input \n              type=\"date\" \n              v-model=\"formData.birthDate\"\n              min=\"1900-01-01\" \n              max=\"2100-12-31\"\n              class=\"native-date-picker\"\n            />\n          </template>\n        </van-field>\n        \n        <van-field name=\"birthTime\" label=\"出生时辰\">\n          <template #input>\n            <select v-model=\"formData.birthTime\" class=\"native-time-picker\">\n              <option value=\"\">请选择时辰</option>\n              <option \n                v-for=\"(time, index) in timeData\" \n                :key=\"index\" \n                :value=\"time.text\"\n              >\n                {{ time.text }}\n              </option>\n            </select>\n          </template>\n        </van-field>\n        \n        <van-field name=\"focusAreas\" label=\"推算侧重点\">\n          <template #input>\n            <van-checkbox-group v-model=\"formData.focusAreas\" direction=\"horizontal\">\n              <van-checkbox name=\"health\">身体健康</van-checkbox>\n              <van-checkbox name=\"wealth\">财运</van-checkbox>\n              <van-checkbox name=\"career\">事业</van-checkbox>\n              <van-checkbox name=\"relationship\">婚姻感情</van-checkbox>\n              <van-checkbox name=\"children\">子女</van-checkbox>\n            </van-checkbox-group>\n          </template>\n        </van-field>\n      </van-cell-group>\n      \n      <div style=\"margin: 16px;\">\n        <van-button round block type=\"primary\" native-type=\"submit\">\n          提交并支付 (9.9元)\n        </van-button>\n      </div>\n    </van-form>\n    \n    <div class=\"intro-section\">\n      <h3>八字命理AI人生指导系统</h3>\n      <p>本系统结合传统八字命理理论与现代人工智能技术，为您提供个性化的人生指导建议。通过分析您的八字命盘和流年大运信息，AI将为您解读人生各方面的发展趋势和潜在机遇。</p>\n      \n      <h3>使用流程</h3>\n      <van-steps direction=\"vertical\" :active=\"0\">\n        <van-step>\n          <h3>填写信息</h3>\n          <p>输入性别、出生年月日时和关注领域</p>\n        </van-step>\n        <van-step>\n          <h3>完成支付</h3>\n          <p>支付9.9元获取专业分析</p>\n        </van-step>\n        <van-step>\n          <h3>AI分析</h3>\n          <p>系统计算八字并通过AI进行解读</p>\n        </van-step>\n        <van-step>\n          <h3>查看结果</h3>\n          <p>获取详细分析报告并可下载PDF</p>\n        </van-step>\n      </van-steps>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { Toast } from 'vant';\n\nconst router = useRouter();\nconst showDatePicker = ref(false);\nconst showTimePicker = ref(false);\nconst currentDate = ref(new Date());\n\n// 重新定义时辰数据为正确的格式\nconst timeData = [\n  { text: '子时 (23:00-01:00)' },\n  { text: '丑时 (01:00-03:00)' },\n  { text: '寅时 (03:00-05:00)' },\n  { text: '卯时 (05:00-07:00)' },\n  { text: '辰时 (07:00-09:00)' },\n  { text: '巳时 (09:00-11:00)' },\n  { text: '午时 (11:00-13:00)' },\n  { text: '未时 (13:00-15:00)' },\n  { text: '申时 (15:00-17:00)' },\n  { text: '酉时 (17:00-19:00)' },\n  { text: '戌时 (19:00-21:00)' },\n  { text: '亥时 (21:00-23:00)' }\n];\n\nconst formData = reactive({\n  gender: 'male',\n  calendarType: 'solar',\n  birthDate: '',\n  birthTime: '',\n  focusAreas: []\n});\n\nconst formatDate = (date) => {\n  // 确保月份和日期为两位数\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${date.getFullYear()}-${month}-${day}`;\n};\n\nconst onConfirmDate = (value) => {\n  // 检查value是否为数组，如果不是则使用当前日期\n  if (Array.isArray(value)) {\n    const [year, month, day] = value;\n    // 格式化月份和日期为两位数\n    const formattedMonth = month.toString().padStart(2, '0');\n    const formattedDay = day.toString().padStart(2, '0');\n    formData.birthDate = `${year}-${formattedMonth}-${formattedDay}`;\n  } else if (value && typeof value === 'object' && value.getFullYear) {\n    // 如果是Date对象，使用格式化函数\n    formData.birthDate = formatDate(value);\n  } else {\n    // 如果value不是数组也不是Date，使用currentDate的值\n    formData.birthDate = formatDate(currentDate.value);\n  }\n  \n  // 确保关闭日期选择器并打印调试信息\n  console.log('选择的日期:', formData.birthDate);\n  showDatePicker.value = false;\n};\n\nconst selectTime = (time) => {\n  formData.birthTime = time;\n  showTimePicker.value = false;\n  console.log('选择的时辰:', formData.birthTime);\n};\n\nconst onSubmit = () => {\n  // 表单验证\n  if (!formData.birthDate) {\n    Toast.fail('请选择出生日期');\n    return;\n  }\n  \n  if (!formData.birthTime) {\n    Toast.fail('请选择出生时辰');\n    return;\n  }\n  \n  if (formData.focusAreas.length === 0) {\n    Toast.fail('请至少选择一个推算侧重点');\n    return;\n  }\n  \n  // 创建订单并跳转到支付页面\n  // 实际项目中这里应该调用API创建订单\n  router.push({\n    path: '/payment',\n    query: {\n      gender: formData.gender,\n      calendarType: formData.calendarType,\n      birthDate: formData.birthDate,\n      birthTime: formData.birthTime,\n      focusAreas: formData.focusAreas.join(',')\n    }\n  });\n};\n\nconst tempDate = ref('');\n\nconst confirmNativeDate = () => {\n  if (tempDate.value) {\n    const selectedDate = new Date(tempDate.value);\n    onConfirmDate([selectedDate.getFullYear(), selectedDate.getMonth() + 1, selectedDate.getDate()]);\n  }\n};\n</script>\n\n<style>\n.home-container {\n  padding-bottom: 20px;\n}\n\n.banner {\n  text-align: center;\n  padding: 20px 15px;\n  background-color: #f7f8fa;\n}\n\n.banner-img {\n  width: 100%;\n  max-width: 300px;\n  border-radius: 8px;\n}\n\n.slogan {\n  margin-top: 10px;\n  font-size: 16px;\n  color: #666;\n}\n\n.intro-section {\n  padding: 20px 16px;\n  background-color: #fff;\n  margin-top: 20px;\n}\n\n.intro-section h3 {\n  margin-bottom: 10px;\n  font-size: 18px;\n  color: #323233;\n}\n\n.intro-section p {\n  color: #666;\n  font-size: 14px;\n  line-height: 1.6;\n  margin-bottom: 20px;\n}\n\n.time-selector {\n  background-color: #fff;\n  width: 100%;\n}\n\n.time-selector-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 16px;\n  border-bottom: 1px solid #ebedf0;\n}\n\n.time-selector-title {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.time-selector-content {\n  max-height: 60vh;\n  overflow-y: auto;\n}\n\n.time-active {\n  color: #1989fa;\n  font-weight: bold;\n}\n\n.date-selector {\n  background-color: #fff;\n  width: 100%;\n}\n\n.date-selector-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 16px;\n  border-bottom: 1px solid #ebedf0;\n}\n\n.date-selector-title {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.date-selector-content {\n  padding: 10px;\n}\n\n.native-date-picker {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ebedf0;\n  border-radius: 4px;\n}\n\n.native-time-picker {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ebedf0;\n  border-radius: 4px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}