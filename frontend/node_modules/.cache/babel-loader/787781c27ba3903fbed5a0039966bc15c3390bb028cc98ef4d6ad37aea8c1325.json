{"ast":null,"code":"import { ref, onMounted, reactive, computed, watch, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport MarkdownIt from 'markdown-it'; // 添加markdown-it导入\n\n// 创建markdown解析器实例\n\nexport default {\n  __name: 'Result',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const md = new MarkdownIt({\n      html: true,\n      breaks: true,\n      linkify: true,\n      typographer: true\n    });\n    const route = useRoute();\n    const router = useRouter();\n    const resultId = ref(route.params.id || route.query.resultId);\n    const activeTab = ref(0);\n    const loading = ref(false);\n\n    // 添加分析状态相关变量\n    const isAnalyzing = ref(false);\n    const analyzeProgress = ref(0);\n    const analyzeTimer = ref(null);\n\n    // 渲染Markdown内容\n    const renderMarkdown = content => {\n      if (!content) return '';\n      try {\n        // 检查内容是否已经是HTML\n        if (content.includes('<') && content.includes('>') && content.includes('<div') || content.includes('<p>')) {\n          // 如果已经含有HTML标签，可能已经被渲染过，直接返回\n          return content;\n        }\n\n        // 预处理八字分析特殊格式\n        let processedContent = content;\n\n        // 处理加粗文本 **文本**\n        processedContent = processedContent.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n        // 处理分隔符 --\n        processedContent = processedContent.replace(/\\s*--\\s*/g, '<hr>');\n\n        // 处理标题（以#开头的行）\n        processedContent = processedContent.replace(/^(#+)\\s+(.*?)$/gm, (match, hashes, text) => {\n          const level = Math.min(hashes.length, 6);\n          return `<h${level}>${text}</h${level}>`;\n        });\n\n        // 处理列表（以-或数字开头的行）\n        processedContent = processedContent.replace(/^- (.*?)$/gm, '<li>$1</li>');\n        processedContent = processedContent.replace(/^(\\d+)\\. (.*?)$/gm, '<li>$1. $2</li>');\n\n        // 将连续的<li>元素包装在<ul>或<ol>中\n        if (processedContent.includes('<li>')) {\n          // 简单检测是否含有数字列表\n          const hasNumberList = /^<li>\\d+\\./.test(processedContent);\n          const listTag = hasNumberList ? 'ol' : 'ul';\n\n          // 将连续的<li>元素包装在列表标签中\n          processedContent = processedContent.replace(/(<li>.*?<\\/li>\\n*)+/g, match => {\n            return `<${listTag}>${match}</${listTag}>`;\n          });\n        }\n\n        // 处理段落\n        if (!processedContent.includes('<p>')) {\n          const paragraphs = processedContent.split('\\n\\n');\n          processedContent = paragraphs.map(p => {\n            // 如果段落不是以HTML标签开头，则添加<p>标签\n            if (p.trim() && !p.trim().startsWith('<')) {\n              return `<p>${p}</p>`;\n            }\n            return p;\n          }).join('\\n');\n        }\n\n        // 最后使用markdown-it处理任何剩余的Markdown标记\n        return md.render(processedContent);\n      } catch (e) {\n        console.error('Markdown渲染失败:', e);\n        return content; // 如果渲染失败，返回原始内容\n      }\n    };\n\n    // 用户年龄，从URL参数或localStorage获取\n    const userAge = ref(null);\n    // 尝试从URL参数获取年龄\n    if (route.query.age && !isNaN(parseInt(route.query.age))) {\n      userAge.value = parseInt(route.query.age);\n    }\n    // 如果URL参数中没有年龄，尝试从localStorage获取\n    else if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n      userAge.value = parseInt(localStorage.getItem('userAge'));\n    }\n    // 记录用户年龄到控制台，便于调试\n    console.log('用户年龄:', userAge.value);\n\n    // 从分析文本中提取特定部分内容\n    const getAnalysisContent = sectionName => {\n      try {\n        // 如果是性格特点或学业发展，直接从对应字段获取\n        if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n          return aiAnalysis.value.personality;\n        }\n        if (sectionName === '学业发展' && aiAnalysis.value.education) {\n          return aiAnalysis.value.education;\n        }\n\n        // 处理健康分析文本，尝试提取学业、性格等内容\n        if (aiAnalysis.value.health) {\n          const healthText = aiAnalysis.value.health;\n\n          // 查找各部分的标记\n          const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n          if (sectionMatch && sectionMatch[1]) {\n            return sectionMatch[1].trim();\n          }\n\n          // 如果是未来发展，尝试从overall中提取\n          if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n            const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n            if (futureMatch && futureMatch[2]) {\n              return futureMatch[2].trim();\n            }\n          }\n        }\n\n        // 如果没有找到对应部分或提取失败，返回空字符串\n        return '';\n      } catch (e) {\n        console.error(`提取${sectionName}内容时出错:`, e);\n        return '';\n      }\n    };\n\n    // 修改数据初始化\n    const focusAreas = ref([]);\n    const analysisResult = ref({});\n\n    // 初始化八字数据\n    const baziData = ref({\n      yearPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      monthPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      dayPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      hourPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      fiveElements: {},\n      flowingYears: [],\n      shenSha: {\n        dayChong: '',\n        zhiShen: '',\n        xiShen: '',\n        fuShen: '',\n        caiShen: '',\n        benMing: [],\n        yearGan: [],\n        yearZhi: [],\n        dayGan: [],\n        dayZhi: []\n      },\n      daYun: {\n        startAge: 0,\n        startYear: 0,\n        isForward: true,\n        daYunList: []\n      },\n      birthDate: null,\n      birthTime: null,\n      gender: null\n    });\n\n    // 初始化分析数据\n    const aiAnalysis = ref({\n      health: '',\n      career: '',\n      relationship: '',\n      children: '',\n      social: '',\n      future: '',\n      parents: '',\n      education: '',\n      // 新增字段\n      coreAnalysis: '',\n      fiveElements: '',\n      shenShaAnalysis: '',\n      keyPoints: ''\n    });\n    const testApiConnection = async () => {\n      try {\n        Toast.loading('正在测试API连接...');\n        // 使用配置好的http实例\n        const response = await axios.get('/');\n        console.log('API根路径响应:', response.data);\n        Toast.success('API连接成功');\n        return true;\n      } catch (error) {\n        console.error('API连接测试失败:', error);\n        Toast.fail('API连接失败，请检查后端服务');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 先测试API连接\n      const isApiConnected = await testApiConnection();\n      if (!isApiConnected) {\n        console.warn('API连接失败，将使用模拟数据');\n        loading.value = false;\n        return;\n      }\n      console.log('结果页面加载，URL参数中的ID:', resultId.value);\n\n      // 如果没有resultId，尝试从本地存储获取\n      const localResultId = localStorage.getItem('resultId');\n      if (!resultId.value && localResultId) {\n        console.log('从本地存储获取ID:', localResultId);\n        // 更新resultId为从本地存储获取的值\n        resultId.value = localResultId;\n      }\n\n      // 确保resultId是字符串类型，不是布尔值或其他数据类型\n      if (resultId.value === true || resultId.value === false) {\n        console.error('resultId不应该是布尔值:', resultId.value);\n        resultId.value = localResultId || route.query.resultId || '';\n      }\n      console.log('最终使用的resultId:', resultId.value);\n\n      // 如果resultId为空或无效，显示错误并尝试从URL查询参数获取\n      if (!resultId.value) {\n        console.error('缺少结果ID，无法获取分析结果');\n\n        // 尝试从URL查询参数获取备选ID\n        const urlResultId = route.query.resultId;\n        if (urlResultId) {\n          console.log('从URL查询参数获取备选ID:', urlResultId);\n          resultId.value = urlResultId;\n        } else {\n          Toast.fail('缺少结果ID，无法获取分析结果');\n          loading.value = false;\n          return;\n        }\n      }\n\n      // 存储确认的resultId到本地存储\n      localStorage.setItem('resultId', resultId.value);\n\n      // 显示加载提示\n      Toast.loading({\n        message: '正在加载八字分析结果，请稍候...',\n        duration: 0,\n        forbidClick: true\n      });\n\n      // 调用getBaziResult函数获取结果\n      await getBaziResult();\n\n      // 检查分析是否完成\n      const stillAnalyzing = Object.values(aiAnalysis.value).some(value => typeof value === 'string' && value.includes('正在分析'));\n      if (stillAnalyzing) {\n        console.log('检测到分析仍在进行中...');\n        Toast.loading({\n          message: '正在生成八字分析结果，这可能需要30-60秒...',\n          duration: 0\n        });\n\n        // 启动轮询\n        await pollAnalysisStatus(resultId.value);\n        Toast.success('分析完成');\n      }\n\n      // 关闭加载提示\n      Toast.clear();\n    });\n    const getElementName = element => {\n      if (!element) return '--';\n      const elementNames = {\n        'wood': '木',\n        'fire': '火',\n        'earth': '土',\n        'metal': '金',\n        'water': '水',\n        '木': '木',\n        '火': '火',\n        '土': '土',\n        '金': '金',\n        '水': '水'\n      };\n      return elementNames[element] || element;\n    };\n    const onClickLeft = () => {\n      router.push('/');\n    };\n\n    // 修改后的直接流下载函数，适应后端始终返回文件流\n    const downloadPDFAsStream = async () => {\n      Toast.loading({\n        message: '正在生成PDF并下载报告...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      if (!resultId.value) {\n        Toast.clear();\n        Toast.fail('缺少结果ID，无法下载报告');\n        return false;\n      }\n      try {\n        console.log('直接下载报告, 结果ID:', resultId.value);\n\n        // 创建下载链接，添加时间戳避免缓存问题和force参数强制重新生成\n        const timestamp = new Date().getTime();\n        // 默认启用markdown解析\n        const downloadUrl = `/api/bazi/pdf/${resultId.value}?t=${timestamp}&force=true&parseMarkdown=true`;\n        console.log('下载URL:', downloadUrl);\n\n        // 使用fetch API获取文件流\n        const response = await fetch(downloadUrl, {\n          method: 'GET',\n          cache: 'no-cache',\n          headers: {\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': '0'\n          }\n        });\n\n        // 检查错误\n        if (!response.ok) {\n          let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n          try {\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n              const errorData = await response.json();\n              errorMsg = errorData.message || errorMsg;\n            } else {\n              // 如果不是JSON格式的错误，尝试获取文本错误信息\n              const errorText = await response.text();\n              if (errorText) {\n                errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n              }\n            }\n          } catch (e) {\n            console.error('解析错误响应失败:', e);\n          }\n          throw new Error(errorMsg);\n        }\n\n        // 检查内容类型\n        const contentType = response.headers.get('content-type');\n        const disposition = response.headers.get('content-disposition');\n        console.log('响应内容类型:', contentType);\n        console.log('响应内容处置:', disposition);\n\n        // 确定文件名和扩展名\n        let filename = `八字命理分析_${resultId.value}.pdf`;\n        if (disposition && disposition.includes('filename=')) {\n          const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n\n        // 确定文件类型\n        const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n        if (!filename.endsWith(fileExtension)) {\n          filename = `八字命理分析_${resultId.value}.${fileExtension}`;\n        }\n\n        // 转换为Blob对象\n        const blob = await response.blob();\n        console.log('PDF Blob大小:', blob.size, '字节');\n\n        // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n        // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n        const isDownloadStarted = disposition && disposition.includes('attachment');\n        if (blob.size === 0 && !isDownloadStarted) {\n          throw new Error('下载的文件为空');\n        }\n\n        // 对于小文件，我们可以验证文件内容\n        // 但对于大文件或浏览器接管的下载，跳过验证\n        if (blob.size > 0 && blob.size < 1024 * 1024 && contentType && contentType.includes('pdf')) {\n          try {\n            // 读取文件头部以验证是否为有效的PDF\n            const fileReader = new FileReader();\n            const headerPromise = new Promise((resolve, reject) => {\n              fileReader.onloadend = e => resolve(e.target.result);\n              fileReader.onerror = e => reject(e);\n            });\n            fileReader.readAsArrayBuffer(blob.slice(0, 5));\n            const header = await headerPromise;\n            const headerView = new Uint8Array(header);\n            const headerString = String.fromCharCode.apply(null, headerView);\n            if (!headerString.startsWith('%PDF')) {\n              console.error('无效的PDF文件头:', headerString);\n              throw new Error('下载的不是有效的PDF文件');\n            } else {\n              console.log('PDF文件头验证通过');\n            }\n          } catch (e) {\n            console.error('验证PDF文件失败:', e);\n            // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n            if (!isDownloadStarted) {\n              throw new Error('验证PDF文件失败: ' + e.message);\n            } else {\n              console.warn('浏览器接管了下载，跳过PDF验证');\n            }\n          }\n        }\n\n        // 不管浏览器是否已经接管下载，我们都手动创建一个下载链接\n        try {\n          // 创建下载链接\n          const url = window.URL.createObjectURL(blob);\n          console.log('创建Blob URL:', url);\n\n          // 使用iframe方式下载，避免某些浏览器的下载拦截\n          const iframe = document.createElement('iframe');\n          iframe.style.display = 'none';\n          document.body.appendChild(iframe);\n\n          // 创建a标签并触发下载\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `八字命理分析_${resultId.value}.pdf`; // 强制使用自定义文件名\n          a.target = '_blank';\n          a.rel = 'noopener noreferrer';\n\n          // 在iframe中添加a标签并点击\n          iframe.contentWindow.document.body.appendChild(a);\n          console.log('触发下载, 文件名:', a.download);\n          a.click();\n\n          // 清理\n          setTimeout(() => {\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(iframe);\n            console.log('清理下载资源完成');\n          }, 1000); // 增加延时确保下载开始\n        } catch (e) {\n          console.error('创建下载链接失败:', e);\n\n          // 尝试使用window.open直接打开PDF\n          try {\n            console.log('尝试使用window.open方法下载');\n            const pdfWindow = window.open(downloadUrl, '_blank');\n            if (!pdfWindow) {\n              console.warn('弹出窗口被阻止，尝试其他方法');\n              // 提示用户直接打开链接\n              Dialog.alert({\n                title: '下载提示',\n                message: '系统无法自动下载PDF，请点击确定后手动保存文件',\n                confirmButtonText: '确定'\n              }).then(() => {\n                window.open(downloadUrl, '_blank');\n              });\n            }\n          } catch (openError) {\n            console.error('使用window.open下载失败:', openError);\n            throw new Error('下载失败，请尝试使用其他浏览器');\n          }\n        }\n        Toast.clear();\n        Toast.success('报告下载成功');\n        return true;\n      } catch (error) {\n        console.error('直接下载PDF出错:', error);\n        Toast.clear();\n\n        // 检查是否是因为浏览器已经接管了下载而导致的错误\n        if (error.message && (error.message.includes('下载的文件为空') || error.message.includes('验证PDF文件失败'))) {\n          // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n          console.log('可能是浏览器已经接管了下载，不显示错误');\n          Toast.success('报告下载已开始，请等待浏览器完成下载');\n          return true;\n        }\n\n        // 显示错误信息\n        Toast.fail(error.message || '下载失败，请稍后重试');\n        return false;\n      }\n    };\n\n    // 修改主下载函数，添加重试逻辑\n    const downloadPDF = async () => {\n      Toast.loading({\n        message: '正在准备生成PDF报告...',\n        duration: 5000,\n        position: 'middle'\n      });\n      if (!resultId.value) {\n        Toast.fail('缺少结果ID，无法生成报告');\n        return;\n      }\n      try {\n        // 先重新加载最新的数据，确保PDF包含最新的追问分析结果\n        Toast.loading({\n          message: '正在同步最新数据...',\n          duration: 5000\n        });\n\n        // 获取最新的基础分析结果\n        await getBaziResult();\n\n        // 获取最新的追问分析结果\n        await loadFollowupResults();\n        Toast.loading({\n          message: '正在生成并下载PDF报告...',\n          duration: 5000\n        });\n\n        // 最多尝试3次下载\n        let attempts = 0;\n        let success = false;\n        while (attempts < 3 && !success) {\n          attempts++;\n          if (attempts > 1) {\n            console.log(`尝试第${attempts}次下载...`);\n            Toast.loading({\n              message: `尝试第${attempts}次下载...`,\n              duration: 2000\n            });\n            // 在重试之前等待一段时间\n            await new Promise(resolve => setTimeout(resolve, 2000));\n          }\n\n          // 使用流式下载模式，并处理返回值\n          success = await downloadPDFAsStream();\n\n          // 如果流式下载成功，直接返回，不再尝试其他方法\n          if (success === true) {\n            return;\n          }\n        }\n\n        // 如果多次尝试后仍然失败，提示用户\n        if (!success) {\n          Toast.clear();\n          Dialog.alert({\n            title: 'PDF下载失败',\n            message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。'\n          });\n        }\n      } catch (error) {\n        console.error('下载PDF过程中发生错误:', error);\n        Toast.clear();\n        Toast.fail('生成PDF报告失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 本地生成PDF的函数\n    const generatePDFLocally = async () => {\n      console.log('使用客户端jsPDF库生成PDF');\n\n      // 获取内容元素\n      const element = document.querySelector('.result-container');\n      if (!element) {\n        throw new Error('找不到要转换的内容元素');\n      }\n      Toast.loading({\n        message: '正在捕获页面内容...',\n        duration: 5000\n      });\n      try {\n        // 在捕获内容前先应用Markdown格式（临时）\n        const sections = document.querySelectorAll('.analysis-section');\n        const originalContents = [];\n\n        // 确保所有Markdown内容都已经被渲染为HTML\n        sections.forEach((section, index) => {\n          const contentElement = section.querySelector('p, .markdown-content');\n          if (contentElement && !contentElement.classList.contains('markdown-content')) {\n            originalContents.push({\n              element: contentElement,\n              content: contentElement.innerHTML\n            });\n\n            // 如果内容中有Markdown语法但尚未渲染，则渲染它\n            if (contentElement.textContent.includes('**') || contentElement.textContent.includes('##') || contentElement.textContent.includes('--') || contentElement.textContent.includes('- ')) {\n              contentElement.innerHTML = md.render(contentElement.textContent);\n              contentElement.classList.add('markdown-content-temp');\n            }\n          }\n        });\n\n        // 使用html2canvas捕获内容\n        const canvas = await html2canvas(element, {\n          scale: 1,\n          useCORS: true,\n          logging: false,\n          windowWidth: document.documentElement.offsetWidth,\n          windowHeight: document.documentElement.offsetHeight\n        });\n        Toast.loading({\n          message: '正在生成PDF文件...',\n          duration: 5000\n        });\n\n        // 创建PDF文档\n        const pdf = new jsPDF('p', 'mm', 'a4');\n\n        // 计算尺寸和比例\n        const imgData = canvas.toDataURL('image/png');\n        const imgWidth = 210; // A4宽度，单位mm\n        const pageHeight = 297; // A4高度，单位mm\n        const imgHeight = canvas.height * imgWidth / canvas.width;\n        let heightLeft = imgHeight;\n        let position = 0;\n\n        // 添加首页\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n\n        // 如果内容超过一页，添加更多页\n        while (heightLeft > 0) {\n          position = heightLeft - imgHeight;\n          pdf.addPage();\n          pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n          heightLeft -= pageHeight;\n        }\n\n        // 添加页脚\n        const pageCount = pdf.internal.getNumberOfPages();\n        for (let i = 1; i <= pageCount; i++) {\n          pdf.setPage(i);\n          pdf.setFontSize(10);\n          pdf.setTextColor(150);\n          pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, {\n            align: 'center'\n          });\n        }\n\n        // 恢复原始内容\n        originalContents.forEach(item => {\n          if (item && item.element) {\n            item.element.innerHTML = item.content;\n            item.element.classList.remove('markdown-content-temp');\n          }\n        });\n\n        // 保存PDF\n        pdf.save(`八字命理分析_${resultId.value}.pdf`);\n        return true;\n      } catch (error) {\n        console.error('本地PDF生成错误:', error);\n        throw error;\n      }\n    };\n    const shareResult = () => {\n      Toast.success('分享功能开发中');\n    };\n\n    // 处理本地PDF生成\n    const handleLocalPDFGeneration = async () => {\n      try {\n        Toast.loading({\n          message: '正在本地生成PDF...',\n          duration: 0,\n          forbidClick: true\n        });\n\n        // 确保所有内容都已经渲染Markdown\n        const sections = document.querySelectorAll('.analysis-section');\n        const originalContents = [];\n        let needsRendering = false;\n\n        // 检查是否有内容需要渲染\n        sections.forEach(section => {\n          const contentElement = section.querySelector('p:not(.markdown-content)');\n          if (contentElement) {\n            needsRendering = true;\n          }\n        });\n\n        // 如果需要渲染，先将所有内容进行Markdown渲染\n        if (needsRendering) {\n          console.log('检测到需要渲染Markdown内容');\n          sections.forEach(section => {\n            const contentElements = section.querySelectorAll('p:not(.markdown-content)');\n            contentElements.forEach(element => {\n              const text = element.textContent;\n              if (text && (text.includes('**') || text.includes('#') || text.includes('-') || text.includes('1.') || text.includes('\\n'))) {\n                originalContents.push({\n                  element: element,\n                  content: element.innerHTML\n                });\n                element.innerHTML = md.render(text);\n                element.classList.add('markdown-content');\n                element.classList.add('temp-rendered');\n              }\n            });\n          });\n        }\n\n        // 生成PDF\n        await generatePDFLocally();\n\n        // 恢复原始内容\n        if (needsRendering) {\n          document.querySelectorAll('.temp-rendered').forEach(element => {\n            const original = originalContents.find(item => item.element === element);\n            if (original) {\n              element.innerHTML = original.content;\n              element.classList.remove('markdown-content');\n              element.classList.remove('temp-rendered');\n            }\n          });\n        }\n        Toast.clear();\n        Toast.success('本地PDF生成成功');\n      } catch (error) {\n        console.error('本地PDF生成失败:', error);\n        Toast.clear();\n        Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 添加分析状态检查函数\n    const checkAnalysisStatus = async resultId => {\n      try {\n        console.log('检查分析状态:', resultId);\n        const response = await axios.get(`/api/bazi/result/${resultId}`);\n        if (response.data.code === 200) {\n          // 检查AI分析是否已经生成\n          const aiAnalysisData = response.data.data.aiAnalysis || {};\n\n          // 统计已完成和正在分析的项目\n          let totalItems = 0;\n          let completedItems = 0;\n          Object.entries(aiAnalysisData).forEach(([key, value]) => {\n            totalItems++;\n            if (!(typeof value === 'string' && value.includes('正在分析'))) {\n              completedItems++;\n            }\n          });\n\n          // 更新进度\n          if (totalItems > 0) {\n            analyzeProgress.value = Math.floor(completedItems / totalItems * 100);\n          }\n\n          // 检查是否还有\"正在分析\"的内容\n          const stillAnalyzing = Object.values(aiAnalysisData).some(value => typeof value === 'string' && value.includes('正在分析'));\n          isAnalyzing.value = stillAnalyzing;\n          if (stillAnalyzing) {\n            console.log('分析仍在进行中...', `完成度: ${analyzeProgress.value}%`);\n            return false;\n          } else {\n            console.log('分析已完成');\n            return true;\n          }\n        }\n        return false;\n      } catch (error) {\n        console.error('检查分析状态出错:', error);\n        return false;\n      }\n    };\n\n    // 添加轮询检查函数\n    const pollAnalysisStatus = async (resultId, maxAttempts = 30) => {\n      let attempts = 0;\n\n      // 显示进度条\n      isAnalyzing.value = true;\n\n      // 创建模拟进度，即使后端没有反馈也会看到进度在增加\n      if (analyzeTimer.value) clearInterval(analyzeTimer.value);\n      analyzeTimer.value = setInterval(() => {\n        if (analyzeProgress.value < 90) {\n          analyzeProgress.value += 2;\n        }\n      }, 2000);\n      return new Promise(resolve => {\n        const checkInterval = setInterval(async () => {\n          attempts++;\n          const isComplete = await checkAnalysisStatus(resultId);\n          if (isComplete || attempts >= maxAttempts) {\n            clearInterval(checkInterval);\n\n            // 清除模拟进度定时器\n            if (analyzeTimer.value) {\n              clearInterval(analyzeTimer.value);\n              analyzeTimer.value = null;\n            }\n            if (isComplete) {\n              // 如果完成，确保进度显示100%\n              analyzeProgress.value = 100;\n              setTimeout(() => {\n                isAnalyzing.value = false;\n              }, 1000); // 短暂显示100%后隐藏进度条\n            }\n            await getBaziResult(); // 最后再获取一次完整结果\n            Toast.clear();\n            resolve(isComplete);\n          }\n        }, 2000); // 每2秒检查一次\n      });\n    };\n\n    // 修改reloadBaziData函数，添加轮询逻辑\n    const reloadBaziData = async () => {\n      Toast.loading('正在重新加载数据...');\n      try {\n        if (!resultId.value) {\n          Toast.fail('缺少结果ID');\n          return;\n        }\n        console.log(`重新加载数据，结果ID: ${resultId.value}`);\n\n        // 获取URL参数\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // 尝试使用模拟支付接口\n        try {\n          console.log('尝试使用模拟支付接口...');\n\n          // 显示加载提示\n          Toast.loading({\n            message: '正在处理支付...',\n            duration: 0,\n            position: 'middle',\n            forbidClick: true\n          });\n\n          // 准备请求数据\n          const requestData = {\n            birthDate: baziData.value.birthDate || urlParams.get('birthDate'),\n            birthTime: baziData.value.birthTime || urlParams.get('birthTime'),\n            gender: baziData.value.gender || urlParams.get('gender')\n          };\n          console.log('请求数据:', requestData);\n\n          // 发送模拟支付请求\n          const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId.value}`, requestData);\n          console.log('模拟支付响应:', mockPaymentResponse.data);\n          if (mockPaymentResponse.data.code === 200) {\n            // 支付成功，显示成功提示\n            Toast.success('支付成功');\n\n            // 使用返回的resultId重新加载数据\n            if (mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n              const newResultId = mockPaymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n\n              // 更新全局的resultId变量\n              resultId.value = newResultId;\n              // 还需要更新本地存储中的resultId\n              localStorage.setItem('resultId', newResultId);\n\n              // 显示正在加载分析结果\n              Toast.loading({\n                message: '正在生成八字分析结果，这可能需要30-60秒...',\n                duration: 0,\n                position: 'middle',\n                forbidClick: true\n              });\n\n              // 轮询检查分析状态\n              const analysisComplete = await pollAnalysisStatus(newResultId);\n              if (analysisComplete) {\n                Toast.success('分析已完成');\n              } else {\n                Toast.success('已完成部分分析，显示可用结果');\n              }\n\n              // 重新加载追问分析结果\n              await loadFollowupResults();\n              return;\n            }\n          }\n        } catch (mockError) {\n          console.error('模拟支付失败:', mockError);\n          Toast.fail('重新加载失败: ' + (mockError.message || '未知错误'));\n          return;\n        }\n\n        // 如果模拟支付失败，尝试直接获取结果\n        try {\n          Toast.loading({\n            message: '正在加载现有分析结果...',\n            duration: 0,\n            forbidClick: true\n          });\n          const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n          if (response.data.code === 200) {\n            // 更新八字数据，使用空值合并运算符确保数据存在\n            baziData.value = {\n              yearPillar: response.data.data.baziChart?.yearPillar || null,\n              monthPillar: response.data.data.baziChart?.monthPillar || null,\n              dayPillar: response.data.data.baziChart?.dayPillar || null,\n              hourPillar: response.data.data.baziChart?.hourPillar || null,\n              fiveElements: response.data.data.baziChart?.fiveElements || null,\n              flowingYears: response.data.data.baziChart?.flowingYears || [],\n              shenSha: response.data.data.baziChart?.shenSha || baziData.value.shenSha,\n              daYun: response.data.data.baziChart?.daYun || baziData.value.daYun,\n              birthDate: response.data.data.baziChart?.birthDate || null,\n              birthTime: response.data.data.baziChart?.birthTime || null,\n              gender: response.data.data.baziChart?.gender || null\n            };\n\n            // 更新AI分析结果\n            aiAnalysis.value = {\n              health: response.data.data.aiAnalysis?.health || '',\n              career: response.data.data.aiAnalysis?.career || '',\n              relationship: response.data.data.aiAnalysis?.relationship || '',\n              children: response.data.data.aiAnalysis?.children || '',\n              social: response.data.data.aiAnalysis?.social || '',\n              future: response.data.data.aiAnalysis?.future || '',\n              parents: response.data.data.aiAnalysis?.parents || '',\n              education: response.data.data.aiAnalysis?.education || '',\n              // 新增字段\n              coreAnalysis: response.data.data.aiAnalysis?.coreAnalysis || '',\n              fiveElements: response.data.data.aiAnalysis?.fiveElements || '',\n              shenShaAnalysis: response.data.data.aiAnalysis?.shenShaAnalysis || '',\n              keyPoints: response.data.data.aiAnalysis?.keyPoints || ''\n            };\n\n            // 检查是否存在\"正在分析\"的内容\n            const stillAnalyzing = Object.values(aiAnalysis.value).some(value => typeof value === 'string' && value.includes('正在分析'));\n\n            // 更新分析状态\n            isAnalyzing.value = stillAnalyzing;\n            if (stillAnalyzing) {\n              console.log('分析仍在进行中...');\n              // 不显示Toast，因为我们已经有进度条显示\n            } else {\n              // 分析完成\n              analyzeProgress.value = 100;\n              setTimeout(() => {\n                isAnalyzing.value = false;\n              }, 1000);\n            }\n\n            // 重新加载追问分析结果\n            console.log('重新加载追问分析结果...');\n            await loadFollowupResults();\n\n            // 遍历所有已支付的追问选项，强制重新获取分析结果\n            const paidOptions = followupOptions.value.filter(option => option.paid);\n            if (paidOptions.length > 0) {\n              console.log('发现已支付的追问选项，强制重新获取:', paidOptions.map(o => o.id));\n              for (const option of paidOptions) {\n                await getFollowupAnalysis(option.id);\n              }\n            }\n            Toast.success('数据刷新成功');\n          } else {\n            Toast.fail(response.data.message || '加载失败');\n          }\n        } catch (error) {\n          console.error('重新加载失败:', error);\n          Toast.fail('加载失败: ' + (error.message || '未知错误'));\n        }\n      } catch (error) {\n        console.error('重新加载失败:', error);\n        Toast.fail('加载失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 追问相关状态\n    const followupOptions = ref([{\n      id: 'marriage',\n      name: '婚姻感情',\n      selected: false,\n      paid: false\n    }, {\n      id: 'career',\n      name: '事业财运',\n      selected: false,\n      paid: false\n    }, {\n      id: 'children',\n      name: '子女情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'parents',\n      name: '父母情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'health',\n      name: '身体健康',\n      selected: false,\n      paid: false\n    }, {\n      id: 'education',\n      name: '学业',\n      selected: false,\n      paid: false\n    }, {\n      id: 'relationship',\n      name: '人际关系',\n      selected: false,\n      paid: false\n    }, {\n      id: 'fiveYears',\n      name: '近五年运势',\n      selected: false,\n      paid: false\n    }]);\n    const currentFollowup = ref(null);\n    const showFollowupDialog = ref(false);\n    const followupAnalysis = ref({});\n    const isLoadingFollowup = ref(false);\n\n    // 选择追问选项\n    const selectFollowupOption = async option => {\n      // 设置当前选择的追问选项\n      currentFollowup.value = option;\n\n      // 如果已经支付过，直接显示结果\n      if (option.paid) {\n        console.log(`选择已支付的追问: ${option.id}`);\n\n        // 如果已有分析结果，直接显示\n        if (followupAnalysis.value[option.id]) {\n          console.log(`已有${option.id}分析结果，直接显示`);\n          return;\n        }\n\n        // 如果没有分析结果，尝试获取\n        console.log(`尝试获取${option.id}分析结果`);\n        Toast.loading({\n          message: '正在加载分析结果...',\n          duration: 0\n        });\n        try {\n          // 尝试获取分析结果\n          const analysis = await getFollowupAnalysis(option.id);\n          if (analysis && typeof analysis === 'string' && analysis.length > 0) {\n            Toast.success('加载成功');\n            console.log(`成功获取${option.id}分析结果，长度: ${analysis.length}`);\n          } else {\n            Toast.fail('分析结果尚未生成完成，请稍后再试');\n            console.warn(`获取${option.id}分析结果失败或为空`);\n          }\n        } catch (error) {\n          console.error(`获取${option.id}分析失败:`, error);\n          Toast.fail('获取分析失败，请重试');\n        } finally {\n          Toast.clear();\n        }\n        return;\n      }\n\n      // 否则显示支付对话框\n      showFollowupDialog.value = true;\n    };\n\n    // 支付追问费用\n    const payForFollowup = async () => {\n      if (!currentFollowup.value) return;\n      try {\n        isLoadingFollowup.value = true;\n\n        // 第一步：创建订单\n        Toast.loading({\n          message: '正在创建订单...',\n          forbidClick: true,\n          duration: 0\n        });\n\n        // 获取URL参数\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // 创建追问订单\n        const orderResponse = await axios.post('/api/order/create/followup', {\n          resultId: resultId.value,\n          area: currentFollowup.value.id\n        });\n        if (orderResponse.data.code === 200) {\n          const followupOrderId = orderResponse.data.data.orderId;\n          console.log('追问订单创建成功:', followupOrderId);\n\n          // 第二步：处理支付\n          Toast.loading({\n            message: '正在处理支付...',\n            forbidClick: true,\n            duration: 0\n          });\n\n          // 模拟支付\n          const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\n            birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\n            birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\n            gender: baziData.value?.gender || urlParams.get('gender'),\n            area: currentFollowup.value.id,\n            resultId: resultId.value\n          });\n          if (paymentResponse.data.code === 200) {\n            console.log('追问支付成功:', paymentResponse.data);\n            Toast.success('支付成功');\n\n            // 立即更新UI状态，将当前追问标记为已付费\n            const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n            if (index !== -1) {\n              followupOptions.value[index].paid = true;\n              followupOptions.value = [...followupOptions.value]; // 强制Vue更新\n            }\n\n            // 第三步：加载分析结果\n            Toast.loading({\n              message: '正在生成分析结果，这可能需要30-60秒...',\n              forbidClick: true,\n              duration: 0\n            });\n\n            // 获取并保存新的resultId（如果有的话）\n            if (paymentResponse.data.data && paymentResponse.data.data.resultId) {\n              const newResultId = paymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n              // 更新全局的resultId变量\n              resultId.value = newResultId;\n              // 还需要更新本地存储中的resultId\n              localStorage.setItem('resultId', newResultId);\n            }\n\n            // 轮询检查分析结果状态\n            const area = currentFollowup.value.id;\n            let isComplete = false;\n            let attempts = 0;\n            const maxAttempts = 60; // 最多等待120秒（60次 * 2秒）\n\n            // 自定义轮询检查追问分析状态\n            const pollFollowupStatus = async () => {\n              console.log(`开始轮询追问分析状态: ${area}`);\n\n              // 开始计时\n              const startTime = new Date().getTime();\n              const timeoutMs = 120000; // 120秒超时\n\n              while (attempts < maxAttempts && !isComplete) {\n                attempts++;\n                try {\n                  // 等待2秒\n                  await new Promise(resolve => setTimeout(resolve, 2000));\n\n                  // 检查是否超时\n                  const currentTime = new Date().getTime();\n                  if (currentTime - startTime > timeoutMs) {\n                    console.warn(`轮询追问分析状态超时: ${area}`);\n                    break;\n                  }\n\n                  // 检查追问分析结果\n                  console.log(`尝试第${attempts}次获取追问分析: ${area}`);\n                  const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n                  if (response.data.code === 200 && response.data.data && response.data.data.analysis) {\n                    // 检查分析内容是否为\"正在分析\"\n                    const analysis = response.data.data.analysis;\n                    if (typeof analysis === 'string' && !analysis.includes('正在分析')) {\n                      console.log(`成功获取追问分析结果: ${area}`);\n                      isComplete = true;\n                      followupAnalysis.value[area] = analysis;\n                      break;\n                    } else {\n                      console.log(`追问分析结果还在生成中: ${area}`);\n                    }\n                  }\n                } catch (error) {\n                  // 只有非404错误才打印详细信息\n                  if (!error.response || error.response.status !== 404) {\n                    console.error('检查追问分析状态出错:', error);\n                  }\n\n                  // 如果遇到404错误，表示追问分析尚未创建完毕\n                  if (error.response && error.response.status === 404) {\n                    console.log('追问分析尚未创建完毕，继续等待...');\n                  } else if (attempts >= maxAttempts / 2) {\n                    // 如果尝试次数超过一半且仍然失败，不要退出轮询，但记录错误\n                    console.warn(`获取分析数据失败(${attempts}/${maxAttempts})，继续尝试...`);\n                  }\n                }\n              }\n\n              // 无论是否完成，都尝试获取最终结果\n              console.log(`轮询完成，最终尝试获取追问分析: ${area}`);\n              try {\n                const finalResult = await getFollowupAnalysis(area);\n                console.log(`最终获取追问分析结果: ${finalResult ? '成功' : '失败'}`);\n                return finalResult;\n              } catch (error) {\n                console.error('获取最终追问分析结果失败:', error);\n                // 如果分析结果仍然不可用，显示友好的错误信息\n                followupAnalysis.value[area] = \"分析正在处理中，请稍后刷新页面查看。\";\n                return null;\n              }\n            };\n\n            // 开始轮询\n            const result = await pollFollowupStatus();\n\n            // 更新UI\n            Toast.clear();\n            if (result) {\n              Toast.success('分析已完成');\n\n              // 支付成功且分析完成后，切换到AI分析结果标签页显示结果\n              activeTab.value = 1; // 切换到AI分析结果标签\n\n              // 滚动到相应分析部分\n              setTimeout(() => {\n                const sectionMap = {\n                  'relationship': '婚姻感情',\n                  'marriage': '婚姻感情',\n                  'career': '事业财运',\n                  'work': '事业财运',\n                  'money': '事业财运',\n                  'wealth': '事业财运',\n                  'children': '子女情况',\n                  'family': '子女情况',\n                  'parents': '父母情况',\n                  'health': '身体健康',\n                  'education': '学业',\n                  'study': '学业',\n                  'social': '人际关系',\n                  'friends': '人际关系',\n                  'future': '近五年运势',\n                  'fiveYears': '近五年运势'\n                };\n                const targetTitle = sectionMap[currentFollowup.value.id];\n                if (targetTitle) {\n                  // 查找并滚动到对应的分析部分\n                  const sections = document.querySelectorAll('.analysis-section h3');\n                  for (let i = 0; i < sections.length; i++) {\n                    if (sections[i].textContent.includes(targetTitle)) {\n                      sections[i].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'center'\n                      });\n\n                      // 高亮显示该部分\n                      const section = sections[i].parentElement;\n                      section.classList.add('highlight-section');\n                      setTimeout(() => {\n                        section.classList.remove('highlight-section');\n                      }, 3000);\n                      break;\n                    }\n                  }\n                }\n              }, 500);\n            } else {\n              Toast.success('正在生成分析，请稍后刷新查看');\n            }\n            showFollowupDialog.value = false;\n\n            // 确保界面刷新显示分析结果\n            setTimeout(() => {\n              const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n              if (index !== -1) {\n                // 强制更新\n                followupOptions.value = [...followupOptions.value];\n              }\n            }, 500);\n          } else {\n            Toast.fail('支付失败');\n          }\n        } else {\n          Toast.fail('创建订单失败');\n        }\n      } catch (error) {\n        console.error('追问支付过程出错:', error);\n        Toast.fail('处理失败，请重试');\n      } finally {\n        isLoadingFollowup.value = false;\n        Toast.clear();\n      }\n    };\n\n    // 获取追问分析结果\n    const getFollowupAnalysis = async area => {\n      loading.value = true;\n      try {\n        console.log(`开始获取[${area}]追问分析，结果ID: ${resultId.value}`);\n        const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n        if (response.data.code === 200) {\n          console.log('获取追问分析成功，响应数据:', response.data);\n          console.log('响应data字段详情:', JSON.stringify(response.data.data));\n\n          // 处理分析结果为null或空的情况\n          if (!response.data.data) {\n            console.warn(`追问分析结果data为空: ${area}`);\n            const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\n            followupAnalysis.value[area] = defaultMessage;\n            return defaultMessage;\n          }\n\n          // 提取分析内容，处理不同的响应格式\n          let analysisContent = null;\n          if (response.data.data.analysis) {\n            // 标准格式：{area, analysis}\n            analysisContent = response.data.data.analysis;\n            console.log(`获取到标准格式分析结果, 类型: ${typeof analysisContent}, 长度: ${analysisContent ? analysisContent.length : 0}`);\n          } else if (typeof response.data.data === 'string') {\n            // 直接字符串格式\n            analysisContent = response.data.data;\n            console.log(`获取到字符串格式分析结果, 长度: ${analysisContent.length}`);\n          } else if (response.data.data[area]) {\n            // 对象格式：{area1: \"分析1\", area2: \"分析2\"}\n            analysisContent = response.data.data[area];\n            console.log(`获取到对象格式分析结果, 长度: ${analysisContent ? analysisContent.length : 0}`);\n          } else {\n            // 尝试遍历所有属性，看是否有匹配的内容\n            console.log('尝试查找匹配内容，data的所有键:', Object.keys(response.data.data));\n            for (const key in response.data.data) {\n              if (key.toLowerCase() === area.toLowerCase() || area === 'fiveYears' && key === 'future' || area === 'future' && key === 'fiveYears') {\n                analysisContent = response.data.data[key];\n                console.log(`找到匹配的键[${key}]，内容长度: ${analysisContent ? analysisContent.length : 0}`);\n                break;\n              }\n            }\n          }\n\n          // 检查分析结果是否为null或空\n          if (!analysisContent) {\n            console.warn(`无法从响应中提取有效分析内容: ${area}`);\n            const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析尚未生成，请稍后刷新页面查看。`;\n            followupAnalysis.value[area] = defaultMessage;\n            return defaultMessage;\n          }\n\n          // 检查分析结果是否是空字符串\n          if (typeof analysisContent === 'string' && analysisContent.trim() === '') {\n            console.warn(`追问分析结果为空字符串: ${area}`);\n            const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\n            followupAnalysis.value[area] = defaultMessage;\n            return defaultMessage;\n          }\n\n          // 记录有效的分析结果\n          console.log(`获取到有效的[${area}]分析结果，长度: ${analysisContent.length}`);\n\n          // 存储并返回分析结果\n          followupAnalysis.value[area] = analysisContent;\n          return analysisContent;\n        } else {\n          console.error('获取追问分析失败:', response.data);\n          const errorMessage = `获取分析失败: ${response.data.message || '未知错误'}`;\n          followupAnalysis.value[area] = errorMessage;\n          return errorMessage;\n        }\n      } catch (error) {\n        console.error('获取追问分析出错:', error);\n        const errorMessage = `获取分析出错: ${error.message || '请稍后重试'}`;\n        followupAnalysis.value[area] = errorMessage;\n        return errorMessage;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 检查已支付的追问\n    const checkPaidFollowups = async () => {\n      try {\n        const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            const isPaid = paidFollowups.some(f => f.area === option.id);\n            if (isPaid) {\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n        }\n      } catch (error) {\n        console.error('检查已支付追问出错:', error);\n      }\n    };\n\n    // 修改getBaziResult函数\n    const getBaziResult = async () => {\n      loading.value = true;\n      try {\n        console.log('获取八字分析结果，ID:', resultId.value);\n        const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n        console.log('八字分析结果:', response.data);\n        if (response.data.code === 200 && response.data.data) {\n          // 更新八字数据，使用深度合并确保数据结构完整\n          if (response.data.data.baziChart) {\n            baziData.value = {\n              yearPillar: response.data.data.baziChart.yearPillar || baziData.value.yearPillar,\n              monthPillar: response.data.data.baziChart.monthPillar || baziData.value.monthPillar,\n              dayPillar: response.data.data.baziChart.dayPillar || baziData.value.dayPillar,\n              hourPillar: response.data.data.baziChart.hourPillar || baziData.value.hourPillar,\n              fiveElements: response.data.data.baziChart.fiveElements || baziData.value.fiveElements,\n              flowingYears: response.data.data.baziChart.flowingYears || [],\n              shenSha: response.data.data.baziChart.shenSha || baziData.value.shenSha,\n              daYun: response.data.data.baziChart.daYun || baziData.value.daYun,\n              birthDate: response.data.data.baziChart.birthDate || null,\n              birthTime: response.data.data.baziChart.birthTime || null,\n              gender: response.data.data.baziChart.gender || null\n            };\n          } else {\n            console.warn('响应中缺少baziChart数据');\n            Toast.fail('数据格式不正确');\n          }\n\n          // 更新AI分析结果\n          if (response.data.data.aiAnalysis) {\n            aiAnalysis.value = {\n              health: response.data.data.aiAnalysis.health || '',\n              career: response.data.data.aiAnalysis.career || '',\n              relationship: response.data.data.aiAnalysis.relationship || '',\n              children: response.data.data.aiAnalysis.children || '',\n              social: response.data.data.aiAnalysis.social || '',\n              future: response.data.data.aiAnalysis.future || '',\n              parents: response.data.data.aiAnalysis.parents || '',\n              education: response.data.data.aiAnalysis.education || '',\n              // 新增字段\n              coreAnalysis: response.data.data.aiAnalysis.coreAnalysis || '',\n              fiveElements: response.data.data.aiAnalysis.fiveElements || '',\n              shenShaAnalysis: response.data.data.aiAnalysis.shenShaAnalysis || '',\n              keyPoints: response.data.data.aiAnalysis.keyPoints || ''\n            };\n          }\n\n          // 初始化追问选项\n          initFollowupOptions();\n\n          // 加载已支付的追问分析结果\n          await loadFollowupResults();\n          Toast.success('分析结果加载成功');\n        } else {\n          console.error('获取八字分析结果失败:', response.data.message);\n          Toast.fail(response.data.message || '获取分析结果失败');\n        }\n      } catch (error) {\n        console.error('获取八字分析结果出错:', error);\n        Toast.fail('获取分析结果失败，请稍后再试');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 添加缺失的函数\n    // 初始化追问选项\n    const initFollowupOptions = () => {\n      // 根据用户年龄调整追问选项\n      if (userAge.value !== null) {\n        if (userAge.value < 6) {\n          // 为婴幼儿调整选项\n          followupOptions.value = followupOptions.value.filter(option => ['health', 'personality', 'education', 'parents'].includes(option.id));\n        } else if (userAge.value < 18) {\n          // 为未成年人调整选项\n          followupOptions.value = followupOptions.value.filter(option => !['marriage', 'career'].includes(option.id));\n        }\n      }\n      console.log('初始化追问选项完成:', followupOptions.value);\n    };\n\n    // 加载已支付的追问分析结果\n    const loadFollowupResults = async () => {\n      try {\n        // 检查是否有结果ID\n        if (!resultId.value) {\n          console.warn('缺少结果ID，无法加载追问分析');\n          return;\n        }\n        console.log('开始加载追问分析结果列表:', resultId.value);\n\n        // 调用API获取已支付的追问列表\n        const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n          console.log('获取到的追问列表:', paidFollowups);\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            // 检查是否有匹配的追问分析\n            const isPaid = paidFollowups.some(f => {\n              // 尝试多种匹配方式\n              if (typeof f === 'object') {\n                // 对象格式：检查area字段\n                return f.area === option.id;\n              } else if (typeof f === 'string') {\n                // 字符串格式：直接比较\n                return f === option.id;\n              }\n              return false;\n            });\n            if (isPaid) {\n              console.log(`发现已支付的追问: ${option.id}`);\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n          console.log('更新后的追问选项:', followupOptions.value);\n        } else {\n          console.warn('获取追问列表失败或返回空列表');\n        }\n      } catch (error) {\n        console.error('加载追问分析结果出错:', error);\n        // 出错时不显示错误提示，静默失败\n      }\n    };\n\n    // 解析八字数据\n    const parseBaZiData = data => {\n      if (!data) return null;\n      return {\n        yearPillar: data.yearPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        monthPillar: data.monthPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        dayPillar: data.dayPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        hourPillar: data.hourPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        shenSha: data.shenSha || {\n          dayChong: '未知',\n          zhiShen: '未知',\n          pengZuGan: '未知',\n          pengZuZhi: '未知',\n          xiShen: '未知',\n          fuShen: '未知',\n          caiShen: '未知',\n          benMing: [],\n          yearGan: [],\n          yearZhi: [],\n          dayGan: [],\n          dayZhi: []\n        },\n        daYun: data.daYun || {\n          startAge: 0,\n          startYear: 0,\n          isForward: true,\n          daYunList: []\n        },\n        flowingYears: data.flowingYears || []\n      };\n    };\n\n    // 添加分析状态检测函数\n    const isAnalysisItemLoading = key => {\n      if (!aiAnalysis.value) return true;\n      const value = aiAnalysis.value[key];\n      return !value || value === '暂无' || value.includes && value.includes('正在分析');\n    };\n\n    // 清理组件时移除定时器\n    onUnmounted(() => {\n      if (analyzeTimer.value) {\n        clearInterval(analyzeTimer.value);\n        analyzeTimer.value = null;\n      }\n    });\n\n    // 刷新特定追问的分析结果\n    const reloadFollowupAnalysis = async area => {\n      if (!area) return;\n      try {\n        isLoadingFollowup.value = true;\n        Toast.loading({\n          message: '正在刷新分析结果...',\n          duration: 0\n        });\n        console.log(`刷新${area}分析结果`);\n        const analysis = await getFollowupAnalysis(area);\n        if (analysis && typeof analysis === 'string' && analysis.length > 0) {\n          Toast.success('刷新成功');\n          console.log(`成功刷新${area}分析结果，长度: ${analysis.length}`);\n        } else {\n          Toast.fail('分析结果尚未生成完成');\n          console.warn(`刷新${area}分析结果失败或为空`);\n        }\n      } catch (error) {\n        console.error(`刷新${area}分析失败:`, error);\n        Toast.fail('刷新失败，请重试');\n      } finally {\n        isLoadingFollowup.value = false;\n        Toast.clear();\n      }\n    };\n    const __returned__ = {\n      md,\n      route,\n      router,\n      resultId,\n      activeTab,\n      loading,\n      isAnalyzing,\n      analyzeProgress,\n      analyzeTimer,\n      renderMarkdown,\n      userAge,\n      getAnalysisContent,\n      focusAreas,\n      analysisResult,\n      baziData,\n      aiAnalysis,\n      testApiConnection,\n      getElementName,\n      onClickLeft,\n      downloadPDFAsStream,\n      downloadPDF,\n      generatePDFLocally,\n      shareResult,\n      handleLocalPDFGeneration,\n      checkAnalysisStatus,\n      pollAnalysisStatus,\n      reloadBaziData,\n      followupOptions,\n      currentFollowup,\n      showFollowupDialog,\n      followupAnalysis,\n      isLoadingFollowup,\n      selectFollowupOption,\n      payForFollowup,\n      getFollowupAnalysis,\n      checkPaidFollowups,\n      getBaziResult,\n      initFollowupOptions,\n      loadFollowupResults,\n      parseBaZiData,\n      isAnalysisItemLoading,\n      reloadFollowupAnalysis,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      watch,\n      onUnmounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get jsPDF() {\n        return jsPDF;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get axios() {\n        return axios;\n      },\n      get MarkdownIt() {\n        return MarkdownIt;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","watch","onUnmounted","useRoute","useRouter","Toast","Dialog","jsPDF","html2canvas","axios","MarkdownIt","md","html","breaks","linkify","typographer","route","router","resultId","params","id","query","activeTab","loading","isAnalyzing","analyzeProgress","analyzeTimer","renderMarkdown","content","includes","processedContent","replace","match","hashes","text","level","Math","min","length","hasNumberList","test","listTag","paragraphs","split","map","p","trim","startsWith","join","render","e","console","error","userAge","age","isNaN","parseInt","value","localStorage","getItem","log","getAnalysisContent","sectionName","aiAnalysis","personality","education","health","healthText","sectionMatch","RegExp","overall","futureMatch","focusAreas","analysisResult","baziData","yearPillar","heavenlyStem","earthlyBranch","naYin","shiShen","wangShuai","monthPillar","dayPillar","hourPillar","fiveElements","flowingYears","shenSha","dayChong","zhiShen","xiShen","fuShen","caiShen","benMing","yearGan","yearZhi","dayGan","dayZhi","daYun","startAge","startYear","isForward","daYunList","birthDate","birthTime","gender","career","relationship","children","social","future","parents","coreAnalysis","shenShaAnalysis","keyPoints","testApiConnection","response","get","data","success","fail","isApiConnected","warn","localResultId","urlResultId","setItem","message","duration","forbidClick","getBaziResult","stillAnalyzing","Object","values","some","pollAnalysisStatus","clear","getElementName","element","elementNames","onClickLeft","push","downloadPDFAsStream","position","timestamp","Date","getTime","downloadUrl","fetch","method","cache","headers","ok","errorMsg","status","contentType","errorData","json","errorText","substring","Error","disposition","filename","filenameMatch","fileExtension","endsWith","blob","size","isDownloadStarted","fileReader","FileReader","headerPromise","Promise","resolve","reject","onloadend","target","result","onerror","readAsArrayBuffer","slice","header","headerView","Uint8Array","headerString","String","fromCharCode","apply","url","window","URL","createObjectURL","iframe","document","createElement","style","display","body","appendChild","a","href","download","rel","contentWindow","click","setTimeout","revokeObjectURL","removeChild","pdfWindow","open","alert","title","confirmButtonText","then","openError","downloadPDF","loadFollowupResults","attempts","generatePDFLocally","querySelector","sections","querySelectorAll","originalContents","forEach","section","index","contentElement","classList","contains","innerHTML","textContent","add","canvas","scale","useCORS","logging","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","pdf","imgData","toDataURL","imgWidth","pageHeight","imgHeight","height","width","heightLeft","addImage","addPage","pageCount","internal","getNumberOfPages","i","setPage","setFontSize","setTextColor","pageSize","getWidth","getHeight","align","item","remove","save","shareResult","handleLocalPDFGeneration","needsRendering","contentElements","original","find","checkAnalysisStatus","code","aiAnalysisData","totalItems","completedItems","entries","key","floor","maxAttempts","clearInterval","setInterval","checkInterval","isComplete","reloadBaziData","urlParams","URLSearchParams","location","search","requestData","mockPaymentResponse","post","newResultId","analysisComplete","mockError","baziChart","paidOptions","followupOptions","filter","option","paid","o","getFollowupAnalysis","name","selected","currentFollowup","showFollowupDialog","followupAnalysis","isLoadingFollowup","selectFollowupOption","analysis","payForFollowup","orderResponse","area","followupOrderId","orderId","paymentResponse","findIndex","pollFollowupStatus","startTime","timeoutMs","currentTime","finalResult","sectionMap","targetTitle","scrollIntoView","behavior","block","parentElement","JSON","stringify","defaultMessage","analysisContent","keys","toLowerCase","errorMessage","checkPaidFollowups","followups","paidFollowups","isPaid","f","initFollowupOptions","parseBaZiData","pengZuGan","pengZuZhi","isAnalysisItemLoading","reloadFollowupAnalysis"],"sources":["D:/Python/20250603开发八字命理AI指导功能页码/开发八字命理AI指导功能页码/frontend/src/Result.vue"],"sourcesContent":["<template>\n  <div class=\"result-container\">\n    <van-nav-bar\n      title=\"八字分析结果\"\n      left-text=\"返回\"\n      left-arrow\n      @click-left=\"onClickLeft\"\n    />\n    \n    <div class=\"result-header\">\n      <h2>您的八字命盘分析</h2>\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\n    </div>\n    \n    <!-- 添加全局分析状态提示 -->\n    <van-notice-bar\n      v-if=\"isAnalyzing\"\n      color=\"#1989fa\"\n      background=\"#ecf9ff\"\n      left-icon=\"info-o\"\n      :scrollable=\"false\"\n      class=\"analysis-progress-notice\"\n    >\n      <div class=\"analysis-progress\">\n        <p>AI正在生成八字分析结果，这可能需要30-60秒</p>\n        <van-progress :percentage=\"analyzeProgress\" :show-pivot=\"false\" color=\"#1989fa\" />\n      </div>\n    </van-notice-bar>\n    \n    <van-tabs v-model=\"activeTab\" sticky>\n      <van-tab title=\"命盘信息\">\n        <div class=\"bazi-chart\">\n          <h3>八字命盘</h3>\n          <div v-if=\"baziData && baziData.yearPillar && baziData.monthPillar && baziData.dayPillar && baziData.hourPillar\" class=\"four-pillars\">\n            <!-- 年柱 -->\n            <div class=\"pillar\">\n              <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\n              <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\n              <div class=\"label\">年柱</div>\n              <div class=\"nayin\">{{ baziData.yearPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.yearPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.yearPillar.wangShuai }}</div>\n            </div>\n            \n            <!-- 月柱 -->\n            <div class=\"pillar\">\n              <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\n              <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\n              <div class=\"label\">月柱</div>\n              <div class=\"nayin\">{{ baziData.monthPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.monthPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.monthPillar.wangShuai }}</div>\n            </div>\n            \n            <!-- 日柱 -->\n            <div class=\"pillar\">\n              <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\n              <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\n              <div class=\"label\">日柱</div>\n              <div class=\"nayin\">{{ baziData.dayPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.dayPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.dayPillar.wangShuai }}</div>\n            </div>\n            \n            <!-- 时柱 -->\n            <div class=\"pillar\">\n              <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\n              <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\n              <div class=\"label\">时柱</div>\n              <div class=\"nayin\">{{ baziData.hourPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.hourPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.hourPillar.wangShuai }}</div>\n            </div>\n          </div>\n          <div v-else class=\"error-message\">\n            <van-empty description=\"八字数据加载失败，请重试\" />\n            <van-button type=\"primary\" size=\"small\" @click=\"reloadBaziData\">重新加载</van-button>\n          </div>\n          \n          <h3>五行分布</h3>\n          <div class=\"five-elements\" v-if=\"baziData && baziData.fiveElements\">\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">{{ value }}</div>\n            </div>\n          </div>\n          <div class=\"five-elements\" v-else>\n            <div class=\"element\" v-for=\"element in ['wood', 'fire', 'earth', 'metal', 'water']\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">--</div>\n            </div>\n          </div>\n          \n          <!-- 添加神煞显示 -->\n          <h3>神煞信息</h3>\n          <div class=\"shen-sha-info\" v-if=\"baziData && baziData.shenSha\">\n            <div class=\"shen-sha-content\">\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">日冲</span>\n                <span class=\"value\">{{ baziData.shenSha.dayChong }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">值神</span>\n                <span class=\"value\">{{ baziData.shenSha.zhiShen }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">喜神</span>\n                <span class=\"value\">{{ baziData.shenSha.xiShen }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">福神</span>\n                <span class=\"value\">{{ baziData.shenSha.fuShen }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">财神</span>\n                <span class=\"value\">{{ baziData.shenSha.caiShen }}</span>\n              </div>\n            </div>\n            \n            <!-- 本命神煞 -->\n            <div class=\"ben-ming-sha\" v-if=\"baziData.shenSha.benMing.length > 0\">\n              <h4>本命神煞</h4>\n              <div class=\"ben-ming-list\">\n                <span v-for=\"(sha, index) in baziData.shenSha.benMing\" :key=\"index\" class=\"ben-ming-item\">\n                  {{ sha }}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"shen-sha-info\" v-else>\n            <van-cell-group inset>\n              <van-cell title=\"神煞信息\" value=\"暂无数据\" />\n            </van-cell-group>\n          </div>\n          \n          <!-- 添加大运显示 -->\n          <h3>大运信息</h3>\n          <div class=\"da-yun-info\" v-if=\"baziData && baziData.daYun\">\n            <div class=\"qi-yun-info\">\n              <p>起运年龄: {{ baziData.daYun.startAge }}岁</p>\n              <p>起运年份: {{ baziData.daYun.startYear }}年</p>\n              <p>大运顺序: {{ baziData.daYun.isForward ? '顺行' : '逆行' }}</p>\n            </div>\n            \n            <!-- 大运列表 -->\n            <div class=\"da-yun-table\">\n              <table class=\"custom-table\">\n                <thead>\n                  <tr>\n                    <th>年龄</th>\n                    <th>年份</th>\n                    <th>天干</th>\n                    <th>地支</th>\n                    <th>纳音</th>\n                    <th>吉凶</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(yun, index) in baziData.daYun.daYunList\" :key=\"index\">\n                    <td>{{ yun.startAge }}-{{ yun.endAge }}</td>\n                    <td>{{ yun.startYear }}-{{ yun.endYear }}</td>\n                    <td>{{ yun.heavenlyStem }}</td>\n                    <td>{{ yun.earthlyBranch }}</td>\n                    <td>{{ yun.naYin }}</td>\n                    <td>{{ yun.jiXiong }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div class=\"da-yun-info\" v-else>\n            <van-cell-group inset>\n              <van-cell title=\"大运信息\" value=\"暂无数据\" />\n            </van-cell-group>\n          </div>\n          \n          <h3>流年信息</h3>\n          <div class=\"liu-nian-info\" v-if=\"baziData && baziData.flowingYears && baziData.flowingYears.length\">\n            <table class=\"custom-table\">\n              <thead>\n                <tr>\n                  <th>年份</th>\n                  <th>年龄</th>\n                  <th>天干</th>\n                  <th>地支</th>\n                  <th>五行</th>\n                  <th>神煞</th>\n                  <th>吉凶</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(year, index) in baziData.flowingYears\" :key=\"index\">\n                  <td>{{ year.year }}</td>\n                  <td>{{ year.age }}</td>\n                  <td>{{ year.heavenlyStem }}</td>\n                  <td>{{ year.earthlyBranch }}</td>\n                  <td>{{ getElementName(year.ganElement) }}/{{ getElementName(year.zhiElement) }}</td>\n                  <td>{{ year.shenSha && Array.isArray(year.shenSha) ? year.shenSha.join(', ') : '无' }}</td>\n                  <td>{{ year.jiXiong || '未知' }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"liu-nian-info\" v-else>\n            <van-empty description=\"流年数据暂无\" />\n          </div>\n        </div>\n      </van-tab>\n      \n      <van-tab title=\"AI分析结果\">\n        <div class=\"ai-analysis\">\n          <div v-if=\"userAge !== null && userAge < 0\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge !== null && userAge < 6\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对婴幼儿({{userAge}}岁)，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge !== null && userAge < 18\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未成年人({{userAge}}岁)，重点关注性格特点、学业发展和健康状况。\n            </van-notice-bar>\n          </div>\n          \n          <!-- 添加全局分析状态提示 -->\n          <van-notice-bar\n            v-if=\"isAnalyzing\"\n            color=\"#1989fa\"\n            background=\"#ecf9ff\"\n            left-icon=\"info-o\"\n            :scrollable=\"false\"\n            class=\"analysis-progress-notice\"\n          >\n            <div class=\"analysis-progress\">\n              <p>AI正在生成八字分析结果，这可能需要30-60秒</p>\n              <van-progress :percentage=\"analyzeProgress\" :show-pivot=\"false\" color=\"#1989fa\" />\n            </div>\n          </van-notice-bar>\n          \n          <!-- 八字命局核心分析 -->\n          <div class=\"analysis-section\">\n            <h3>八字命局核心分析</h3>\n            <template v-if=\"!aiAnalysis.coreAnalysis || aiAnalysis.coreAnalysis === '暂无' || aiAnalysis.coreAnalysis.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.coreAnalysis)\" class=\"markdown-content\"></div>\n          </div>\n          \n          <!-- 五行旺衰与用神 -->\n          <div class=\"analysis-section\">\n            <h3>五行旺衰与用神</h3>\n            <template v-if=\"!aiAnalysis.fiveElements || aiAnalysis.fiveElements === '暂无' || aiAnalysis.fiveElements.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.fiveElements)\" class=\"markdown-content\"></div>\n          </div>\n          \n          <!-- 神煞解析 -->\n          <div class=\"analysis-section\">\n            <h3>神煞解析</h3>\n            <template v-if=\"!aiAnalysis.shenShaAnalysis || aiAnalysis.shenShaAnalysis === '暂无' || aiAnalysis.shenShaAnalysis.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.shenShaAnalysis)\" class=\"markdown-content\"></div>\n          </div>\n          \n          <!-- 大运与流年关键节点 -->\n          <div class=\"analysis-section\">\n            <h3>大运与流年关键节点</h3>\n            <template v-if=\"!aiAnalysis.keyPoints || aiAnalysis.keyPoints === '暂无' || aiAnalysis.keyPoints.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.keyPoints)\" class=\"markdown-content\"></div>\n          </div>\n          \n          <!-- 婚姻感情 -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '婚姻感情' : '未来感情发展' }}</h3>\n            <template v-if=\"!aiAnalysis.relationship || aiAnalysis.relationship === '暂无' || aiAnalysis.relationship.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.relationship || followupAnalysis.marriage\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.relationship || followupAnalysis.marriage)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.relationship)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n          \n          <!-- 事业财运 -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '事业财运' : '未来事业财运' }}</h3>\n            <template v-if=\"!aiAnalysis.career || aiAnalysis.career === '暂无' || aiAnalysis.career.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.career || followupAnalysis.work || followupAnalysis.money || followupAnalysis.wealth\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.career || followupAnalysis.work || followupAnalysis.money || followupAnalysis.wealth)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.career)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n          \n          <!-- 子女情况 -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '子女情况' : '未来子女缘分' }}</h3>\n            <template v-if=\"!aiAnalysis.children || aiAnalysis.children === '暂无' || aiAnalysis.children.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.children || followupAnalysis.family\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.children || followupAnalysis.family)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.children)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n          \n          <!-- 父母情况 -->\n          <div class=\"analysis-section\">\n            <h3>父母情况</h3>\n            <template v-if=\"!aiAnalysis.parents || aiAnalysis.parents === '暂无' || aiAnalysis.parents.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.parents\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.parents)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.parents)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n          \n          <!-- 身体健康 -->\n          <div class=\"analysis-section\">\n            <h3>身体健康</h3>\n            <template v-if=\"!aiAnalysis.health || aiAnalysis.health === '暂无' || aiAnalysis.health.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.health\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.health)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.health)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n          \n          <!-- 学业 -->\n          <div class=\"analysis-section\">\n            <h3>学业</h3>\n            <template v-if=\"!aiAnalysis.education || aiAnalysis.education === '暂无' || aiAnalysis.education.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.education || followupAnalysis.study\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.education || followupAnalysis.study)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.education)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n          \n          <!-- 人际关系 -->\n          <div class=\"analysis-section\">\n            <h3>人际关系</h3>\n            <template v-if=\"!aiAnalysis.social || aiAnalysis.social === '暂无' || aiAnalysis.social.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.social || followupAnalysis.relationship || followupAnalysis.friends\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.social || followupAnalysis.relationship || followupAnalysis.friends)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.social)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n          \n          <!-- 近五年运势 -->\n          <div class=\"analysis-section\">\n            <h3>近五年运势</h3>\n            <template v-if=\"!aiAnalysis.future || aiAnalysis.future === '暂无' || aiAnalysis.future.includes('正在分析')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <div v-else>\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\n              <div v-if=\"followupAnalysis.future || followupAnalysis.fiveYears\" class=\"enhanced-analysis\">\n                <div v-html=\"renderMarkdown(followupAnalysis.future || followupAnalysis.fiveYears)\" class=\"markdown-content\"></div>\n                <div class=\"analysis-source\">\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\n                </div>\n              </div>\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.future)\" class=\"markdown-content\"></div>\n            </div>\n          </div>\n        </div>\n      </van-tab>\n    </van-tabs>\n    \n    <div class=\"action-buttons\">\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\n        下载PDF报告\n      </van-button>\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\n        分享结果\n      </van-button>\n      \n      <!-- 本地生成PDF按钮 -->\n      <van-button plain type=\"info\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"handleLocalPDFGeneration\">\n        本地生成PDF\n      </van-button>\n      \n      <!-- 调试按钮 -->\n      <van-button plain type=\"warning\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"reloadBaziData\">\n        重新加载分析数据\n      </van-button>\n    </div>\n    \n    <!-- 添加追问部分 -->\n    <div class=\"followup-section\" v-if=\"baziData && !loading\">\n      <h2 class=\"section-title\">深度分析</h2>\n      <p class=\"section-desc\">选择您感兴趣的领域，进行深度分析</p>\n      \n      <div class=\"followup-options\">\n        <div \n          v-for=\"option in followupOptions\" \n          :key=\"option.id\" \n          class=\"followup-option\" \n          :class=\"{ 'paid': option.paid }\"\n          @click=\"selectFollowupOption(option)\"\n        >\n          <div class=\"option-content\">\n            <span class=\"option-name\">{{ option.name }}</span>\n            <span class=\"option-status\" v-if=\"option.paid\">已解锁</span>\n            <span class=\"option-status\" v-else>￥9.9</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 已支付的追问分析结果展示 -->\n      <div v-if=\"currentFollowup && currentFollowup.paid\" class=\"followup-result\">\n        <h3>{{ currentFollowup.name }}分析</h3>\n        <div v-if=\"isLoadingFollowup\" class=\"loading-content\">\n          <van-loading size=\"24px\" vertical>分析加载中...</van-loading>\n        </div>\n        <div v-else-if=\"!followupAnalysis[currentFollowup.id]\" class=\"loading-content\">\n          <van-empty description=\"分析结果尚未生成，请稍后刷新页面\" />\n          <van-button type=\"primary\" size=\"small\" @click=\"reloadFollowupAnalysis(currentFollowup.id)\">\n            刷新分析\n          </van-button>\n        </div>\n        <div v-else class=\"analysis-content\" v-html=\"renderMarkdown(followupAnalysis[currentFollowup.id])\"></div>\n      </div>\n    </div>\n    \n    <!-- 追问支付对话框 -->\n    <van-dialog\n      v-model:show=\"showFollowupDialog\"\n      title=\"深度分析\"\n      confirm-button-text=\"支付 ￥9.9\"\n      @confirm=\"payForFollowup\"\n      :before-close=\"() => !isLoadingFollowup\"\n    >\n      <div class=\"followup-dialog-content\">\n        <p>您选择了「{{ currentFollowup?.name }}」深度分析</p>\n        <p>支付后，AI将根据您的八字和流年运势，为您提供专业的命理分析</p>\n      </div>\n    </van-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, computed, watch, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport MarkdownIt from 'markdown-it';  // 添加markdown-it导入\n\n// 创建markdown解析器实例\nconst md = new MarkdownIt({\n  html: true,\n  breaks: true,\n  linkify: true,\n  typographer: true\n});\n\nconst route = useRoute();\nconst router = useRouter();\nconst resultId = ref(route.params.id || route.query.resultId);\nconst activeTab = ref(0);\nconst loading = ref(false);\n\n// 添加分析状态相关变量\nconst isAnalyzing = ref(false);\nconst analyzeProgress = ref(0);\nconst analyzeTimer = ref(null);\n\n// 渲染Markdown内容\nconst renderMarkdown = (content) => {\n  if (!content) return '';\n  try {\n    // 检查内容是否已经是HTML\n    if (content.includes('<') && content.includes('>') && content.includes('<div') || content.includes('<p>')) {\n      // 如果已经含有HTML标签，可能已经被渲染过，直接返回\n      return content;\n    }\n\n    // 预处理八字分析特殊格式\n    let processedContent = content;\n    \n    // 处理加粗文本 **文本**\n    processedContent = processedContent.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n    \n    // 处理分隔符 --\n    processedContent = processedContent.replace(/\\s*--\\s*/g, '<hr>');\n    \n    // 处理标题（以#开头的行）\n    processedContent = processedContent.replace(/^(#+)\\s+(.*?)$/gm, (match, hashes, text) => {\n      const level = Math.min(hashes.length, 6);\n      return `<h${level}>${text}</h${level}>`;\n    });\n    \n    // 处理列表（以-或数字开头的行）\n    processedContent = processedContent.replace(/^- (.*?)$/gm, '<li>$1</li>');\n    processedContent = processedContent.replace(/^(\\d+)\\. (.*?)$/gm, '<li>$1. $2</li>');\n    \n    // 将连续的<li>元素包装在<ul>或<ol>中\n    if (processedContent.includes('<li>')) {\n      // 简单检测是否含有数字列表\n      const hasNumberList = /^<li>\\d+\\./.test(processedContent);\n      const listTag = hasNumberList ? 'ol' : 'ul';\n      \n      // 将连续的<li>元素包装在列表标签中\n      processedContent = processedContent.replace(/(<li>.*?<\\/li>\\n*)+/g, match => {\n        return `<${listTag}>${match}</${listTag}>`;\n      });\n    }\n    \n    // 处理段落\n    if (!processedContent.includes('<p>')) {\n      const paragraphs = processedContent.split('\\n\\n');\n      processedContent = paragraphs.map(p => {\n        // 如果段落不是以HTML标签开头，则添加<p>标签\n        if (p.trim() && !p.trim().startsWith('<')) {\n          return `<p>${p}</p>`;\n        }\n        return p;\n      }).join('\\n');\n    }\n    \n    // 最后使用markdown-it处理任何剩余的Markdown标记\n    return md.render(processedContent);\n  } catch (e) {\n    console.error('Markdown渲染失败:', e);\n    return content; // 如果渲染失败，返回原始内容\n  }\n};\n\n// 用户年龄，从URL参数或localStorage获取\nconst userAge = ref(null);\n// 尝试从URL参数获取年龄\nif (route.query.age && !isNaN(parseInt(route.query.age))) {\n  userAge.value = parseInt(route.query.age);\n} \n// 如果URL参数中没有年龄，尝试从localStorage获取\nelse if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n  userAge.value = parseInt(localStorage.getItem('userAge'));\n}\n// 记录用户年龄到控制台，便于调试\nconsole.log('用户年龄:', userAge.value);\n\n// 从分析文本中提取特定部分内容\nconst getAnalysisContent = (sectionName) => {\n  try {\n    // 如果是性格特点或学业发展，直接从对应字段获取\n    if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n      return aiAnalysis.value.personality;\n    }\n    \n    if (sectionName === '学业发展' && aiAnalysis.value.education) {\n      return aiAnalysis.value.education;\n    }\n    \n    // 处理健康分析文本，尝试提取学业、性格等内容\n    if (aiAnalysis.value.health) {\n      const healthText = aiAnalysis.value.health;\n      \n      // 查找各部分的标记\n      const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n      if (sectionMatch && sectionMatch[1]) {\n        return sectionMatch[1].trim();\n      }\n      \n      // 如果是未来发展，尝试从overall中提取\n      if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n        const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n        if (futureMatch && futureMatch[2]) {\n          return futureMatch[2].trim();\n        }\n      }\n    }\n    \n    // 如果没有找到对应部分或提取失败，返回空字符串\n    return '';\n  } catch (e) {\n    console.error(`提取${sectionName}内容时出错:`, e);\n    return '';\n  }\n};\n\n// 修改数据初始化\nconst focusAreas = ref([]);\nconst analysisResult = ref({});\n\n// 初始化八字数据\nconst baziData = ref({\n  yearPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  monthPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  dayPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  hourPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  fiveElements: {},\n  flowingYears: [],\n  shenSha: {\n    dayChong: '',\n    zhiShen: '',\n    xiShen: '',\n    fuShen: '',\n    caiShen: '',\n    benMing: [],\n    yearGan: [],\n    yearZhi: [],\n    dayGan: [],\n    dayZhi: []\n  },\n  daYun: {\n    startAge: 0,\n    startYear: 0,\n    isForward: true,\n    daYunList: []\n  },\n  birthDate: null,\n  birthTime: null,\n  gender: null\n});\n\n// 初始化分析数据\nconst aiAnalysis = ref({\n  health: '',\n  career: '',\n  relationship: '',\n  children: '',\n  social: '',\n  future: '',\n  parents: '',\n  education: '',\n  // 新增字段\n  coreAnalysis: '',\n  fiveElements: '',\n  shenShaAnalysis: '',\n  keyPoints: ''\n});\n\nconst testApiConnection = async () => {\n  try {\n    Toast.loading('正在测试API连接...');\n    // 使用配置好的http实例\n    const response = await axios.get('/');\n    console.log('API根路径响应:', response.data);\n    Toast.success('API连接成功');\n    return true;\n  } catch (error) {\n    console.error('API连接测试失败:', error);\n    Toast.fail('API连接失败，请检查后端服务');\n    return false;\n  }\n};\n\nonMounted(async () => {\n  // 先测试API连接\n  const isApiConnected = await testApiConnection();\n  if (!isApiConnected) {\n    console.warn('API连接失败，将使用模拟数据');\n    loading.value = false;\n    return;\n  }\n  \n  console.log('结果页面加载，URL参数中的ID:', resultId.value);\n  \n  // 如果没有resultId，尝试从本地存储获取\n  const localResultId = localStorage.getItem('resultId');\n  if (!resultId.value && localResultId) {\n    console.log('从本地存储获取ID:', localResultId);\n    // 更新resultId为从本地存储获取的值\n    resultId.value = localResultId;\n  }\n  \n  // 确保resultId是字符串类型，不是布尔值或其他数据类型\n  if (resultId.value === true || resultId.value === false) {\n    console.error('resultId不应该是布尔值:', resultId.value);\n    resultId.value = localResultId || route.query.resultId || '';\n  }\n  \n  console.log('最终使用的resultId:', resultId.value);\n  \n  // 如果resultId为空或无效，显示错误并尝试从URL查询参数获取\n  if (!resultId.value) {\n    console.error('缺少结果ID，无法获取分析结果');\n    \n    // 尝试从URL查询参数获取备选ID\n    const urlResultId = route.query.resultId;\n    if (urlResultId) {\n      console.log('从URL查询参数获取备选ID:', urlResultId);\n      resultId.value = urlResultId;\n    } else {\n      Toast.fail('缺少结果ID，无法获取分析结果');\n      loading.value = false;\n      return;\n    }\n  }\n  \n  // 存储确认的resultId到本地存储\n  localStorage.setItem('resultId', resultId.value);\n  \n  // 显示加载提示\n  Toast.loading({\n    message: '正在加载八字分析结果，请稍候...',\n    duration: 0,\n    forbidClick: true\n  });\n  \n  // 调用getBaziResult函数获取结果\n  await getBaziResult();\n  \n  // 检查分析是否完成\n  const stillAnalyzing = Object.values(aiAnalysis.value).some(\n    value => typeof value === 'string' && value.includes('正在分析')\n  );\n  \n  if (stillAnalyzing) {\n    console.log('检测到分析仍在进行中...');\n    Toast.loading({\n      message: '正在生成八字分析结果，这可能需要30-60秒...',\n      duration: 0\n    });\n    \n    // 启动轮询\n    await pollAnalysisStatus(resultId.value);\n    Toast.success('分析完成');\n  }\n  \n  // 关闭加载提示\n  Toast.clear();\n});\n\nconst getElementName = (element) => {\n  if (!element) return '--';\n  \n  const elementNames = {\n    'wood': '木',\n    'fire': '火',\n    'earth': '土',\n    'metal': '金',\n    'water': '水',\n    '木': '木',\n    '火': '火',\n    '土': '土',\n    '金': '金',\n    '水': '水'\n  };\n  \n  return elementNames[element] || element;\n};\n\nconst onClickLeft = () => {\n  router.push('/');\n};\n\n// 修改后的直接流下载函数，适应后端始终返回文件流\nconst downloadPDFAsStream = async () => {\n  Toast.loading({\n    message: '正在生成PDF并下载报告...',\n    duration: 0,\n    position: 'middle',\n    forbidClick: true\n  });\n  \n  if (!resultId.value) {\n    Toast.clear();\n    Toast.fail('缺少结果ID，无法下载报告');\n    return false;\n  }\n  \n  try {\n    console.log('直接下载报告, 结果ID:', resultId.value);\n    \n    // 创建下载链接，添加时间戳避免缓存问题和force参数强制重新生成\n    const timestamp = new Date().getTime();\n    // 默认启用markdown解析\n    const downloadUrl = `/api/bazi/pdf/${resultId.value}?t=${timestamp}&force=true&parseMarkdown=true`;\n    console.log('下载URL:', downloadUrl);\n    \n    // 使用fetch API获取文件流\n    const response = await fetch(downloadUrl, {\n      method: 'GET',\n      cache: 'no-cache',\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Pragma': 'no-cache',\n        'Expires': '0'\n      }\n    });\n    \n    // 检查错误\n    if (!response.ok) {\n      let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n      try {\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          const errorData = await response.json();\n          errorMsg = errorData.message || errorMsg;\n        } else {\n          // 如果不是JSON格式的错误，尝试获取文本错误信息\n          const errorText = await response.text();\n          if (errorText) {\n            errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n          }\n        }\n      } catch (e) {\n        console.error('解析错误响应失败:', e);\n      }\n      throw new Error(errorMsg);\n    }\n    \n    // 检查内容类型\n    const contentType = response.headers.get('content-type');\n    const disposition = response.headers.get('content-disposition');\n    \n    console.log('响应内容类型:', contentType);\n    console.log('响应内容处置:', disposition);\n    \n    // 确定文件名和扩展名\n    let filename = `八字命理分析_${resultId.value}.pdf`;\n    if (disposition && disposition.includes('filename=')) {\n      const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n      if (filenameMatch && filenameMatch[1]) {\n        filename = filenameMatch[1];\n      }\n    }\n    \n    // 确定文件类型\n    const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n    if (!filename.endsWith(fileExtension)) {\n      filename = `八字命理分析_${resultId.value}.${fileExtension}`;\n    }\n    \n    // 转换为Blob对象\n    const blob = await response.blob();\n    console.log('PDF Blob大小:', blob.size, '字节');\n    \n    // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n    // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n    const isDownloadStarted = disposition && disposition.includes('attachment');\n    if (blob.size === 0 && !isDownloadStarted) {\n      throw new Error('下载的文件为空');\n    }\n    \n    // 对于小文件，我们可以验证文件内容\n    // 但对于大文件或浏览器接管的下载，跳过验证\n    if (blob.size > 0 && blob.size < 1024*1024 && contentType && contentType.includes('pdf')) {\n      try {\n        // 读取文件头部以验证是否为有效的PDF\n        const fileReader = new FileReader();\n        const headerPromise = new Promise((resolve, reject) => {\n          fileReader.onloadend = (e) => resolve(e.target.result);\n          fileReader.onerror = (e) => reject(e);\n        });\n        fileReader.readAsArrayBuffer(blob.slice(0, 5));\n        \n        const header = await headerPromise;\n        const headerView = new Uint8Array(header);\n        const headerString = String.fromCharCode.apply(null, headerView);\n        \n        if (!headerString.startsWith('%PDF')) {\n          console.error('无效的PDF文件头:', headerString);\n          throw new Error('下载的不是有效的PDF文件');\n        } else {\n          console.log('PDF文件头验证通过');\n        }\n      } catch (e) {\n        console.error('验证PDF文件失败:', e);\n        // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n        if (!isDownloadStarted) {\n          throw new Error('验证PDF文件失败: ' + e.message);\n        } else {\n          console.warn('浏览器接管了下载，跳过PDF验证');\n        }\n      }\n    }\n    \n    // 不管浏览器是否已经接管下载，我们都手动创建一个下载链接\n    try {\n      // 创建下载链接\n      const url = window.URL.createObjectURL(blob);\n      console.log('创建Blob URL:', url);\n      \n      // 使用iframe方式下载，避免某些浏览器的下载拦截\n      const iframe = document.createElement('iframe');\n      iframe.style.display = 'none';\n      document.body.appendChild(iframe);\n      \n      // 创建a标签并触发下载\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `八字命理分析_${resultId.value}.pdf`; // 强制使用自定义文件名\n      a.target = '_blank';\n      a.rel = 'noopener noreferrer';\n      \n      // 在iframe中添加a标签并点击\n      iframe.contentWindow.document.body.appendChild(a);\n      console.log('触发下载, 文件名:', a.download);\n      a.click();\n      \n      // 清理\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(iframe);\n        console.log('清理下载资源完成');\n      }, 1000); // 增加延时确保下载开始\n    } catch (e) {\n      console.error('创建下载链接失败:', e);\n      \n      // 尝试使用window.open直接打开PDF\n      try {\n        console.log('尝试使用window.open方法下载');\n        const pdfWindow = window.open(downloadUrl, '_blank');\n        if (!pdfWindow) {\n          console.warn('弹出窗口被阻止，尝试其他方法');\n          // 提示用户直接打开链接\n          Dialog.alert({\n            title: '下载提示',\n            message: '系统无法自动下载PDF，请点击确定后手动保存文件',\n            confirmButtonText: '确定',\n          }).then(() => {\n            window.open(downloadUrl, '_blank');\n          });\n        }\n      } catch (openError) {\n        console.error('使用window.open下载失败:', openError);\n        throw new Error('下载失败，请尝试使用其他浏览器');\n      }\n    }\n    \n    Toast.clear();\n    Toast.success('报告下载成功');\n    return true;\n  } catch (error) {\n    console.error('直接下载PDF出错:', error);\n    Toast.clear();\n    \n    // 检查是否是因为浏览器已经接管了下载而导致的错误\n    if (error.message && (\n        error.message.includes('下载的文件为空') || \n        error.message.includes('验证PDF文件失败')\n      )) {\n      // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n      console.log('可能是浏览器已经接管了下载，不显示错误');\n      Toast.success('报告下载已开始，请等待浏览器完成下载');\n      return true;\n    }\n    \n    // 显示错误信息\n    Toast.fail(error.message || '下载失败，请稍后重试');\n    return false;\n  }\n};\n\n// 修改主下载函数，添加重试逻辑\nconst downloadPDF = async () => {\n  Toast.loading({\n    message: '正在准备生成PDF报告...',\n    duration: 5000,\n    position: 'middle'\n  });\n  \n  if (!resultId.value) {\n    Toast.fail('缺少结果ID，无法生成报告');\n    return;\n  }\n  \n  try {\n    // 先重新加载最新的数据，确保PDF包含最新的追问分析结果\n    Toast.loading({\n      message: '正在同步最新数据...',\n      duration: 5000\n    });\n    \n    // 获取最新的基础分析结果\n    await getBaziResult();\n    \n    // 获取最新的追问分析结果\n    await loadFollowupResults();\n    \n    Toast.loading({\n      message: '正在生成并下载PDF报告...',\n      duration: 5000\n    });\n    \n    // 最多尝试3次下载\n    let attempts = 0;\n    let success = false;\n    \n    while (attempts < 3 && !success) {\n      attempts++;\n      \n      if (attempts > 1) {\n        console.log(`尝试第${attempts}次下载...`);\n        Toast.loading({\n          message: `尝试第${attempts}次下载...`,\n          duration: 2000\n        });\n        // 在重试之前等待一段时间\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      }\n      \n      // 使用流式下载模式，并处理返回值\n      success = await downloadPDFAsStream();\n      \n      // 如果流式下载成功，直接返回，不再尝试其他方法\n      if (success === true) {\n        return;\n      }\n    }\n    \n    // 如果多次尝试后仍然失败，提示用户\n    if (!success) {\n      Toast.clear();\n      Dialog.alert({\n        title: 'PDF下载失败',\n        message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。',\n      });\n    }\n  } catch (error) {\n    console.error('下载PDF过程中发生错误:', error);\n    Toast.clear();\n    Toast.fail('生成PDF报告失败: ' + (error.message || '未知错误'));\n  }\n};\n\n// 本地生成PDF的函数\nconst generatePDFLocally = async () => {\n  console.log('使用客户端jsPDF库生成PDF');\n  \n  // 获取内容元素\n  const element = document.querySelector('.result-container');\n  if (!element) {\n    throw new Error('找不到要转换的内容元素');\n  }\n  \n  Toast.loading({\n    message: '正在捕获页面内容...',\n    duration: 5000\n  });\n  \n  try {\n    // 在捕获内容前先应用Markdown格式（临时）\n    const sections = document.querySelectorAll('.analysis-section');\n    const originalContents = [];\n    \n    // 确保所有Markdown内容都已经被渲染为HTML\n    sections.forEach((section, index) => {\n      const contentElement = section.querySelector('p, .markdown-content');\n      if (contentElement && !contentElement.classList.contains('markdown-content')) {\n        originalContents.push({\n          element: contentElement,\n          content: contentElement.innerHTML\n        });\n        \n        // 如果内容中有Markdown语法但尚未渲染，则渲染它\n        if (contentElement.textContent.includes('**') || \n            contentElement.textContent.includes('##') ||\n            contentElement.textContent.includes('--') ||\n            contentElement.textContent.includes('- ')) {\n          contentElement.innerHTML = md.render(contentElement.textContent);\n          contentElement.classList.add('markdown-content-temp');\n        }\n      }\n    });\n    \n    // 使用html2canvas捕获内容\n    const canvas = await html2canvas(element, {\n      scale: 1,\n      useCORS: true,\n      logging: false,\n      windowWidth: document.documentElement.offsetWidth,\n      windowHeight: document.documentElement.offsetHeight,\n    });\n    \n    Toast.loading({\n      message: '正在生成PDF文件...',\n      duration: 5000\n    });\n        \n    // 创建PDF文档\n    const pdf = new jsPDF('p', 'mm', 'a4');\n        \n    // 计算尺寸和比例\n    const imgData = canvas.toDataURL('image/png');\n    const imgWidth = 210; // A4宽度，单位mm\n    const pageHeight = 297; // A4高度，单位mm\n    const imgHeight = canvas.height * imgWidth / canvas.width;\n    let heightLeft = imgHeight;\n    let position = 0;\n          \n    // 添加首页\n    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n    heightLeft -= pageHeight;\n    \n    // 如果内容超过一页，添加更多页\n    while (heightLeft > 0) {\n      position = heightLeft - imgHeight;\n      pdf.addPage();\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n    }\n    \n    // 添加页脚\n    const pageCount = pdf.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      pdf.setPage(i);\n      pdf.setFontSize(10);\n      pdf.setTextColor(150);\n      pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });\n    }\n    \n    // 恢复原始内容\n    originalContents.forEach(item => {\n      if (item && item.element) {\n        item.element.innerHTML = item.content;\n        item.element.classList.remove('markdown-content-temp');\n      }\n    });\n    \n    // 保存PDF\n    pdf.save(`八字命理分析_${resultId.value}.pdf`);\n    \n    return true;\n  } catch (error) {\n    console.error('本地PDF生成错误:', error);\n    throw error;\n  }\n};\n\nconst shareResult = () => {\n  Toast.success('分享功能开发中');\n};\n\n// 处理本地PDF生成\nconst handleLocalPDFGeneration = async () => {\n  try {\n    Toast.loading({\n      message: '正在本地生成PDF...',\n      duration: 0,\n      forbidClick: true\n    });\n    \n    // 确保所有内容都已经渲染Markdown\n    const sections = document.querySelectorAll('.analysis-section');\n    const originalContents = [];\n    let needsRendering = false;\n    \n    // 检查是否有内容需要渲染\n    sections.forEach((section) => {\n      const contentElement = section.querySelector('p:not(.markdown-content)');\n      if (contentElement) {\n        needsRendering = true;\n      }\n    });\n    \n    // 如果需要渲染，先将所有内容进行Markdown渲染\n    if (needsRendering) {\n      console.log('检测到需要渲染Markdown内容');\n      sections.forEach((section) => {\n        const contentElements = section.querySelectorAll('p:not(.markdown-content)');\n        contentElements.forEach((element) => {\n          const text = element.textContent;\n          if (text && (\n            text.includes('**') || \n            text.includes('#') || \n            text.includes('-') || \n            text.includes('1.') ||\n            text.includes('\\n')\n          )) {\n            originalContents.push({\n              element: element,\n              content: element.innerHTML\n            });\n            element.innerHTML = md.render(text);\n            element.classList.add('markdown-content');\n            element.classList.add('temp-rendered');\n          }\n        });\n      });\n    }\n    \n    // 生成PDF\n    await generatePDFLocally();\n    \n    // 恢复原始内容\n    if (needsRendering) {\n      document.querySelectorAll('.temp-rendered').forEach((element) => {\n        const original = originalContents.find(item => item.element === element);\n        if (original) {\n          element.innerHTML = original.content;\n          element.classList.remove('markdown-content');\n          element.classList.remove('temp-rendered');\n        }\n      });\n    }\n    \n    Toast.clear();\n    Toast.success('本地PDF生成成功');\n  } catch (error) {\n    console.error('本地PDF生成失败:', error);\n    Toast.clear();\n    Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n  }\n};\n\n// 添加分析状态检查函数\nconst checkAnalysisStatus = async (resultId) => {\n  try {\n    console.log('检查分析状态:', resultId);\n    const response = await axios.get(`/api/bazi/result/${resultId}`);\n    \n    if (response.data.code === 200) {\n      // 检查AI分析是否已经生成\n      const aiAnalysisData = response.data.data.aiAnalysis || {};\n      \n      // 统计已完成和正在分析的项目\n      let totalItems = 0;\n      let completedItems = 0;\n      \n      Object.entries(aiAnalysisData).forEach(([key, value]) => {\n        totalItems++;\n        if (!(typeof value === 'string' && value.includes('正在分析'))) {\n          completedItems++;\n        }\n      });\n      \n      // 更新进度\n      if (totalItems > 0) {\n        analyzeProgress.value = Math.floor((completedItems / totalItems) * 100);\n      }\n      \n      // 检查是否还有\"正在分析\"的内容\n      const stillAnalyzing = Object.values(aiAnalysisData).some(\n        value => typeof value === 'string' && value.includes('正在分析')\n      );\n      \n      isAnalyzing.value = stillAnalyzing;\n      \n      if (stillAnalyzing) {\n        console.log('分析仍在进行中...', `完成度: ${analyzeProgress.value}%`);\n        return false;\n      } else {\n        console.log('分析已完成');\n        return true;\n      }\n    }\n    return false;\n  } catch (error) {\n    console.error('检查分析状态出错:', error);\n    return false;\n  }\n};\n\n// 添加轮询检查函数\nconst pollAnalysisStatus = async (resultId, maxAttempts = 30) => {\n  let attempts = 0;\n  \n  // 显示进度条\n  isAnalyzing.value = true;\n  \n  // 创建模拟进度，即使后端没有反馈也会看到进度在增加\n  if (analyzeTimer.value) clearInterval(analyzeTimer.value);\n  analyzeTimer.value = setInterval(() => {\n    if (analyzeProgress.value < 90) {\n      analyzeProgress.value += 2;\n    }\n  }, 2000);\n  \n  return new Promise((resolve) => {\n    const checkInterval = setInterval(async () => {\n      attempts++;\n      const isComplete = await checkAnalysisStatus(resultId);\n      \n      if (isComplete || attempts >= maxAttempts) {\n        clearInterval(checkInterval);\n        \n        // 清除模拟进度定时器\n        if (analyzeTimer.value) {\n          clearInterval(analyzeTimer.value);\n          analyzeTimer.value = null;\n        }\n        \n        if (isComplete) {\n          // 如果完成，确保进度显示100%\n          analyzeProgress.value = 100;\n          setTimeout(() => {\n            isAnalyzing.value = false;\n          }, 1000); // 短暂显示100%后隐藏进度条\n        }\n        \n        await getBaziResult(); // 最后再获取一次完整结果\n        Toast.clear();\n        resolve(isComplete);\n      }\n    }, 2000); // 每2秒检查一次\n  });\n};\n\n// 修改reloadBaziData函数，添加轮询逻辑\nconst reloadBaziData = async () => {\n  Toast.loading('正在重新加载数据...');\n  \n  try {\n    if (!resultId.value) {\n      Toast.fail('缺少结果ID');\n      return;\n    }\n    \n    console.log(`重新加载数据，结果ID: ${resultId.value}`);\n    \n    // 获取URL参数\n    const urlParams = new URLSearchParams(window.location.search);\n    \n    // 尝试使用模拟支付接口\n    try {\n      console.log('尝试使用模拟支付接口...');\n      \n      // 显示加载提示\n      Toast.loading({\n        message: '正在处理支付...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      \n      // 准备请求数据\n      const requestData = {\n        birthDate: baziData.value.birthDate || urlParams.get('birthDate'),\n        birthTime: baziData.value.birthTime || urlParams.get('birthTime'),\n        gender: baziData.value.gender || urlParams.get('gender')\n      };\n      \n      console.log('请求数据:', requestData);\n      \n      // 发送模拟支付请求\n      const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId.value}`, requestData);\n      console.log('模拟支付响应:', mockPaymentResponse.data);\n      \n      if (mockPaymentResponse.data.code === 200) {\n        // 支付成功，显示成功提示\n        Toast.success('支付成功');\n        \n        // 使用返回的resultId重新加载数据\n        if (mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n          const newResultId = mockPaymentResponse.data.data.resultId;\n          console.log('获取到新的resultId:', newResultId);\n          \n          // 更新全局的resultId变量\n          resultId.value = newResultId;\n          // 还需要更新本地存储中的resultId\n          localStorage.setItem('resultId', newResultId);\n          \n          // 显示正在加载分析结果\n          Toast.loading({\n            message: '正在生成八字分析结果，这可能需要30-60秒...',\n            duration: 0,\n            position: 'middle',\n            forbidClick: true\n          });\n          \n          // 轮询检查分析状态\n          const analysisComplete = await pollAnalysisStatus(newResultId);\n          \n          if (analysisComplete) {\n            Toast.success('分析已完成');\n          } else {\n            Toast.success('已完成部分分析，显示可用结果');\n          }\n          \n          // 重新加载追问分析结果\n          await loadFollowupResults();\n          \n          return;\n        }\n      }\n    } catch (mockError) {\n      console.error('模拟支付失败:', mockError);\n      Toast.fail('重新加载失败: ' + (mockError.message || '未知错误'));\n      return;\n    }\n    \n    // 如果模拟支付失败，尝试直接获取结果\n    try {\n      Toast.loading({\n        message: '正在加载现有分析结果...',\n        duration: 0,\n        forbidClick: true\n      });\n      \n      const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n      \n      if (response.data.code === 200) {\n        // 更新八字数据，使用空值合并运算符确保数据存在\n        baziData.value = {\n          yearPillar: response.data.data.baziChart?.yearPillar || null,\n          monthPillar: response.data.data.baziChart?.monthPillar || null,\n          dayPillar: response.data.data.baziChart?.dayPillar || null,\n          hourPillar: response.data.data.baziChart?.hourPillar || null,\n          fiveElements: response.data.data.baziChart?.fiveElements || null,\n          flowingYears: response.data.data.baziChart?.flowingYears || [],\n          shenSha: response.data.data.baziChart?.shenSha || baziData.value.shenSha,\n          daYun: response.data.data.baziChart?.daYun || baziData.value.daYun,\n          birthDate: response.data.data.baziChart?.birthDate || null,\n          birthTime: response.data.data.baziChart?.birthTime || null,\n          gender: response.data.data.baziChart?.gender || null\n        };\n        \n        // 更新AI分析结果\n        aiAnalysis.value = {\n          health: response.data.data.aiAnalysis?.health || '',\n          career: response.data.data.aiAnalysis?.career || '',\n          relationship: response.data.data.aiAnalysis?.relationship || '',\n          children: response.data.data.aiAnalysis?.children || '',\n          social: response.data.data.aiAnalysis?.social || '',\n          future: response.data.data.aiAnalysis?.future || '',\n          parents: response.data.data.aiAnalysis?.parents || '',\n          education: response.data.data.aiAnalysis?.education || '',\n          // 新增字段\n          coreAnalysis: response.data.data.aiAnalysis?.coreAnalysis || '',\n          fiveElements: response.data.data.aiAnalysis?.fiveElements || '',\n          shenShaAnalysis: response.data.data.aiAnalysis?.shenShaAnalysis || '',\n          keyPoints: response.data.data.aiAnalysis?.keyPoints || ''\n        };\n        \n        // 检查是否存在\"正在分析\"的内容\n        const stillAnalyzing = Object.values(aiAnalysis.value).some(\n          value => typeof value === 'string' && value.includes('正在分析')\n        );\n        \n        // 更新分析状态\n        isAnalyzing.value = stillAnalyzing;\n        \n        if (stillAnalyzing) {\n          console.log('分析仍在进行中...');\n          // 不显示Toast，因为我们已经有进度条显示\n        } else {\n          // 分析完成\n          analyzeProgress.value = 100;\n          setTimeout(() => {\n            isAnalyzing.value = false;\n          }, 1000);\n        }\n        \n        // 重新加载追问分析结果\n        console.log('重新加载追问分析结果...');\n        await loadFollowupResults();\n        \n        // 遍历所有已支付的追问选项，强制重新获取分析结果\n        const paidOptions = followupOptions.value.filter(option => option.paid);\n        if (paidOptions.length > 0) {\n          console.log('发现已支付的追问选项，强制重新获取:', paidOptions.map(o => o.id));\n          for (const option of paidOptions) {\n            await getFollowupAnalysis(option.id);\n          }\n        }\n        \n        Toast.success('数据刷新成功');\n      } else {\n        Toast.fail(response.data.message || '加载失败');\n      }\n    } catch (error) {\n      console.error('重新加载失败:', error);\n      Toast.fail('加载失败: ' + (error.message || '未知错误'));\n    }\n  } catch (error) {\n    console.error('重新加载失败:', error);\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\n  }\n};\n\n// 追问相关状态\nconst followupOptions = ref([\n  { id: 'marriage', name: '婚姻感情', selected: false, paid: false },\n  { id: 'career', name: '事业财运', selected: false, paid: false },\n  { id: 'children', name: '子女情况', selected: false, paid: false },\n  { id: 'parents', name: '父母情况', selected: false, paid: false },\n  { id: 'health', name: '身体健康', selected: false, paid: false },\n  { id: 'education', name: '学业', selected: false, paid: false },\n  { id: 'relationship', name: '人际关系', selected: false, paid: false },\n  { id: 'fiveYears', name: '近五年运势', selected: false, paid: false }\n]);\n\nconst currentFollowup = ref(null);\nconst showFollowupDialog = ref(false);\nconst followupAnalysis = ref({});\nconst isLoadingFollowup = ref(false);\n\n// 选择追问选项\nconst selectFollowupOption = async (option) => {\n  // 设置当前选择的追问选项\n  currentFollowup.value = option;\n  \n  // 如果已经支付过，直接显示结果\n  if (option.paid) {\n    console.log(`选择已支付的追问: ${option.id}`);\n    \n    // 如果已有分析结果，直接显示\n    if (followupAnalysis.value[option.id]) {\n      console.log(`已有${option.id}分析结果，直接显示`);\n      return;\n    }\n    \n    // 如果没有分析结果，尝试获取\n    console.log(`尝试获取${option.id}分析结果`);\n    Toast.loading({\n      message: '正在加载分析结果...',\n      duration: 0\n    });\n    \n    try {\n      // 尝试获取分析结果\n      const analysis = await getFollowupAnalysis(option.id);\n      if (analysis && typeof analysis === 'string' && analysis.length > 0) {\n        Toast.success('加载成功');\n        console.log(`成功获取${option.id}分析结果，长度: ${analysis.length}`);\n      } else {\n        Toast.fail('分析结果尚未生成完成，请稍后再试');\n        console.warn(`获取${option.id}分析结果失败或为空`);\n      }\n    } catch (error) {\n      console.error(`获取${option.id}分析失败:`, error);\n      Toast.fail('获取分析失败，请重试');\n    } finally {\n      Toast.clear();\n    }\n    \n    return;\n  }\n  \n  // 否则显示支付对话框\n  showFollowupDialog.value = true;\n};\n\n// 支付追问费用\nconst payForFollowup = async () => {\n  if (!currentFollowup.value) return;\n  \n  try {\n    isLoadingFollowup.value = true;\n    \n    // 第一步：创建订单\n    Toast.loading({\n      message: '正在创建订单...',\n      forbidClick: true,\n      duration: 0\n    });\n    \n    // 获取URL参数\n    const urlParams = new URLSearchParams(window.location.search);\n    \n    // 创建追问订单\n    const orderResponse = await axios.post('/api/order/create/followup', {\n      resultId: resultId.value,\n      area: currentFollowup.value.id\n    });\n    \n    if (orderResponse.data.code === 200) {\n      const followupOrderId = orderResponse.data.data.orderId;\n      console.log('追问订单创建成功:', followupOrderId);\n      \n      // 第二步：处理支付\n      Toast.loading({\n        message: '正在处理支付...',\n        forbidClick: true,\n        duration: 0\n      });\n      \n      // 模拟支付\n      const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\n        birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\n        birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\n        gender: baziData.value?.gender || urlParams.get('gender'),\n        area: currentFollowup.value.id,\n        resultId: resultId.value\n      });\n      \n      if (paymentResponse.data.code === 200) {\n        console.log('追问支付成功:', paymentResponse.data);\n        Toast.success('支付成功');\n        \n        // 立即更新UI状态，将当前追问标记为已付费\n        const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n        if (index !== -1) {\n          followupOptions.value[index].paid = true;\n          followupOptions.value = [...followupOptions.value]; // 强制Vue更新\n        }\n        \n        // 第三步：加载分析结果\n        Toast.loading({\n          message: '正在生成分析结果，这可能需要30-60秒...',\n          forbidClick: true,\n          duration: 0\n        });\n        \n        // 获取并保存新的resultId（如果有的话）\n        if (paymentResponse.data.data && paymentResponse.data.data.resultId) {\n          const newResultId = paymentResponse.data.data.resultId;\n          console.log('获取到新的resultId:', newResultId);\n          // 更新全局的resultId变量\n          resultId.value = newResultId;\n          // 还需要更新本地存储中的resultId\n          localStorage.setItem('resultId', newResultId);\n        }\n        \n        // 轮询检查分析结果状态\n        const area = currentFollowup.value.id;\n        let isComplete = false;\n        let attempts = 0;\n        const maxAttempts = 60; // 最多等待120秒（60次 * 2秒）\n        \n        // 自定义轮询检查追问分析状态\n        const pollFollowupStatus = async () => {\n          console.log(`开始轮询追问分析状态: ${area}`);\n          \n          // 开始计时\n          const startTime = new Date().getTime();\n          const timeoutMs = 120000; // 120秒超时\n          \n          while (attempts < maxAttempts && !isComplete) {\n            attempts++;\n            try {\n              // 等待2秒\n              await new Promise(resolve => setTimeout(resolve, 2000));\n              \n              // 检查是否超时\n              const currentTime = new Date().getTime();\n              if (currentTime - startTime > timeoutMs) {\n                console.warn(`轮询追问分析状态超时: ${area}`);\n                break;\n              }\n              \n              // 检查追问分析结果\n              console.log(`尝试第${attempts}次获取追问分析: ${area}`);\n              const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n              \n              if (response.data.code === 200 && response.data.data && response.data.data.analysis) {\n                // 检查分析内容是否为\"正在分析\"\n                const analysis = response.data.data.analysis;\n                if (typeof analysis === 'string' && !analysis.includes('正在分析')) {\n                  console.log(`成功获取追问分析结果: ${area}`);\n                  isComplete = true;\n                  followupAnalysis.value[area] = analysis;\n                  break;\n                } else {\n                  console.log(`追问分析结果还在生成中: ${area}`);\n                }\n              }\n            } catch (error) {\n              // 只有非404错误才打印详细信息\n              if (!error.response || error.response.status !== 404) {\n                console.error('检查追问分析状态出错:', error);\n              }\n              \n              // 如果遇到404错误，表示追问分析尚未创建完毕\n              if (error.response && error.response.status === 404) {\n                console.log('追问分析尚未创建完毕，继续等待...');\n              } else if (attempts >= maxAttempts / 2) {\n                // 如果尝试次数超过一半且仍然失败，不要退出轮询，但记录错误\n                console.warn(`获取分析数据失败(${attempts}/${maxAttempts})，继续尝试...`);\n              }\n            }\n          }\n          \n          // 无论是否完成，都尝试获取最终结果\n          console.log(`轮询完成，最终尝试获取追问分析: ${area}`);\n          try {\n            const finalResult = await getFollowupAnalysis(area);\n            console.log(`最终获取追问分析结果: ${finalResult ? '成功' : '失败'}`);\n            return finalResult;\n          } catch (error) {\n            console.error('获取最终追问分析结果失败:', error);\n            // 如果分析结果仍然不可用，显示友好的错误信息\n            followupAnalysis.value[area] = \"分析正在处理中，请稍后刷新页面查看。\";\n            return null;\n          }\n        };\n        \n        // 开始轮询\n        const result = await pollFollowupStatus();\n        \n        // 更新UI\n        Toast.clear();\n        if (result) {\n          Toast.success('分析已完成');\n          \n          // 支付成功且分析完成后，切换到AI分析结果标签页显示结果\n          activeTab.value = 1; // 切换到AI分析结果标签\n          \n          // 滚动到相应分析部分\n          setTimeout(() => {\n            const sectionMap = {\n              'relationship': '婚姻感情',\n              'marriage': '婚姻感情',\n              'career': '事业财运',\n              'work': '事业财运',\n              'money': '事业财运',\n              'wealth': '事业财运',\n              'children': '子女情况',\n              'family': '子女情况',\n              'parents': '父母情况',\n              'health': '身体健康',\n              'education': '学业',\n              'study': '学业',\n              'social': '人际关系',\n              'friends': '人际关系',\n              'future': '近五年运势',\n              'fiveYears': '近五年运势'\n            };\n            \n            const targetTitle = sectionMap[currentFollowup.value.id];\n            if (targetTitle) {\n              // 查找并滚动到对应的分析部分\n              const sections = document.querySelectorAll('.analysis-section h3');\n              for (let i = 0; i < sections.length; i++) {\n                if (sections[i].textContent.includes(targetTitle)) {\n                  sections[i].scrollIntoView({ behavior: 'smooth', block: 'center' });\n                  \n                  // 高亮显示该部分\n                  const section = sections[i].parentElement;\n                  section.classList.add('highlight-section');\n                  setTimeout(() => {\n                    section.classList.remove('highlight-section');\n                  }, 3000);\n                  \n                  break;\n                }\n              }\n            }\n          }, 500);\n        } else {\n          Toast.success('正在生成分析，请稍后刷新查看');\n        }\n        \n        showFollowupDialog.value = false;\n        \n        // 确保界面刷新显示分析结果\n        setTimeout(() => {\n          const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n          if (index !== -1) {\n            // 强制更新\n            followupOptions.value = [...followupOptions.value];\n          }\n        }, 500);\n      } else {\n        Toast.fail('支付失败');\n      }\n    } else {\n      Toast.fail('创建订单失败');\n    }\n  } catch (error) {\n    console.error('追问支付过程出错:', error);\n    Toast.fail('处理失败，请重试');\n  } finally {\n    isLoadingFollowup.value = false;\n    Toast.clear();\n  }\n};\n\n// 获取追问分析结果\nconst getFollowupAnalysis = async (area) => {\n  loading.value = true;\n  try {\n    console.log(`开始获取[${area}]追问分析，结果ID: ${resultId.value}`);\n    const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n    \n    if (response.data.code === 200) {\n      console.log('获取追问分析成功，响应数据:', response.data);\n      console.log('响应data字段详情:', JSON.stringify(response.data.data));\n      \n      // 处理分析结果为null或空的情况\n      if (!response.data.data) {\n        console.warn(`追问分析结果data为空: ${area}`);\n        const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\n        followupAnalysis.value[area] = defaultMessage;\n        return defaultMessage;\n      }\n      \n      // 提取分析内容，处理不同的响应格式\n      let analysisContent = null;\n      \n      if (response.data.data.analysis) {\n        // 标准格式：{area, analysis}\n        analysisContent = response.data.data.analysis;\n        console.log(`获取到标准格式分析结果, 类型: ${typeof analysisContent}, 长度: ${analysisContent ? analysisContent.length : 0}`);\n      } else if (typeof response.data.data === 'string') {\n        // 直接字符串格式\n        analysisContent = response.data.data;\n        console.log(`获取到字符串格式分析结果, 长度: ${analysisContent.length}`);\n      } else if (response.data.data[area]) {\n        // 对象格式：{area1: \"分析1\", area2: \"分析2\"}\n        analysisContent = response.data.data[area];\n        console.log(`获取到对象格式分析结果, 长度: ${analysisContent ? analysisContent.length : 0}`);\n      } else {\n        // 尝试遍历所有属性，看是否有匹配的内容\n        console.log('尝试查找匹配内容，data的所有键:', Object.keys(response.data.data));\n        for (const key in response.data.data) {\n          if (key.toLowerCase() === area.toLowerCase() || \n             (area === 'fiveYears' && key === 'future') ||\n             (area === 'future' && key === 'fiveYears')) {\n            analysisContent = response.data.data[key];\n            console.log(`找到匹配的键[${key}]，内容长度: ${analysisContent ? analysisContent.length : 0}`);\n            break;\n          }\n        }\n      }\n      \n      // 检查分析结果是否为null或空\n      if (!analysisContent) {\n        console.warn(`无法从响应中提取有效分析内容: ${area}`);\n        const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析尚未生成，请稍后刷新页面查看。`;\n        followupAnalysis.value[area] = defaultMessage;\n        return defaultMessage;\n      }\n      \n      // 检查分析结果是否是空字符串\n      if (typeof analysisContent === 'string' && analysisContent.trim() === '') {\n        console.warn(`追问分析结果为空字符串: ${area}`);\n        const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\n        followupAnalysis.value[area] = defaultMessage;\n        return defaultMessage;\n      }\n      \n      // 记录有效的分析结果\n      console.log(`获取到有效的[${area}]分析结果，长度: ${analysisContent.length}`);\n      \n      // 存储并返回分析结果\n      followupAnalysis.value[area] = analysisContent;\n      return analysisContent;\n    } else {\n      console.error('获取追问分析失败:', response.data);\n      const errorMessage = `获取分析失败: ${response.data.message || '未知错误'}`;\n      followupAnalysis.value[area] = errorMessage;\n      return errorMessage;\n    }\n  } catch (error) {\n    console.error('获取追问分析出错:', error);\n    const errorMessage = `获取分析出错: ${error.message || '请稍后重试'}`;\n    followupAnalysis.value[area] = errorMessage;\n    return errorMessage;\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 检查已支付的追问\nconst checkPaidFollowups = async () => {\n  try {\n    const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n    \n    if (response.data.code === 200 && response.data.data.followups) {\n      const paidFollowups = response.data.data.followups;\n      \n      // 更新已支付的追问选项\n      followupOptions.value = followupOptions.value.map(option => {\n        const isPaid = paidFollowups.some(f => f.area === option.id);\n        if (isPaid) {\n          // 如果已支付，获取分析结果\n          getFollowupAnalysis(option.id);\n        }\n        return { ...option, paid: isPaid };\n      });\n    }\n  } catch (error) {\n    console.error('检查已支付追问出错:', error);\n  }\n};\n\n// 修改getBaziResult函数\nconst getBaziResult = async () => {\n  loading.value = true;\n  try {\n    console.log('获取八字分析结果，ID:', resultId.value);\n    const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n    console.log('八字分析结果:', response.data);\n    \n    if (response.data.code === 200 && response.data.data) {\n      // 更新八字数据，使用深度合并确保数据结构完整\n      if (response.data.data.baziChart) {\n        baziData.value = {\n          yearPillar: response.data.data.baziChart.yearPillar || baziData.value.yearPillar,\n          monthPillar: response.data.data.baziChart.monthPillar || baziData.value.monthPillar,\n          dayPillar: response.data.data.baziChart.dayPillar || baziData.value.dayPillar,\n          hourPillar: response.data.data.baziChart.hourPillar || baziData.value.hourPillar,\n          fiveElements: response.data.data.baziChart.fiveElements || baziData.value.fiveElements,\n          flowingYears: response.data.data.baziChart.flowingYears || [],\n          shenSha: response.data.data.baziChart.shenSha || baziData.value.shenSha,\n          daYun: response.data.data.baziChart.daYun || baziData.value.daYun,\n          birthDate: response.data.data.baziChart.birthDate || null,\n          birthTime: response.data.data.baziChart.birthTime || null,\n          gender: response.data.data.baziChart.gender || null\n        };\n      } else {\n        console.warn('响应中缺少baziChart数据');\n        Toast.fail('数据格式不正确');\n      }\n      \n      // 更新AI分析结果\n      if (response.data.data.aiAnalysis) {\n        aiAnalysis.value = {\n          health: response.data.data.aiAnalysis.health || '',\n          career: response.data.data.aiAnalysis.career || '',\n          relationship: response.data.data.aiAnalysis.relationship || '',\n          children: response.data.data.aiAnalysis.children || '',\n          social: response.data.data.aiAnalysis.social || '',\n          future: response.data.data.aiAnalysis.future || '',\n          parents: response.data.data.aiAnalysis.parents || '',\n          education: response.data.data.aiAnalysis.education || '',\n          // 新增字段\n          coreAnalysis: response.data.data.aiAnalysis.coreAnalysis || '',\n          fiveElements: response.data.data.aiAnalysis.fiveElements || '',\n          shenShaAnalysis: response.data.data.aiAnalysis.shenShaAnalysis || '',\n          keyPoints: response.data.data.aiAnalysis.keyPoints || ''\n        };\n      }\n      \n      // 初始化追问选项\n      initFollowupOptions();\n      \n      // 加载已支付的追问分析结果\n      await loadFollowupResults();\n      \n      Toast.success('分析结果加载成功');\n    } else {\n      console.error('获取八字分析结果失败:', response.data.message);\n      Toast.fail(response.data.message || '获取分析结果失败');\n    }\n  } catch (error) {\n    console.error('获取八字分析结果出错:', error);\n    Toast.fail('获取分析结果失败，请稍后再试');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 添加缺失的函数\n// 初始化追问选项\nconst initFollowupOptions = () => {\n  // 根据用户年龄调整追问选项\n  if (userAge.value !== null) {\n    if (userAge.value < 6) {\n      // 为婴幼儿调整选项\n      followupOptions.value = followupOptions.value.filter(option => \n        ['health', 'personality', 'education', 'parents'].includes(option.id)\n      );\n    } else if (userAge.value < 18) {\n      // 为未成年人调整选项\n      followupOptions.value = followupOptions.value.filter(option => \n        !['marriage', 'career'].includes(option.id)\n      );\n    }\n  }\n  \n  console.log('初始化追问选项完成:', followupOptions.value);\n};\n\n// 加载已支付的追问分析结果\nconst loadFollowupResults = async () => {\n  try {\n    // 检查是否有结果ID\n    if (!resultId.value) {\n      console.warn('缺少结果ID，无法加载追问分析');\n      return;\n    }\n    \n    console.log('开始加载追问分析结果列表:', resultId.value);\n    \n    // 调用API获取已支付的追问列表\n    const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n    \n    if (response.data.code === 200 && response.data.data.followups) {\n      const paidFollowups = response.data.data.followups;\n      console.log('获取到的追问列表:', paidFollowups);\n      \n      // 更新已支付的追问选项\n      followupOptions.value = followupOptions.value.map(option => {\n        // 检查是否有匹配的追问分析\n        const isPaid = paidFollowups.some(f => {\n          // 尝试多种匹配方式\n          if (typeof f === 'object') {\n            // 对象格式：检查area字段\n            return f.area === option.id;\n          } else if (typeof f === 'string') {\n            // 字符串格式：直接比较\n            return f === option.id;\n          }\n          return false;\n        });\n        \n        if (isPaid) {\n          console.log(`发现已支付的追问: ${option.id}`);\n          // 如果已支付，获取分析结果\n          getFollowupAnalysis(option.id);\n        }\n        \n        return { ...option, paid: isPaid };\n      });\n      \n      console.log('更新后的追问选项:', followupOptions.value);\n    } else {\n      console.warn('获取追问列表失败或返回空列表');\n    }\n  } catch (error) {\n    console.error('加载追问分析结果出错:', error);\n    // 出错时不显示错误提示，静默失败\n  }\n};\n\n// 解析八字数据\nconst parseBaZiData = (data) => {\n  if (!data) return null;\n  \n  return {\n    yearPillar: data.yearPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    monthPillar: data.monthPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    dayPillar: data.dayPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    hourPillar: data.hourPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    shenSha: data.shenSha || {\n      dayChong: '未知',\n      zhiShen: '未知',\n      pengZuGan: '未知',\n      pengZuZhi: '未知',\n      xiShen: '未知',\n      fuShen: '未知',\n      caiShen: '未知',\n      benMing: [],\n      yearGan: [],\n      yearZhi: [],\n      dayGan: [],\n      dayZhi: []\n    },\n    daYun: data.daYun || {\n      startAge: 0,\n      startYear: 0,\n      isForward: true,\n      daYunList: []\n    },\n    flowingYears: data.flowingYears || []\n  };\n};\n\n// 添加分析状态检测函数\nconst isAnalysisItemLoading = (key) => {\n  if (!aiAnalysis.value) return true;\n  const value = aiAnalysis.value[key];\n  return !value || value === '暂无' || (value.includes && value.includes('正在分析'));\n};\n\n// 清理组件时移除定时器\nonUnmounted(() => {\n  if (analyzeTimer.value) {\n    clearInterval(analyzeTimer.value);\n    analyzeTimer.value = null;\n  }\n});\n\n// 刷新特定追问的分析结果\nconst reloadFollowupAnalysis = async (area) => {\n  if (!area) return;\n  \n  try {\n    isLoadingFollowup.value = true;\n    Toast.loading({\n      message: '正在刷新分析结果...',\n      duration: 0\n    });\n    \n    console.log(`刷新${area}分析结果`);\n    const analysis = await getFollowupAnalysis(area);\n    \n    if (analysis && typeof analysis === 'string' && analysis.length > 0) {\n      Toast.success('刷新成功');\n      console.log(`成功刷新${area}分析结果，长度: ${analysis.length}`);\n    } else {\n      Toast.fail('分析结果尚未生成完成');\n      console.warn(`刷新${area}分析结果失败或为空`);\n    }\n  } catch (error) {\n    console.error(`刷新${area}分析失败:`, error);\n    Toast.fail('刷新失败，请重试');\n  } finally {\n    isLoadingFollowup.value = false;\n    Toast.clear();\n  }\n};\n</script>\n\n<style scoped>\n.result-container {\n  padding-bottom: 20px;\n}\n\n.result-header {\n  text-align: center;\n  padding: 20px 0;\n  background-color: #f2f3f5;\n}\n\n.result-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #323233;\n}\n\n.result-header p {\n  margin: 10px 0 0;\n  font-size: 14px;\n  color: #969799;\n}\n\n.bazi-chart {\n  padding: 20px 16px;\n}\n\n.bazi-chart h3 {\n  margin: 20px 0 10px;\n  color: #323233;\n}\n\n.four-pillars {\n  display: flex;\n  justify-content: space-around;\n  margin: 20px 0;\n}\n\n.pillar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #f5f7fa;\n  padding: 10px;\n  border-radius: 8px;\n  width: 80px;\n}\n\n.stem, .branch {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-weight: bold;\n  margin: 4px 0;\n  border-radius: 4px;\n}\n\n.stem {\n  background: #1989fa;\n  color: white;\n}\n\n.branch {\n  background: #07c160;\n  color: white;\n}\n\n.label {\n  font-size: 12px;\n  color: #646566;\n  margin-top: 4px;\n}\n\n.nayin, .shishen, .wangshuai {\n  font-size: 12px;\n  color: #323233;\n  margin-top: 4px;\n}\n\n.five-elements {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n}\n\n.element {\n  text-align: center;\n  flex: 1;\n}\n\n.element-name {\n  font-size: 14px;\n  color: #323233;\n}\n\n.element-value {\n  font-size: 18px;\n  font-weight: bold;\n  color: #1989fa;\n  margin-top: 5px;\n}\n\n.flowing-years {\n  margin: 20px 0;\n}\n\n.ai-analysis {\n  padding: 20px 16px;\n}\n\n.analysis-section {\n  margin-bottom: 20px;\n}\n\n.analysis-section h3 {\n  margin: 0 0 10px;\n  color: #323233;\n}\n\n.analysis-section p {\n  margin: 0;\n  font-size: 14px;\n  color: #646566;\n  line-height: 1.6;\n}\n\n.action-buttons {\n  padding: 20px 16px;\n}\n\n.age-notice {\n  margin-bottom: 20px;\n}\n\n.shen-sha-info {\n  margin-bottom: 20px;\n}\n\n.da-yun-info {\n  margin-bottom: 20px;\n}\n\n.qi-yun-info {\n  margin: 0 0 10px;\n  font-size: 14px;\n  color: #646566;\n}\n\n.da-yun-table {\n  margin-top: 10px;\n}\n\n.placeholder {\n  background-color: #f2f3f5;\n  color: #969799;\n}\n\n/* 追问部分样式 */\n.followup-section {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #fff;\n  border-radius: 8px;\n}\n\n.section-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.section-desc {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 15px;\n}\n\n.followup-options {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 12px;\n}\n\n.followup-option {\n  background-color: #f5f7fa;\n  border-radius: 8px;\n  padding: 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.followup-option:hover {\n  background-color: #e8f0fe;\n}\n\n.followup-option.paid {\n  background-color: #e6f7ff;\n  border: 1px solid #91d5ff;\n}\n\n.option-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.option-name {\n  font-size: 15px;\n  font-weight: 500;\n}\n\n.option-status {\n  font-size: 13px;\n  color: #ff6b00;\n}\n\n.followup-option.paid .option-status {\n  color: #52c41a;\n}\n\n.followup-result {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  border-left: 4px solid #1989fa;\n}\n\n.followup-result h3 {\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.analysis-content {\n  font-size: 14px;\n  line-height: 1.6;\n  color: #333;\n  white-space: pre-wrap;\n}\n\n.followup-dialog-content {\n  padding: 15px;\n  text-align: center;\n}\n\n/* 添加表格样式 */\n.custom-table {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  margin: 10px 0;\n  background-color: #fff;\n  color: #323233;\n  font-size: 14px;\n}\n\n.custom-table th,\n.custom-table td {\n  padding: 8px 12px;\n  border-bottom: 1px solid #ebedf0;\n  text-align: center;\n}\n\n.custom-table th {\n  font-weight: 500;\n  background-color: #f7f8fa;\n  color: #646566;\n}\n\n.custom-table tr:hover {\n  background-color: #f2f3f5;\n}\n\n/* 添加分析状态相关样式 */\n.analysis-progress-notice {\n  margin: 10px 16px;\n  border-radius: 8px;\n}\n\n.analysis-progress {\n  width: 100%;\n}\n\n.analysis-progress p {\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: #1989fa;\n}\n\n.loading-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0;\n  background-color: #f7f8fa;\n  border-radius: 8px;\n  margin: 10px 0;\n}\n\n.enhanced-analysis {\n  margin-bottom: 10px;\n  padding: 10px;\n  border-left: 3px solid #1989fa;\n  background-color: #f8f9ff;\n  border-radius: 4px;\n}\n\n.enhanced-analysis p {\n  color: #333;\n  line-height: 1.6;\n  white-space: pre-wrap;\n  margin-bottom: 8px;\n}\n\n.analysis-source {\n  text-align: right;\n  margin-top: 8px;\n}\n\n/* 高亮效果 */\n@keyframes highlight-pulse {\n  0% { box-shadow: 0 0 0 0 rgba(25, 137, 250, 0.7); }\n  70% { box-shadow: 0 0 0 10px rgba(25, 137, 250, 0); }\n  100% { box-shadow: 0 0 0 0 rgba(25, 137, 250, 0); }\n}\n\n.highlight-section {\n  animation: highlight-pulse 1.5s ease-in-out;\n  background-color: rgba(25, 137, 250, 0.08);\n  border-radius: 8px;\n  transition: background-color 0.5s ease;\n}\n\n.markdown-content {\n  white-space: pre-wrap;\n  line-height: 1.6;\n  font-size: 14px;\n  color: #333;\n}\n\n.markdown-content h1, \n.markdown-content h2, \n.markdown-content h3, \n.markdown-content h4, \n.markdown-content h5, \n.markdown-content h6 {\n  margin-top: 1em;\n  margin-bottom: 0.5em;\n  font-weight: bold;\n  color: #333;\n}\n\n.markdown-content h1 {\n  font-size: 1.8em;\n}\n\n.markdown-content h2 {\n  font-size: 1.5em;\n}\n\n.markdown-content h3 {\n  font-size: 1.3em;\n}\n\n.markdown-content h4 {\n  font-size: 1.1em;\n}\n\n.markdown-content p {\n  margin-bottom: 1em;\n}\n\n.markdown-content ul, \n.markdown-content ol {\n  margin-left: 2em;\n  margin-bottom: 1em;\n}\n\n.markdown-content ul {\n  list-style-type: disc;\n}\n\n.markdown-content ol {\n  list-style-type: decimal;\n}\n\n.markdown-content li {\n  margin-bottom: 0.5em;\n}\n\n.markdown-content strong {\n  font-weight: bold;\n}\n\n.markdown-content em {\n  font-style: italic;\n}\n\n.markdown-content blockquote {\n  border-left: 4px solid #ddd;\n  padding-left: 1em;\n  margin-left: 0;\n  color: #666;\n}\n\n.markdown-content hr {\n  height: 1px;\n  background-color: #ddd;\n  border: none;\n  margin: 1.5em 0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}