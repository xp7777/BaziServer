{"ast":null,"code":"import { ref, onMounted, reactive, computed, watch, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nexport default {\n  __name: 'Result',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const resultId = ref(route.params.id || route.query.resultId);\n    const activeTab = ref(0);\n    const loading = ref(false);\n\n    // 添加分析状态相关变量\n    const isAnalyzing = ref(false);\n    const analyzeProgress = ref(0);\n    const analyzeTimer = ref(null);\n\n    // 用户年龄，从URL参数或localStorage获取\n    const userAge = ref(null);\n    // 尝试从URL参数获取年龄\n    if (route.query.age && !isNaN(parseInt(route.query.age))) {\n      userAge.value = parseInt(route.query.age);\n    }\n    // 如果URL参数中没有年龄，尝试从localStorage获取\n    else if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n      userAge.value = parseInt(localStorage.getItem('userAge'));\n    }\n    // 记录用户年龄到控制台，便于调试\n    console.log('用户年龄:', userAge.value);\n\n    // 从分析文本中提取特定部分内容\n    const getAnalysisContent = sectionName => {\n      try {\n        // 如果是性格特点或学业发展，直接从对应字段获取\n        if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n          return aiAnalysis.value.personality;\n        }\n        if (sectionName === '学业发展' && aiAnalysis.value.education) {\n          return aiAnalysis.value.education;\n        }\n\n        // 处理健康分析文本，尝试提取学业、性格等内容\n        if (aiAnalysis.value.health) {\n          const healthText = aiAnalysis.value.health;\n\n          // 查找各部分的标记\n          const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n          if (sectionMatch && sectionMatch[1]) {\n            return sectionMatch[1].trim();\n          }\n\n          // 如果是未来发展，尝试从overall中提取\n          if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n            const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n            if (futureMatch && futureMatch[2]) {\n              return futureMatch[2].trim();\n            }\n          }\n        }\n\n        // 如果没有找到对应部分或提取失败，返回空字符串\n        return '';\n      } catch (e) {\n        console.error(`提取${sectionName}内容时出错:`, e);\n        return '';\n      }\n    };\n\n    // 修改数据初始化\n    const focusAreas = ref([]);\n    const analysisResult = ref({});\n\n    // 初始化八字数据\n    const baziData = ref({\n      yearPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      monthPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      dayPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      hourPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      fiveElements: {},\n      flowingYears: [],\n      shenSha: {\n        dayChong: '',\n        zhiShen: '',\n        xiShen: '',\n        fuShen: '',\n        caiShen: '',\n        benMing: [],\n        yearGan: [],\n        yearZhi: [],\n        dayGan: [],\n        dayZhi: []\n      },\n      daYun: {\n        startAge: 0,\n        startYear: 0,\n        isForward: true,\n        daYunList: []\n      },\n      birthDate: null,\n      birthTime: null,\n      gender: null\n    });\n\n    // 初始化分析数据\n    const aiAnalysis = ref({\n      health: '',\n      wealth: '',\n      career: '',\n      relationship: '',\n      children: '',\n      overall: '',\n      personality: '',\n      education: '',\n      parents: '',\n      social: '',\n      future: ''\n    });\n    const testApiConnection = async () => {\n      try {\n        Toast.loading('正在测试API连接...');\n        // 使用配置好的http实例\n        const response = await axios.get('/');\n        console.log('API根路径响应:', response.data);\n        Toast.success('API连接成功');\n        return true;\n      } catch (error) {\n        console.error('API连接测试失败:', error);\n        Toast.fail('API连接失败，请检查后端服务');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 先测试API连接\n      const isApiConnected = await testApiConnection();\n      if (!isApiConnected) {\n        console.warn('API连接失败，将使用模拟数据');\n        loading.value = false;\n        return;\n      }\n      console.log('结果页面加载，URL参数中的ID:', resultId.value);\n\n      // 如果没有resultId，尝试从本地存储获取\n      const localResultId = localStorage.getItem('resultId');\n      if (!resultId.value && localResultId) {\n        console.log('从本地存储获取ID:', localResultId);\n        // 更新resultId为从本地存储获取的值\n        resultId.value = localResultId;\n      }\n\n      // 确保resultId是字符串类型，不是布尔值或其他数据类型\n      if (resultId.value === true || resultId.value === false) {\n        console.error('resultId不应该是布尔值:', resultId.value);\n        resultId.value = localResultId || route.query.resultId || '';\n      }\n      console.log('最终使用的resultId:', resultId.value);\n\n      // 如果resultId为空或无效，显示错误并尝试从URL查询参数获取\n      if (!resultId.value) {\n        console.error('缺少结果ID，无法获取分析结果');\n\n        // 尝试从URL查询参数获取备选ID\n        const urlResultId = route.query.resultId;\n        if (urlResultId) {\n          console.log('从URL查询参数获取备选ID:', urlResultId);\n          resultId.value = urlResultId;\n        } else {\n          Toast.fail('缺少结果ID，无法获取分析结果');\n          loading.value = false;\n          return;\n        }\n      }\n\n      // 存储确认的resultId到本地存储\n      localStorage.setItem('resultId', resultId.value);\n\n      // 显示加载提示\n      Toast.loading({\n        message: '正在加载八字分析结果，请稍候...',\n        duration: 0,\n        forbidClick: true\n      });\n\n      // 调用getBaziResult函数获取结果\n      await getBaziResult();\n\n      // 检查分析是否完成\n      const stillAnalyzing = Object.values(aiAnalysis.value).some(value => typeof value === 'string' && value.includes('正在分析'));\n      if (stillAnalyzing) {\n        console.log('检测到分析仍在进行中...');\n        Toast.loading({\n          message: '正在生成八字分析结果，这可能需要30-60秒...',\n          duration: 0\n        });\n\n        // 启动轮询\n        await pollAnalysisStatus(resultId.value);\n        Toast.success('分析完成');\n      }\n\n      // 关闭加载提示\n      Toast.clear();\n    });\n    const getElementName = element => {\n      if (!element) return '--';\n      const elementNames = {\n        'wood': '木',\n        'fire': '火',\n        'earth': '土',\n        'metal': '金',\n        'water': '水',\n        '木': '木',\n        '火': '火',\n        '土': '土',\n        '金': '金',\n        '水': '水'\n      };\n      return elementNames[element] || element;\n    };\n    const onClickLeft = () => {\n      router.push('/');\n    };\n\n    // 修改后的直接流下载函数，适应后端始终返回文件流\n    const downloadPDFAsStream = async () => {\n      Toast.loading({\n        message: '正在生成PDF并下载报告...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      if (!resultId.value) {\n        Toast.clear();\n        Toast.fail('缺少结果ID，无法下载报告');\n        return false;\n      }\n      try {\n        console.log('直接下载报告, 结果ID:', resultId.value);\n\n        // 创建下载链接，添加时间戳避免缓存问题\n        const timestamp = new Date().getTime();\n        const downloadUrl = `/api/bazi/pdf/${resultId.value}?t=${timestamp}`;\n        console.log('下载URL:', downloadUrl);\n\n        // 使用fetch API获取文件流\n        const response = await fetch(downloadUrl, {\n          method: 'GET',\n          cache: 'no-cache',\n          headers: {\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': '0'\n          }\n        });\n\n        // 检查错误\n        if (!response.ok) {\n          let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n          try {\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n              const errorData = await response.json();\n              errorMsg = errorData.message || errorMsg;\n            } else {\n              // 如果不是JSON格式的错误，尝试获取文本错误信息\n              const errorText = await response.text();\n              if (errorText) {\n                errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n              }\n            }\n          } catch (e) {\n            console.error('解析错误响应失败:', e);\n          }\n          throw new Error(errorMsg);\n        }\n\n        // 检查内容类型\n        const contentType = response.headers.get('content-type');\n        const disposition = response.headers.get('content-disposition');\n        console.log('响应内容类型:', contentType);\n        console.log('响应内容处置:', disposition);\n\n        // 确定文件名和扩展名\n        let filename = `八字命理分析_${resultId.value}.pdf`;\n        if (disposition && disposition.includes('filename=')) {\n          const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n\n        // 确定文件类型\n        const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n        if (!filename.endsWith(fileExtension)) {\n          filename = `八字命理分析_${resultId.value}.${fileExtension}`;\n        }\n\n        // 转换为Blob对象\n        const blob = await response.blob();\n\n        // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n        // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n        const isDownloadStarted = disposition && disposition.includes('attachment');\n        if (blob.size === 0 && !isDownloadStarted) {\n          throw new Error('下载的文件为空');\n        }\n\n        // 对于小文件，我们可以验证文件内容\n        // 但对于大文件或浏览器接管的下载，跳过验证\n        if (blob.size > 0 && blob.size < 1024 * 1024 && contentType && contentType.includes('pdf')) {\n          try {\n            // 读取文件头部以验证是否为有效的PDF\n            const fileReader = new FileReader();\n            const headerPromise = new Promise((resolve, reject) => {\n              fileReader.onloadend = e => resolve(e.target.result);\n              fileReader.onerror = e => reject(e);\n            });\n            fileReader.readAsArrayBuffer(blob.slice(0, 5));\n            const header = await headerPromise;\n            const headerView = new Uint8Array(header);\n            const headerString = String.fromCharCode.apply(null, headerView);\n            if (!headerString.startsWith('%PDF')) {\n              console.error('无效的PDF文件头:', headerString);\n              throw new Error('下载的不是有效的PDF文件');\n            }\n          } catch (e) {\n            console.error('验证PDF文件失败:', e);\n            // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n            if (!isDownloadStarted) {\n              throw new Error('验证PDF文件失败: ' + e.message);\n            } else {\n              console.warn('浏览器接管了下载，跳过PDF验证');\n            }\n          }\n        }\n\n        // 如果浏览器已经接管下载（通过Content-Disposition头部），\n        // 我们不需要手动创建下载链接\n        if (!isDownloadStarted) {\n          // 创建下载链接\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = filename;\n\n          // 触发下载\n          document.body.appendChild(a);\n          a.click();\n\n          // 清理\n          setTimeout(() => {\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n          }, 100);\n        }\n        Toast.clear();\n        Toast.success('报告下载成功');\n        return true;\n      } catch (error) {\n        console.error('直接下载PDF出错:', error);\n        Toast.clear();\n\n        // 检查是否是因为浏览器已经接管了下载而导致的错误\n        if (error.message && (error.message.includes('下载的文件为空') || error.message.includes('验证PDF文件失败'))) {\n          // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n          console.log('可能是浏览器已经接管了下载，不显示错误');\n          Toast.success('报告下载已开始，请等待浏览器完成下载');\n          return true;\n        }\n\n        // 显示错误信息\n        Toast.fail(error.message || '下载失败，请稍后重试');\n        return false;\n      }\n    };\n\n    // 修改主下载函数，添加重试逻辑\n    const downloadPDF = async () => {\n      Toast.loading({\n        message: '正在生成并下载PDF报告...',\n        duration: 5000,\n        position: 'middle'\n      });\n      if (!resultId.value) {\n        Toast.fail('缺少结果ID，无法生成报告');\n        return;\n      }\n\n      // 最多尝试3次下载\n      let attempts = 0;\n      let success = false;\n      while (attempts < 3 && !success) {\n        attempts++;\n        if (attempts > 1) {\n          console.log(`尝试第${attempts}次下载...`);\n          Toast.loading({\n            message: `尝试第${attempts}次下载...`,\n            duration: 2000\n          });\n          // 在重试之前等待一段时间\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n\n        // 使用流式下载模式，并处理返回值\n        success = await downloadPDFAsStream();\n\n        // 如果流式下载成功，直接返回，不再尝试其他方法\n        if (success === true) {\n          return;\n        }\n      }\n\n      // 如果多次尝试后仍然失败，提示用户\n      if (!success) {\n        Toast.clear();\n        Dialog.alert({\n          title: 'PDF下载失败',\n          message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。'\n        });\n      }\n    };\n\n    // 本地生成PDF的函数\n    const generatePDFLocally = async () => {\n      console.log('使用客户端jsPDF库生成PDF');\n\n      // 获取内容元素\n      const element = document.querySelector('.result-container');\n      if (!element) {\n        throw new Error('找不到要转换的内容元素');\n      }\n      Toast.loading({\n        message: '正在捕获页面内容...',\n        duration: 5000\n      });\n      try {\n        // 使用html2canvas捕获内容\n        const canvas = await html2canvas(element, {\n          scale: 1,\n          useCORS: true,\n          logging: false,\n          windowWidth: document.documentElement.offsetWidth,\n          windowHeight: document.documentElement.offsetHeight\n        });\n        Toast.loading({\n          message: '正在生成PDF文件...',\n          duration: 5000\n        });\n\n        // 创建PDF文档\n        const pdf = new jsPDF('p', 'mm', 'a4');\n\n        // 计算尺寸和比例\n        const imgData = canvas.toDataURL('image/png');\n        const imgWidth = 210; // A4宽度，单位mm\n        const pageHeight = 297; // A4高度，单位mm\n        const imgHeight = canvas.height * imgWidth / canvas.width;\n        let heightLeft = imgHeight;\n        let position = 0;\n\n        // 添加首页\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n\n        // 如果内容超过一页，添加更多页\n        while (heightLeft > 0) {\n          position = heightLeft - imgHeight;\n          pdf.addPage();\n          pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n          heightLeft -= pageHeight;\n        }\n\n        // 添加页脚\n        const pageCount = pdf.internal.getNumberOfPages();\n        for (let i = 1; i <= pageCount; i++) {\n          pdf.setPage(i);\n          pdf.setFontSize(10);\n          pdf.setTextColor(150);\n          pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, {\n            align: 'center'\n          });\n        }\n\n        // 保存PDF\n        pdf.save(`八字命理分析_${resultId.value}.pdf`);\n        return true;\n      } catch (error) {\n        console.error('本地PDF生成错误:', error);\n        throw error;\n      }\n    };\n    const shareResult = () => {\n      Toast.success('分享功能开发中');\n    };\n\n    // 处理本地PDF生成\n    const handleLocalPDFGeneration = async () => {\n      try {\n        Toast.loading({\n          message: '正在本地生成PDF...',\n          duration: 0,\n          forbidClick: true\n        });\n        await generatePDFLocally();\n        Toast.clear();\n        Toast.success('本地PDF生成成功');\n      } catch (error) {\n        console.error('本地PDF生成失败:', error);\n        Toast.clear();\n        Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 添加分析状态检查函数\n    const checkAnalysisStatus = async resultId => {\n      try {\n        console.log('检查分析状态:', resultId);\n        const response = await axios.get(`/api/bazi/result/${resultId}`);\n        if (response.data.code === 200) {\n          // 检查AI分析是否已经生成\n          const aiAnalysisData = response.data.data.aiAnalysis || {};\n\n          // 统计已完成和正在分析的项目\n          let totalItems = 0;\n          let completedItems = 0;\n          Object.entries(aiAnalysisData).forEach(([key, value]) => {\n            totalItems++;\n            if (!(typeof value === 'string' && value.includes('正在分析'))) {\n              completedItems++;\n            }\n          });\n\n          // 更新进度\n          if (totalItems > 0) {\n            analyzeProgress.value = Math.floor(completedItems / totalItems * 100);\n          }\n\n          // 检查是否还有\"正在分析\"的内容\n          const stillAnalyzing = Object.values(aiAnalysisData).some(value => typeof value === 'string' && value.includes('正在分析'));\n          isAnalyzing.value = stillAnalyzing;\n          if (stillAnalyzing) {\n            console.log('分析仍在进行中...', `完成度: ${analyzeProgress.value}%`);\n            return false;\n          } else {\n            console.log('分析已完成');\n            return true;\n          }\n        }\n        return false;\n      } catch (error) {\n        console.error('检查分析状态出错:', error);\n        return false;\n      }\n    };\n\n    // 添加轮询检查函数\n    const pollAnalysisStatus = async (resultId, maxAttempts = 30) => {\n      let attempts = 0;\n\n      // 显示进度条\n      isAnalyzing.value = true;\n\n      // 创建模拟进度，即使后端没有反馈也会看到进度在增加\n      if (analyzeTimer.value) clearInterval(analyzeTimer.value);\n      analyzeTimer.value = setInterval(() => {\n        if (analyzeProgress.value < 90) {\n          analyzeProgress.value += 2;\n        }\n      }, 2000);\n      return new Promise(resolve => {\n        const checkInterval = setInterval(async () => {\n          attempts++;\n          const isComplete = await checkAnalysisStatus(resultId);\n          if (isComplete || attempts >= maxAttempts) {\n            clearInterval(checkInterval);\n\n            // 清除模拟进度定时器\n            if (analyzeTimer.value) {\n              clearInterval(analyzeTimer.value);\n              analyzeTimer.value = null;\n            }\n            if (isComplete) {\n              // 如果完成，确保进度显示100%\n              analyzeProgress.value = 100;\n              setTimeout(() => {\n                isAnalyzing.value = false;\n              }, 1000); // 短暂显示100%后隐藏进度条\n            }\n            await getBaziResult(); // 最后再获取一次完整结果\n            Toast.clear();\n            resolve(isComplete);\n          }\n        }, 2000); // 每2秒检查一次\n      });\n    };\n\n    // 修改reloadBaziData函数，添加轮询逻辑\n    const reloadBaziData = async () => {\n      Toast.loading('正在重新加载数据...');\n      try {\n        if (!resultId.value) {\n          Toast.fail('缺少结果ID');\n          return;\n        }\n\n        // 获取URL参数\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // 尝试使用模拟支付接口\n        try {\n          console.log('尝试使用模拟支付接口...');\n\n          // 显示加载提示\n          Toast.loading({\n            message: '正在处理支付...',\n            duration: 0,\n            position: 'middle',\n            forbidClick: true\n          });\n\n          // 准备请求数据\n          const requestData = {\n            birthDate: baziData.value.birthDate || urlParams.get('birthDate'),\n            birthTime: baziData.value.birthTime || urlParams.get('birthTime'),\n            gender: baziData.value.gender || urlParams.get('gender')\n          };\n          console.log('请求数据:', requestData);\n\n          // 发送模拟支付请求\n          const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId.value}`, requestData);\n          console.log('模拟支付响应:', mockPaymentResponse.data);\n          if (mockPaymentResponse.data.code === 200) {\n            // 支付成功，显示成功提示\n            Toast.success('支付成功');\n\n            // 使用返回的resultId重新加载数据\n            if (mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n              const newResultId = mockPaymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n\n              // 更新全局的resultId变量\n              resultId.value = newResultId;\n              // 还需要更新本地存储中的resultId\n              localStorage.setItem('resultId', newResultId);\n\n              // 显示正在加载分析结果\n              Toast.loading({\n                message: '正在生成八字分析结果，这可能需要30-60秒...',\n                duration: 0,\n                position: 'middle',\n                forbidClick: true\n              });\n\n              // 轮询检查分析状态\n              const analysisComplete = await pollAnalysisStatus(newResultId);\n              if (analysisComplete) {\n                Toast.success('分析已完成');\n              } else {\n                Toast.info('分析可能尚未完成，显示部分结果');\n              }\n              return;\n            }\n          }\n        } catch (mockError) {\n          console.error('模拟支付失败:', mockError);\n          Toast.fail('重新加载失败: ' + (mockError.message || '未知错误'));\n          return;\n        }\n\n        // 如果模拟支付失败，尝试直接获取结果\n        try {\n          Toast.loading({\n            message: '正在加载现有分析结果...',\n            duration: 0,\n            forbidClick: true\n          });\n          const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n          if (response.data.code === 200) {\n            // 更新八字数据，使用空值合并运算符确保数据存在\n            baziData.value = {\n              yearPillar: response.data.data.baziChart?.yearPillar || null,\n              monthPillar: response.data.data.baziChart?.monthPillar || null,\n              dayPillar: response.data.data.baziChart?.dayPillar || null,\n              hourPillar: response.data.data.baziChart?.hourPillar || null,\n              fiveElements: response.data.data.baziChart?.fiveElements || null,\n              flowingYears: response.data.data.baziChart?.flowingYears || [],\n              shenSha: response.data.data.baziChart?.shenSha || baziData.value.shenSha,\n              daYun: response.data.data.baziChart?.daYun || baziData.value.daYun,\n              birthDate: response.data.data.baziChart?.birthDate || null,\n              birthTime: response.data.data.baziChart?.birthTime || null,\n              gender: response.data.data.baziChart?.gender || null\n            };\n\n            // 更新AI分析结果\n            aiAnalysis.value = {\n              health: response.data.data.aiAnalysis?.health || '',\n              wealth: response.data.data.aiAnalysis?.wealth || '',\n              career: response.data.data.aiAnalysis?.career || '',\n              relationship: response.data.data.aiAnalysis?.relationship || '',\n              children: response.data.data.aiAnalysis?.children || '',\n              overall: response.data.data.aiAnalysis?.overall || '',\n              personality: response.data.data.aiAnalysis?.personality || '',\n              education: response.data.data.aiAnalysis?.education || '',\n              parents: response.data.data.aiAnalysis?.parents || '',\n              social: response.data.data.aiAnalysis?.social || '',\n              future: response.data.data.aiAnalysis?.future || ''\n            };\n\n            // 检查是否存在\"正在分析\"的内容\n            const stillAnalyzing = Object.values(aiAnalysis.value).some(value => typeof value === 'string' && value.includes('正在分析'));\n\n            // 更新分析状态\n            isAnalyzing.value = stillAnalyzing;\n            if (stillAnalyzing) {\n              console.log('分析仍在进行中...');\n              // 不显示Toast，因为我们已经有进度条显示\n            } else {\n              // 分析完成\n              analyzeProgress.value = 100;\n              setTimeout(() => {\n                isAnalyzing.value = false;\n              }, 1000);\n            }\n          } else {\n            Toast.fail(response.data.message || '加载失败');\n          }\n        } catch (error) {\n          console.error('重新加载失败:', error);\n          Toast.fail('加载失败: ' + (error.message || '未知错误'));\n        }\n      } catch (error) {\n        console.error('重新加载失败:', error);\n        Toast.fail('加载失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 追问相关状态\n    const followupOptions = ref([{\n      id: 'marriage',\n      name: '婚姻感情',\n      selected: false,\n      paid: false\n    }, {\n      id: 'career',\n      name: '事业财运',\n      selected: false,\n      paid: false\n    }, {\n      id: 'children',\n      name: '子女情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'parents',\n      name: '父母情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'health',\n      name: '身体健康',\n      selected: false,\n      paid: false\n    }, {\n      id: 'education',\n      name: '学业',\n      selected: false,\n      paid: false\n    }, {\n      id: 'relationship',\n      name: '人际关系',\n      selected: false,\n      paid: false\n    }, {\n      id: 'fiveYears',\n      name: '近五年运势',\n      selected: false,\n      paid: false\n    }]);\n    const currentFollowup = ref(null);\n    const showFollowupDialog = ref(false);\n    const followupAnalysis = ref({});\n    const isLoadingFollowup = ref(false);\n\n    // 选择追问选项\n    const selectFollowupOption = option => {\n      // 如果已经支付过，直接显示结果\n      if (option.paid) {\n        // 显示已支付的分析结果\n        currentFollowup.value = option;\n        return;\n      }\n\n      // 否则设置当前选择的追问选项\n      currentFollowup.value = option;\n      showFollowupDialog.value = true;\n    };\n\n    // 支付追问费用\n    const payForFollowup = async () => {\n      if (!currentFollowup.value) return;\n      try {\n        isLoadingFollowup.value = true;\n\n        // 第一步：创建订单\n        Toast.loading({\n          message: '正在创建订单...',\n          forbidClick: true,\n          duration: 0\n        });\n\n        // 获取URL参数\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // 创建追问订单\n        const orderResponse = await axios.post('/api/order/create/followup', {\n          resultId: resultId.value,\n          area: currentFollowup.value.id\n        });\n        if (orderResponse.data.code === 200) {\n          const followupOrderId = orderResponse.data.data.orderId;\n          console.log('追问订单创建成功:', followupOrderId);\n\n          // 第二步：处理支付\n          Toast.loading({\n            message: '正在处理支付...',\n            forbidClick: true,\n            duration: 0\n          });\n\n          // 模拟支付\n          const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\n            birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\n            birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\n            gender: baziData.value?.gender || urlParams.get('gender'),\n            area: currentFollowup.value.id,\n            resultId: resultId.value\n          });\n          if (paymentResponse.data.code === 200) {\n            console.log('追问支付成功:', paymentResponse.data);\n            Toast.success('支付成功');\n\n            // 第三步：加载分析结果\n            Toast.loading({\n              message: '正在生成分析结果，这可能需要30-60秒...',\n              forbidClick: true,\n              duration: 0\n            });\n\n            // 获取并保存新的resultId（如果有的话）\n            if (paymentResponse.data.data && paymentResponse.data.data.resultId) {\n              const newResultId = paymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n              // 更新全局的resultId变量\n              resultId.value = newResultId;\n              // 还需要更新本地存储中的resultId\n              localStorage.setItem('resultId', newResultId);\n            }\n\n            // 轮询检查分析结果状态\n            const area = currentFollowup.value.id;\n            let isComplete = false;\n            let attempts = 0;\n            const maxAttempts = 30; // 最多等待60秒（30次 * 2秒）\n\n            // 自定义轮询检查追问分析状态\n            const pollFollowupStatus = async () => {\n              while (attempts < maxAttempts && !isComplete) {\n                attempts++;\n                try {\n                  // 等待2秒\n                  await new Promise(resolve => setTimeout(resolve, 2000));\n\n                  // 检查追问分析结果\n                  const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n                  if (response.data.code === 200 && response.data.data.analysis) {\n                    // 检查分析内容是否为\"正在分析\"\n                    const analysis = response.data.data.analysis;\n                    if (typeof analysis === 'string' && !analysis.includes('正在分析')) {\n                      isComplete = true;\n                      followupAnalysis.value[area] = analysis;\n                      break;\n                    }\n                  }\n                } catch (error) {\n                  console.error('检查追问分析状态出错:', error);\n                }\n              }\n\n              // 无论是否完成，都获取最终结果\n              await getFollowupAnalysis(area);\n            };\n\n            // 开始轮询\n            await pollFollowupStatus();\n\n            // 更新UI\n            Toast.clear();\n            if (isComplete) {\n              Toast.success('分析已完成');\n            } else {\n              Toast.info('分析可能尚未完成，显示部分结果');\n            }\n\n            // 标记为已支付\n            const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n            if (index !== -1) {\n              followupOptions.value[index].paid = true;\n            }\n            showFollowupDialog.value = false;\n          } else {\n            Toast.fail('支付失败');\n          }\n        } else {\n          Toast.fail('创建订单失败');\n        }\n      } catch (error) {\n        console.error('追问支付过程出错:', error);\n        Toast.fail('处理失败，请重试');\n      } finally {\n        isLoadingFollowup.value = false;\n        Toast.clear();\n      }\n    };\n\n    // 获取追问分析结果\n    const getFollowupAnalysis = async area => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n        if (response.data.code === 200) {\n          console.log('获取追问分析成功:', response.data);\n          followupAnalysis.value[area] = response.data.data.analysis;\n          return response.data.data.analysis;\n        } else {\n          console.error('获取追问分析失败:', response.data);\n          return null;\n        }\n      } catch (error) {\n        console.error('获取追问分析出错:', error);\n        return null;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 检查已支付的追问\n    const checkPaidFollowups = async () => {\n      try {\n        const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            const isPaid = paidFollowups.some(f => f.area === option.id);\n            if (isPaid) {\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n        }\n      } catch (error) {\n        console.error('检查已支付追问出错:', error);\n      }\n    };\n\n    // 修改getBaziResult函数\n    const getBaziResult = async () => {\n      loading.value = true;\n      try {\n        console.log('获取八字分析结果，ID:', resultId.value);\n        const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n        console.log('八字分析结果:', response.data);\n        if (response.data.code === 200 && response.data.data) {\n          // 更新八字数据，使用深度合并确保数据结构完整\n          if (response.data.data.baziChart) {\n            baziData.value = {\n              yearPillar: response.data.data.baziChart.yearPillar || baziData.value.yearPillar,\n              monthPillar: response.data.data.baziChart.monthPillar || baziData.value.monthPillar,\n              dayPillar: response.data.data.baziChart.dayPillar || baziData.value.dayPillar,\n              hourPillar: response.data.data.baziChart.hourPillar || baziData.value.hourPillar,\n              fiveElements: response.data.data.baziChart.fiveElements || baziData.value.fiveElements,\n              flowingYears: response.data.data.baziChart.flowingYears || [],\n              shenSha: response.data.data.baziChart.shenSha || baziData.value.shenSha,\n              daYun: response.data.data.baziChart.daYun || baziData.value.daYun,\n              birthDate: response.data.data.baziChart.birthDate || null,\n              birthTime: response.data.data.baziChart.birthTime || null,\n              gender: response.data.data.baziChart.gender || null\n            };\n          } else {\n            console.warn('响应中缺少baziChart数据');\n            Toast.fail('数据格式不正确');\n          }\n\n          // 更新AI分析结果\n          if (response.data.data.aiAnalysis) {\n            aiAnalysis.value = {\n              health: response.data.data.aiAnalysis.health || '',\n              wealth: response.data.data.aiAnalysis.wealth || '',\n              career: response.data.data.aiAnalysis.career || '',\n              relationship: response.data.data.aiAnalysis.relationship || '',\n              children: response.data.data.aiAnalysis.children || '',\n              overall: response.data.data.aiAnalysis.overall || '',\n              personality: response.data.data.aiAnalysis.personality || '',\n              education: response.data.data.aiAnalysis.education || '',\n              parents: response.data.data.aiAnalysis.parents || '',\n              social: response.data.data.aiAnalysis.social || '',\n              future: response.data.data.aiAnalysis.future || ''\n            };\n          }\n\n          // 初始化追问选项\n          initFollowupOptions();\n\n          // 加载已支付的追问分析结果\n          await loadFollowupResults();\n          Toast.success('分析结果加载成功');\n        } else {\n          console.error('获取八字分析结果失败:', response.data.message);\n          Toast.fail(response.data.message || '获取分析结果失败');\n        }\n      } catch (error) {\n        console.error('获取八字分析结果出错:', error);\n        Toast.fail('获取分析结果失败，请稍后再试');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 添加缺失的函数\n    // 初始化追问选项\n    const initFollowupOptions = () => {\n      // 根据用户年龄调整追问选项\n      if (userAge.value !== null) {\n        if (userAge.value < 6) {\n          // 为婴幼儿调整选项\n          followupOptions.value = followupOptions.value.filter(option => ['health', 'personality', 'education', 'parents'].includes(option.id));\n        } else if (userAge.value < 18) {\n          // 为未成年人调整选项\n          followupOptions.value = followupOptions.value.filter(option => !['marriage', 'career'].includes(option.id));\n        }\n      }\n      console.log('初始化追问选项完成:', followupOptions.value);\n    };\n\n    // 加载已支付的追问分析结果\n    const loadFollowupResults = async () => {\n      try {\n        // 检查是否有结果ID\n        if (!resultId.value) {\n          console.warn('缺少结果ID，无法加载追问分析');\n          return;\n        }\n\n        // 调用API获取已支付的追问列表\n        const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            const isPaid = paidFollowups.some(f => f.area === option.id);\n            if (isPaid) {\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n          console.log('已加载追问分析结果:', paidFollowups);\n        }\n      } catch (error) {\n        console.error('加载追问分析结果出错:', error);\n        // 出错时不显示错误提示，静默失败\n      }\n    };\n\n    // 解析八字数据\n    const parseBaZiData = data => {\n      if (!data) return null;\n      return {\n        yearPillar: data.yearPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        monthPillar: data.monthPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        dayPillar: data.dayPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        hourPillar: data.hourPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        shenSha: data.shenSha || {\n          dayChong: '未知',\n          zhiShen: '未知',\n          pengZuGan: '未知',\n          pengZuZhi: '未知',\n          xiShen: '未知',\n          fuShen: '未知',\n          caiShen: '未知',\n          benMing: [],\n          yearGan: [],\n          yearZhi: [],\n          dayGan: [],\n          dayZhi: []\n        },\n        daYun: data.daYun || {\n          startAge: 0,\n          startYear: 0,\n          isForward: true,\n          daYunList: []\n        },\n        flowingYears: data.flowingYears || []\n      };\n    };\n\n    // 添加分析状态检测函数\n    const isAnalysisItemLoading = key => {\n      if (!aiAnalysis.value || !aiAnalysis.value[key]) return true;\n      return aiAnalysis.value[key].includes && aiAnalysis.value[key].includes('正在分析');\n    };\n\n    // 清理组件时移除定时器\n    onUnmounted(() => {\n      if (analyzeTimer.value) {\n        clearInterval(analyzeTimer.value);\n        analyzeTimer.value = null;\n      }\n    });\n    const __returned__ = {\n      route,\n      router,\n      resultId,\n      activeTab,\n      loading,\n      isAnalyzing,\n      analyzeProgress,\n      analyzeTimer,\n      userAge,\n      getAnalysisContent,\n      focusAreas,\n      analysisResult,\n      baziData,\n      aiAnalysis,\n      testApiConnection,\n      getElementName,\n      onClickLeft,\n      downloadPDFAsStream,\n      downloadPDF,\n      generatePDFLocally,\n      shareResult,\n      handleLocalPDFGeneration,\n      checkAnalysisStatus,\n      pollAnalysisStatus,\n      reloadBaziData,\n      followupOptions,\n      currentFollowup,\n      showFollowupDialog,\n      followupAnalysis,\n      isLoadingFollowup,\n      selectFollowupOption,\n      payForFollowup,\n      getFollowupAnalysis,\n      checkPaidFollowups,\n      getBaziResult,\n      initFollowupOptions,\n      loadFollowupResults,\n      parseBaZiData,\n      isAnalysisItemLoading,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      watch,\n      onUnmounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get jsPDF() {\n        return jsPDF;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","watch","onUnmounted","useRoute","useRouter","Toast","Dialog","jsPDF","html2canvas","axios","route","router","resultId","params","id","query","activeTab","loading","isAnalyzing","analyzeProgress","analyzeTimer","userAge","age","isNaN","parseInt","value","localStorage","getItem","console","log","getAnalysisContent","sectionName","aiAnalysis","personality","education","health","healthText","sectionMatch","match","RegExp","trim","overall","futureMatch","e","error","focusAreas","analysisResult","baziData","yearPillar","heavenlyStem","earthlyBranch","naYin","shiShen","wangShuai","monthPillar","dayPillar","hourPillar","fiveElements","flowingYears","shenSha","dayChong","zhiShen","xiShen","fuShen","caiShen","benMing","yearGan","yearZhi","dayGan","dayZhi","daYun","startAge","startYear","isForward","daYunList","birthDate","birthTime","gender","wealth","career","relationship","children","parents","social","future","testApiConnection","response","get","data","success","fail","isApiConnected","warn","localResultId","urlResultId","setItem","message","duration","forbidClick","getBaziResult","stillAnalyzing","Object","values","some","includes","pollAnalysisStatus","clear","getElementName","element","elementNames","onClickLeft","push","downloadPDFAsStream","position","timestamp","Date","getTime","downloadUrl","fetch","method","cache","headers","ok","errorMsg","status","contentType","errorData","json","errorText","text","substring","Error","disposition","filename","filenameMatch","fileExtension","endsWith","blob","isDownloadStarted","size","fileReader","FileReader","headerPromise","Promise","resolve","reject","onloadend","target","result","onerror","readAsArrayBuffer","slice","header","headerView","Uint8Array","headerString","String","fromCharCode","apply","startsWith","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","setTimeout","revokeObjectURL","removeChild","downloadPDF","attempts","alert","title","generatePDFLocally","querySelector","canvas","scale","useCORS","logging","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","pdf","imgData","toDataURL","imgWidth","pageHeight","imgHeight","height","width","heightLeft","addImage","addPage","pageCount","internal","getNumberOfPages","i","setPage","setFontSize","setTextColor","pageSize","getWidth","getHeight","align","save","shareResult","handleLocalPDFGeneration","checkAnalysisStatus","code","aiAnalysisData","totalItems","completedItems","entries","forEach","key","Math","floor","maxAttempts","clearInterval","setInterval","checkInterval","isComplete","reloadBaziData","urlParams","URLSearchParams","location","search","requestData","mockPaymentResponse","post","newResultId","analysisComplete","info","mockError","baziChart","followupOptions","name","selected","paid","currentFollowup","showFollowupDialog","followupAnalysis","isLoadingFollowup","selectFollowupOption","option","payForFollowup","orderResponse","area","followupOrderId","orderId","paymentResponse","pollFollowupStatus","analysis","getFollowupAnalysis","index","findIndex","o","checkPaidFollowups","followups","paidFollowups","map","isPaid","f","initFollowupOptions","loadFollowupResults","filter","parseBaZiData","pengZuGan","pengZuZhi","isAnalysisItemLoading"],"sources":["D:/Python/20250603开发八字命理AI指导功能页码/开发八字命理AI指导功能页码/frontend/src/Result.vue"],"sourcesContent":["<template>\n  <div class=\"result-container\">\n    <van-nav-bar\n      title=\"八字分析结果\"\n      left-text=\"返回\"\n      left-arrow\n      @click-left=\"onClickLeft\"\n    />\n    \n    <div class=\"result-header\">\n      <h2>您的八字命盘分析</h2>\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\n    </div>\n    \n    <!-- 添加全局分析状态提示 -->\n    <van-notice-bar\n      v-if=\"isAnalyzing\"\n      color=\"#1989fa\"\n      background=\"#ecf9ff\"\n      left-icon=\"info-o\"\n      :scrollable=\"false\"\n      class=\"analysis-progress-notice\"\n    >\n      <div class=\"analysis-progress\">\n        <p>AI正在生成八字分析结果，这可能需要30-60秒</p>\n        <van-progress :percentage=\"analyzeProgress\" :show-pivot=\"false\" color=\"#1989fa\" />\n      </div>\n    </van-notice-bar>\n    \n    <van-tabs v-model=\"activeTab\" sticky>\n      <van-tab title=\"命盘信息\">\n        <div class=\"bazi-chart\">\n          <h3>八字命盘</h3>\n          <div v-if=\"baziData && baziData.yearPillar && baziData.monthPillar && baziData.dayPillar && baziData.hourPillar\" class=\"four-pillars\">\n            <!-- 年柱 -->\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\n                  <div class=\"label\">年柱</div>\n              <div class=\"nayin\">{{ baziData.yearPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.yearPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.yearPillar.wangShuai }}</div>\n                </div>\n            \n            <!-- 月柱 -->\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\n                  <div class=\"label\">月柱</div>\n              <div class=\"nayin\">{{ baziData.monthPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.monthPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.monthPillar.wangShuai }}</div>\n                </div>\n            \n            <!-- 日柱 -->\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\n                  <div class=\"label\">日柱</div>\n              <div class=\"nayin\">{{ baziData.dayPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.dayPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.dayPillar.wangShuai }}</div>\n                </div>\n            \n            <!-- 时柱 -->\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\n                  <div class=\"label\">时柱</div>\n              <div class=\"nayin\">{{ baziData.hourPillar.naYin }}</div>\n              <div class=\"shishen\">{{ baziData.hourPillar.shiShen }}</div>\n              <div class=\"wangshuai\">{{ baziData.hourPillar.wangShuai }}</div>\n                </div>\n                </div>\n          <div v-else class=\"error-message\">\n            <van-empty description=\"八字数据加载失败，请重试\" />\n            <van-button type=\"primary\" size=\"small\" @click=\"reloadBaziData\">重新加载</van-button>\n          </div>\n          \n          <h3>五行分布</h3>\n          <div class=\"five-elements\" v-if=\"baziData && baziData.fiveElements\">\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">{{ value }}</div>\n            </div>\n          </div>\n          <div class=\"five-elements\" v-else>\n            <div class=\"element\" v-for=\"element in ['wood', 'fire', 'earth', 'metal', 'water']\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">--</div>\n            </div>\n          </div>\n          \n          <!-- 添加神煞显示 -->\n          <h3>神煞信息</h3>\n          <div class=\"shen-sha-info\" v-if=\"baziData && baziData.shenSha\">\n            <div class=\"shen-sha-content\">\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">日冲</span>\n                <span class=\"value\">{{ baziData.shenSha.dayChong }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">值神</span>\n                <span class=\"value\">{{ baziData.shenSha.zhiShen }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">喜神</span>\n                <span class=\"value\">{{ baziData.shenSha.xiShen }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">福神</span>\n                <span class=\"value\">{{ baziData.shenSha.fuShen }}</span>\n              </div>\n              <div class=\"shen-sha-item\">\n                <span class=\"label\">财神</span>\n                <span class=\"value\">{{ baziData.shenSha.caiShen }}</span>\n              </div>\n            </div>\n            \n            <!-- 本命神煞 -->\n            <div class=\"ben-ming-sha\" v-if=\"baziData.shenSha.benMing.length > 0\">\n              <h4>本命神煞</h4>\n              <div class=\"ben-ming-list\">\n                <span v-for=\"(sha, index) in baziData.shenSha.benMing\" :key=\"index\" class=\"ben-ming-item\">\n                  {{ sha }}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"shen-sha-info\" v-else>\n            <van-cell-group inset>\n              <van-cell title=\"神煞信息\" value=\"暂无数据\" />\n            </van-cell-group>\n          </div>\n          \n          <!-- 添加大运显示 -->\n          <h3>大运信息</h3>\n          <div class=\"da-yun-info\" v-if=\"baziData && baziData.daYun\">\n            <div class=\"qi-yun-info\">\n              <p>起运年龄: {{ baziData.daYun.startAge }}岁</p>\n              <p>起运年份: {{ baziData.daYun.startYear }}年</p>\n              <p>大运顺序: {{ baziData.daYun.isForward ? '顺行' : '逆行' }}</p>\n            </div>\n            \n            <!-- 大运列表 -->\n            <div class=\"da-yun-table\">\n              <table class=\"custom-table\">\n                <thead>\n                  <tr>\n                    <th>年龄</th>\n                    <th>年份</th>\n                    <th>天干</th>\n                    <th>地支</th>\n                    <th>纳音</th>\n                    <th>吉凶</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(yun, index) in baziData.daYun.daYunList\" :key=\"index\">\n                    <td>{{ yun.startAge }}-{{ yun.endAge }}</td>\n                    <td>{{ yun.startYear }}-{{ yun.endYear }}</td>\n                    <td>{{ yun.heavenlyStem }}</td>\n                    <td>{{ yun.earthlyBranch }}</td>\n                    <td>{{ yun.naYin }}</td>\n                    <td>{{ yun.jiXiong }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div class=\"da-yun-info\" v-else>\n            <van-cell-group inset>\n              <van-cell title=\"大运信息\" value=\"暂无数据\" />\n            </van-cell-group>\n          </div>\n          \n          <h3>流年信息</h3>\n          <div class=\"liu-nian-info\" v-if=\"baziData && baziData.flowingYears && baziData.flowingYears.length\">\n            <table class=\"custom-table\">\n              <thead>\n                <tr>\n                  <th>年份</th>\n                  <th>年龄</th>\n                  <th>天干</th>\n                  <th>地支</th>\n                  <th>五行</th>\n                  <th>神煞</th>\n                  <th>吉凶</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(year, index) in baziData.flowingYears\" :key=\"index\">\n                  <td>{{ year.year }}</td>\n                  <td>{{ year.age }}</td>\n                  <td>{{ year.heavenlyStem }}</td>\n                  <td>{{ year.earthlyBranch }}</td>\n                  <td>{{ getElementName(year.ganElement) }}/{{ getElementName(year.zhiElement) }}</td>\n                  <td>{{ year.shenSha && Array.isArray(year.shenSha) ? year.shenSha.join(', ') : '无' }}</td>\n                  <td>{{ year.jiXiong || '未知' }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"liu-nian-info\" v-else>\n            <van-empty description=\"流年数据暂无\" />\n          </div>\n        </div>\n      </van-tab>\n      \n      <van-tab title=\"AI分析结果\">\n        <div class=\"ai-analysis\">\n          <div v-if=\"userAge !== null && userAge < 0\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge !== null && userAge < 6\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对婴幼儿({{userAge}}岁)，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge !== null && userAge < 18\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未成年人({{userAge}}岁)，重点关注性格特点、学业发展和健康状况。\n            </van-notice-bar>\n          </div>\n          \n          <!-- 修改分析部分显示，添加加载状态 -->\n          <div class=\"analysis-section\">\n            <h3>身体健康</h3>\n            <template v-if=\"isAnalysisItemLoading('health')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.health }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>性格特点</h3>\n            <template v-if=\"isAnalysisItemLoading('personality')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.personality || getAnalysisContent('性格特点') }}</p>\n          </div>\n          \n          <!-- 学业分析 -->\n          <div class=\"analysis-section\">\n            <h3>学业分析</h3>\n            <template v-if=\"isAnalysisItemLoading('education')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.education || getAnalysisContent('学业分析') }}</p>\n          </div>\n          \n          <!-- 父母情况 -->\n          <div class=\"analysis-section\">\n            <h3>父母情况</h3>\n            <template v-if=\"isAnalysisItemLoading('parents')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.parents || '暂无父母情况分析' }}</p>\n          </div>\n          \n          <!-- 人际关系 -->\n          <div class=\"analysis-section\">\n            <h3>人际关系</h3>\n            <template v-if=\"isAnalysisItemLoading('social')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.social || '暂无人际关系分析' }}</p>\n          </div>\n          \n          <!-- 财运分析 -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '财运分析' : '未来财运发展' }}</h3>\n            <template v-if=\"isAnalysisItemLoading('wealth')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.wealth }}</p>\n          </div>\n          \n          <!-- 事业发展 -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '事业发展' : '未来事业发展' }}</h3>\n            <template v-if=\"isAnalysisItemLoading('career')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.career }}</p>\n          </div>\n          \n          <!-- 婚姻感情 -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '婚姻感情' : '未来感情发展' }}</h3>\n            <template v-if=\"isAnalysisItemLoading('relationship')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.relationship }}</p>\n          </div>\n          \n          <!-- 子女情况 -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '子女情况' : '未来子女缘分' }}</h3>\n            <template v-if=\"isAnalysisItemLoading('children')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.children }}</p>\n          </div>\n          \n          <!-- 近五年运势 -->\n          <div class=\"analysis-section\">\n            <h3>近五年运势</h3>\n            <template v-if=\"isAnalysisItemLoading('future')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.future || getAnalysisContent('近五年运势') || aiAnalysis.overall }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>综合建议</h3>\n            <template v-if=\"isAnalysisItemLoading('overall')\">\n              <div class=\"loading-content\">\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\n              </div>\n            </template>\n            <p v-else>{{ aiAnalysis.overall }}</p>\n          </div>\n        </div>\n      </van-tab>\n    </van-tabs>\n    \n    <div class=\"action-buttons\">\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\n        下载PDF报告\n      </van-button>\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\n        分享结果\n      </van-button>\n      \n      <!-- 本地生成PDF按钮 -->\n      <van-button plain type=\"info\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"handleLocalPDFGeneration\">\n        本地生成PDF\n      </van-button>\n      \n      <!-- 调试按钮 -->\n      <van-button plain type=\"warning\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"reloadBaziData\">\n        重新加载分析数据\n      </van-button>\n    </div>\n    \n    <!-- 添加追问部分 -->\n    <div class=\"followup-section\" v-if=\"baziData && !loading\">\n      <h2 class=\"section-title\">深度分析</h2>\n      <p class=\"section-desc\">选择您感兴趣的领域，进行深度分析</p>\n      \n      <div class=\"followup-options\">\n        <div \n          v-for=\"option in followupOptions\" \n          :key=\"option.id\" \n          class=\"followup-option\" \n          :class=\"{ 'paid': option.paid }\"\n          @click=\"selectFollowupOption(option)\"\n        >\n          <div class=\"option-content\">\n            <span class=\"option-name\">{{ option.name }}</span>\n            <span class=\"option-status\" v-if=\"option.paid\">已解锁</span>\n            <span class=\"option-status\" v-else>￥9.9</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 已支付的追问分析结果展示 -->\n      <div v-if=\"currentFollowup && currentFollowup.paid\" class=\"followup-result\">\n        <h3>{{ currentFollowup.name }}分析</h3>\n        <div class=\"analysis-content\">\n          {{ followupAnalysis[currentFollowup.id] || '暂无分析结果' }}\n        </div>\n      </div>\n    </div>\n    \n    <!-- 追问支付对话框 -->\n    <van-dialog\n      v-model:show=\"showFollowupDialog\"\n      title=\"深度分析\"\n      confirm-button-text=\"支付 ￥9.9\"\n      @confirm=\"payForFollowup\"\n      :before-close=\"() => !isLoadingFollowup\"\n    >\n      <div class=\"followup-dialog-content\">\n        <p>您选择了「{{ currentFollowup?.name }}」深度分析</p>\n        <p>支付后，AI将根据您的八字和流年运势，为您提供专业的命理分析</p>\n      </div>\n    </van-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, computed, watch, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\n\nconst route = useRoute();\nconst router = useRouter();\nconst resultId = ref(route.params.id || route.query.resultId);\nconst activeTab = ref(0);\nconst loading = ref(false);\n\n// 添加分析状态相关变量\nconst isAnalyzing = ref(false);\nconst analyzeProgress = ref(0);\nconst analyzeTimer = ref(null);\n\n// 用户年龄，从URL参数或localStorage获取\nconst userAge = ref(null);\n// 尝试从URL参数获取年龄\nif (route.query.age && !isNaN(parseInt(route.query.age))) {\n  userAge.value = parseInt(route.query.age);\n} \n// 如果URL参数中没有年龄，尝试从localStorage获取\nelse if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n  userAge.value = parseInt(localStorage.getItem('userAge'));\n}\n// 记录用户年龄到控制台，便于调试\nconsole.log('用户年龄:', userAge.value);\n\n// 从分析文本中提取特定部分内容\nconst getAnalysisContent = (sectionName) => {\n  try {\n    // 如果是性格特点或学业发展，直接从对应字段获取\n    if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n      return aiAnalysis.value.personality;\n    }\n    \n    if (sectionName === '学业发展' && aiAnalysis.value.education) {\n      return aiAnalysis.value.education;\n    }\n    \n    // 处理健康分析文本，尝试提取学业、性格等内容\n    if (aiAnalysis.value.health) {\n      const healthText = aiAnalysis.value.health;\n      \n      // 查找各部分的标记\n      const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n      if (sectionMatch && sectionMatch[1]) {\n        return sectionMatch[1].trim();\n      }\n      \n      // 如果是未来发展，尝试从overall中提取\n      if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n        const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n        if (futureMatch && futureMatch[2]) {\n          return futureMatch[2].trim();\n        }\n      }\n    }\n    \n    // 如果没有找到对应部分或提取失败，返回空字符串\n    return '';\n  } catch (e) {\n    console.error(`提取${sectionName}内容时出错:`, e);\n    return '';\n  }\n};\n\n// 修改数据初始化\nconst focusAreas = ref([]);\nconst analysisResult = ref({});\n\n// 初始化八字数据\nconst baziData = ref({\n  yearPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  monthPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  dayPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  hourPillar: { \n    heavenlyStem: '', \n    earthlyBranch: '',\n    naYin: '',\n    shiShen: '',\n    wangShuai: ''\n  },\n  fiveElements: {},\n  flowingYears: [],\n  shenSha: {\n    dayChong: '',\n    zhiShen: '',\n    xiShen: '',\n    fuShen: '',\n    caiShen: '',\n    benMing: [],\n    yearGan: [],\n    yearZhi: [],\n    dayGan: [],\n    dayZhi: []\n  },\n  daYun: {\n    startAge: 0,\n    startYear: 0,\n    isForward: true,\n    daYunList: []\n  },\n  birthDate: null,\n  birthTime: null,\n  gender: null\n});\n\n// 初始化分析数据\nconst aiAnalysis = ref({\n  health: '',\n  wealth: '',\n  career: '',\n  relationship: '',\n  children: '',\n  overall: '',\n  personality: '',\n  education: '',\n  parents: '',\n  social: '',\n  future: ''\n});\n\nconst testApiConnection = async () => {\n  try {\n    Toast.loading('正在测试API连接...');\n    // 使用配置好的http实例\n    const response = await axios.get('/');\n    console.log('API根路径响应:', response.data);\n    Toast.success('API连接成功');\n    return true;\n  } catch (error) {\n    console.error('API连接测试失败:', error);\n    Toast.fail('API连接失败，请检查后端服务');\n    return false;\n  }\n};\n\nonMounted(async () => {\n  // 先测试API连接\n  const isApiConnected = await testApiConnection();\n  if (!isApiConnected) {\n    console.warn('API连接失败，将使用模拟数据');\n    loading.value = false;\n    return;\n  }\n  \n  console.log('结果页面加载，URL参数中的ID:', resultId.value);\n  \n  // 如果没有resultId，尝试从本地存储获取\n  const localResultId = localStorage.getItem('resultId');\n  if (!resultId.value && localResultId) {\n    console.log('从本地存储获取ID:', localResultId);\n    // 更新resultId为从本地存储获取的值\n    resultId.value = localResultId;\n  }\n  \n  // 确保resultId是字符串类型，不是布尔值或其他数据类型\n  if (resultId.value === true || resultId.value === false) {\n    console.error('resultId不应该是布尔值:', resultId.value);\n    resultId.value = localResultId || route.query.resultId || '';\n  }\n  \n  console.log('最终使用的resultId:', resultId.value);\n  \n  // 如果resultId为空或无效，显示错误并尝试从URL查询参数获取\n  if (!resultId.value) {\n    console.error('缺少结果ID，无法获取分析结果');\n    \n    // 尝试从URL查询参数获取备选ID\n    const urlResultId = route.query.resultId;\n    if (urlResultId) {\n      console.log('从URL查询参数获取备选ID:', urlResultId);\n      resultId.value = urlResultId;\n    } else {\n    Toast.fail('缺少结果ID，无法获取分析结果');\n    loading.value = false;\n    return;\n    }\n  }\n  \n  // 存储确认的resultId到本地存储\n  localStorage.setItem('resultId', resultId.value);\n  \n  // 显示加载提示\n  Toast.loading({\n    message: '正在加载八字分析结果，请稍候...',\n    duration: 0,\n    forbidClick: true\n  });\n  \n  // 调用getBaziResult函数获取结果\n  await getBaziResult();\n  \n  // 检查分析是否完成\n  const stillAnalyzing = Object.values(aiAnalysis.value).some(\n    value => typeof value === 'string' && value.includes('正在分析')\n  );\n  \n  if (stillAnalyzing) {\n    console.log('检测到分析仍在进行中...');\n    Toast.loading({\n      message: '正在生成八字分析结果，这可能需要30-60秒...',\n      duration: 0\n    });\n    \n    // 启动轮询\n    await pollAnalysisStatus(resultId.value);\n    Toast.success('分析完成');\n  }\n  \n  // 关闭加载提示\n  Toast.clear();\n});\n\nconst getElementName = (element) => {\n  if (!element) return '--';\n  \n  const elementNames = {\n    'wood': '木',\n    'fire': '火',\n    'earth': '土',\n    'metal': '金',\n    'water': '水',\n    '木': '木',\n    '火': '火',\n    '土': '土',\n    '金': '金',\n    '水': '水'\n  };\n  \n  return elementNames[element] || element;\n};\n\nconst onClickLeft = () => {\n  router.push('/');\n};\n\n// 修改后的直接流下载函数，适应后端始终返回文件流\nconst downloadPDFAsStream = async () => {\n  Toast.loading({\n    message: '正在生成PDF并下载报告...',\n    duration: 0,\n    position: 'middle',\n    forbidClick: true\n  });\n  \n  if (!resultId.value) {\n    Toast.clear();\n    Toast.fail('缺少结果ID，无法下载报告');\n    return false;\n  }\n  \n  try {\n    console.log('直接下载报告, 结果ID:', resultId.value);\n    \n    // 创建下载链接，添加时间戳避免缓存问题\n    const timestamp = new Date().getTime();\n    const downloadUrl = `/api/bazi/pdf/${resultId.value}?t=${timestamp}`;\n    console.log('下载URL:', downloadUrl);\n    \n    // 使用fetch API获取文件流\n    const response = await fetch(downloadUrl, {\n      method: 'GET',\n      cache: 'no-cache',\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Pragma': 'no-cache',\n        'Expires': '0'\n      }\n    });\n    \n    // 检查错误\n    if (!response.ok) {\n      let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n      try {\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          const errorData = await response.json();\n          errorMsg = errorData.message || errorMsg;\n        } else {\n          // 如果不是JSON格式的错误，尝试获取文本错误信息\n          const errorText = await response.text();\n          if (errorText) {\n            errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n          }\n        }\n      } catch (e) {\n        console.error('解析错误响应失败:', e);\n      }\n      throw new Error(errorMsg);\n    }\n    \n    // 检查内容类型\n    const contentType = response.headers.get('content-type');\n    const disposition = response.headers.get('content-disposition');\n    \n    console.log('响应内容类型:', contentType);\n    console.log('响应内容处置:', disposition);\n    \n    // 确定文件名和扩展名\n    let filename = `八字命理分析_${resultId.value}.pdf`;\n    if (disposition && disposition.includes('filename=')) {\n      const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n      if (filenameMatch && filenameMatch[1]) {\n        filename = filenameMatch[1];\n      }\n    }\n    \n    // 确定文件类型\n    const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n    if (!filename.endsWith(fileExtension)) {\n      filename = `八字命理分析_${resultId.value}.${fileExtension}`;\n    }\n    \n    // 转换为Blob对象\n    const blob = await response.blob();\n    \n    // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n    // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n    const isDownloadStarted = disposition && disposition.includes('attachment');\n    if (blob.size === 0 && !isDownloadStarted) {\n      throw new Error('下载的文件为空');\n    }\n    \n    // 对于小文件，我们可以验证文件内容\n    // 但对于大文件或浏览器接管的下载，跳过验证\n    if (blob.size > 0 && blob.size < 1024*1024 && contentType && contentType.includes('pdf')) {\n      try {\n        // 读取文件头部以验证是否为有效的PDF\n        const fileReader = new FileReader();\n        const headerPromise = new Promise((resolve, reject) => {\n          fileReader.onloadend = (e) => resolve(e.target.result);\n          fileReader.onerror = (e) => reject(e);\n        });\n        fileReader.readAsArrayBuffer(blob.slice(0, 5));\n        \n        const header = await headerPromise;\n        const headerView = new Uint8Array(header);\n        const headerString = String.fromCharCode.apply(null, headerView);\n        \n        if (!headerString.startsWith('%PDF')) {\n          console.error('无效的PDF文件头:', headerString);\n          throw new Error('下载的不是有效的PDF文件');\n        }\n      } catch (e) {\n        console.error('验证PDF文件失败:', e);\n        // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n        if (!isDownloadStarted) {\n          throw new Error('验证PDF文件失败: ' + e.message);\n        } else {\n          console.warn('浏览器接管了下载，跳过PDF验证');\n        }\n      }\n    }\n    \n    // 如果浏览器已经接管下载（通过Content-Disposition头部），\n    // 我们不需要手动创建下载链接\n    if (!isDownloadStarted) {\n      // 创建下载链接\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      \n      // 触发下载\n      document.body.appendChild(a);\n      a.click();\n      \n      // 清理\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }, 100);\n    }\n    \n    Toast.clear();\n    Toast.success('报告下载成功');\n    return true;\n  } catch (error) {\n    console.error('直接下载PDF出错:', error);\n    Toast.clear();\n    \n    // 检查是否是因为浏览器已经接管了下载而导致的错误\n    if (error.message && (\n        error.message.includes('下载的文件为空') || \n        error.message.includes('验证PDF文件失败')\n      )) {\n      // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n      console.log('可能是浏览器已经接管了下载，不显示错误');\n      Toast.success('报告下载已开始，请等待浏览器完成下载');\n      return true;\n    }\n    \n    // 显示错误信息\n    Toast.fail(error.message || '下载失败，请稍后重试');\n    return false;\n  }\n};\n\n// 修改主下载函数，添加重试逻辑\nconst downloadPDF = async () => {\n  Toast.loading({\n    message: '正在生成并下载PDF报告...',\n    duration: 5000,\n    position: 'middle'\n  });\n  \n  if (!resultId.value) {\n    Toast.fail('缺少结果ID，无法生成报告');\n    return;\n  }\n  \n  // 最多尝试3次下载\n  let attempts = 0;\n  let success = false;\n  \n  while (attempts < 3 && !success) {\n    attempts++;\n    \n    if (attempts > 1) {\n      console.log(`尝试第${attempts}次下载...`);\n      Toast.loading({\n        message: `尝试第${attempts}次下载...`,\n        duration: 2000\n      });\n      // 在重试之前等待一段时间\n      await new Promise(resolve => setTimeout(resolve, 2000));\n    }\n    \n    // 使用流式下载模式，并处理返回值\n    success = await downloadPDFAsStream();\n    \n    // 如果流式下载成功，直接返回，不再尝试其他方法\n    if (success === true) {\n      return;\n    }\n  }\n  \n  // 如果多次尝试后仍然失败，提示用户\n  if (!success) {\n    Toast.clear();\n    Dialog.alert({\n      title: 'PDF下载失败',\n      message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。',\n    });\n  }\n};\n\n// 本地生成PDF的函数\nconst generatePDFLocally = async () => {\n  console.log('使用客户端jsPDF库生成PDF');\n  \n  // 获取内容元素\n  const element = document.querySelector('.result-container');\n  if (!element) {\n    throw new Error('找不到要转换的内容元素');\n  }\n  \n  Toast.loading({\n    message: '正在捕获页面内容...',\n    duration: 5000\n  });\n  \n  try {\n    // 使用html2canvas捕获内容\n    const canvas = await html2canvas(element, {\n      scale: 1,\n      useCORS: true,\n      logging: false,\n      windowWidth: document.documentElement.offsetWidth,\n      windowHeight: document.documentElement.offsetHeight,\n    });\n    \n    Toast.loading({\n      message: '正在生成PDF文件...',\n      duration: 5000\n    });\n        \n    // 创建PDF文档\n    const pdf = new jsPDF('p', 'mm', 'a4');\n        \n    // 计算尺寸和比例\n    const imgData = canvas.toDataURL('image/png');\n    const imgWidth = 210; // A4宽度，单位mm\n    const pageHeight = 297; // A4高度，单位mm\n    const imgHeight = canvas.height * imgWidth / canvas.width;\n    let heightLeft = imgHeight;\n    let position = 0;\n          \n    // 添加首页\n    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n    heightLeft -= pageHeight;\n    \n    // 如果内容超过一页，添加更多页\n    while (heightLeft > 0) {\n      position = heightLeft - imgHeight;\n      pdf.addPage();\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n    }\n    \n    // 添加页脚\n    const pageCount = pdf.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      pdf.setPage(i);\n      pdf.setFontSize(10);\n      pdf.setTextColor(150);\n      pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });\n    }\n    \n    // 保存PDF\n    pdf.save(`八字命理分析_${resultId.value}.pdf`);\n    \n    return true;\n  } catch (error) {\n    console.error('本地PDF生成错误:', error);\n    throw error;\n  }\n};\n\nconst shareResult = () => {\n  Toast.success('分享功能开发中');\n};\n\n// 处理本地PDF生成\nconst handleLocalPDFGeneration = async () => {\n  try {\n    Toast.loading({\n      message: '正在本地生成PDF...',\n      duration: 0,\n      forbidClick: true\n    });\n    \n    await generatePDFLocally();\n    \n    Toast.clear();\n    Toast.success('本地PDF生成成功');\n  } catch (error) {\n    console.error('本地PDF生成失败:', error);\n    Toast.clear();\n    Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n  }\n};\n\n// 添加分析状态检查函数\nconst checkAnalysisStatus = async (resultId) => {\n  try {\n    console.log('检查分析状态:', resultId);\n    const response = await axios.get(`/api/bazi/result/${resultId}`);\n    \n    if (response.data.code === 200) {\n      // 检查AI分析是否已经生成\n      const aiAnalysisData = response.data.data.aiAnalysis || {};\n      \n      // 统计已完成和正在分析的项目\n      let totalItems = 0;\n      let completedItems = 0;\n      \n      Object.entries(aiAnalysisData).forEach(([key, value]) => {\n        totalItems++;\n        if (!(typeof value === 'string' && value.includes('正在分析'))) {\n          completedItems++;\n        }\n      });\n      \n      // 更新进度\n      if (totalItems > 0) {\n        analyzeProgress.value = Math.floor((completedItems / totalItems) * 100);\n      }\n      \n      // 检查是否还有\"正在分析\"的内容\n      const stillAnalyzing = Object.values(aiAnalysisData).some(\n        value => typeof value === 'string' && value.includes('正在分析')\n      );\n      \n      isAnalyzing.value = stillAnalyzing;\n      \n      if (stillAnalyzing) {\n        console.log('分析仍在进行中...', `完成度: ${analyzeProgress.value}%`);\n        return false;\n      } else {\n        console.log('分析已完成');\n        return true;\n      }\n    }\n    return false;\n  } catch (error) {\n    console.error('检查分析状态出错:', error);\n    return false;\n  }\n};\n\n// 添加轮询检查函数\nconst pollAnalysisStatus = async (resultId, maxAttempts = 30) => {\n  let attempts = 0;\n  \n  // 显示进度条\n  isAnalyzing.value = true;\n  \n  // 创建模拟进度，即使后端没有反馈也会看到进度在增加\n  if (analyzeTimer.value) clearInterval(analyzeTimer.value);\n  analyzeTimer.value = setInterval(() => {\n    if (analyzeProgress.value < 90) {\n      analyzeProgress.value += 2;\n    }\n  }, 2000);\n  \n  return new Promise((resolve) => {\n    const checkInterval = setInterval(async () => {\n      attempts++;\n      const isComplete = await checkAnalysisStatus(resultId);\n      \n      if (isComplete || attempts >= maxAttempts) {\n        clearInterval(checkInterval);\n        \n        // 清除模拟进度定时器\n        if (analyzeTimer.value) {\n          clearInterval(analyzeTimer.value);\n          analyzeTimer.value = null;\n        }\n        \n        if (isComplete) {\n          // 如果完成，确保进度显示100%\n          analyzeProgress.value = 100;\n          setTimeout(() => {\n            isAnalyzing.value = false;\n          }, 1000); // 短暂显示100%后隐藏进度条\n        }\n        \n        await getBaziResult(); // 最后再获取一次完整结果\n        Toast.clear();\n        resolve(isComplete);\n      }\n    }, 2000); // 每2秒检查一次\n  });\n};\n\n// 修改reloadBaziData函数，添加轮询逻辑\nconst reloadBaziData = async () => {\n  Toast.loading('正在重新加载数据...');\n  \n  try {\n    if (!resultId.value) {\n      Toast.fail('缺少结果ID');\n      return;\n    }\n    \n    // 获取URL参数\n    const urlParams = new URLSearchParams(window.location.search);\n    \n    // 尝试使用模拟支付接口\n    try {\n      console.log('尝试使用模拟支付接口...');\n      \n      // 显示加载提示\n      Toast.loading({\n        message: '正在处理支付...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      \n      // 准备请求数据\n      const requestData = {\n        birthDate: baziData.value.birthDate || urlParams.get('birthDate'),\n        birthTime: baziData.value.birthTime || urlParams.get('birthTime'),\n        gender: baziData.value.gender || urlParams.get('gender')\n      };\n      \n      console.log('请求数据:', requestData);\n      \n      // 发送模拟支付请求\n      const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId.value}`, requestData);\n      console.log('模拟支付响应:', mockPaymentResponse.data);\n      \n      if (mockPaymentResponse.data.code === 200) {\n        // 支付成功，显示成功提示\n        Toast.success('支付成功');\n        \n        // 使用返回的resultId重新加载数据\n        if (mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n        const newResultId = mockPaymentResponse.data.data.resultId;\n        console.log('获取到新的resultId:', newResultId);\n        \n          // 更新全局的resultId变量\n          resultId.value = newResultId;\n          // 还需要更新本地存储中的resultId\n          localStorage.setItem('resultId', newResultId);\n          \n          // 显示正在加载分析结果\n          Toast.loading({\n            message: '正在生成八字分析结果，这可能需要30-60秒...',\n            duration: 0,\n            position: 'middle',\n            forbidClick: true\n          });\n          \n          // 轮询检查分析状态\n          const analysisComplete = await pollAnalysisStatus(newResultId);\n          \n          if (analysisComplete) {\n            Toast.success('分析已完成');\n          } else {\n            Toast.info('分析可能尚未完成，显示部分结果');\n          }\n          \n          return;\n        }\n      }\n    } catch (mockError) {\n      console.error('模拟支付失败:', mockError);\n      Toast.fail('重新加载失败: ' + (mockError.message || '未知错误'));\n      return;\n    }\n    \n    // 如果模拟支付失败，尝试直接获取结果\n    try {\n      Toast.loading({\n        message: '正在加载现有分析结果...',\n        duration: 0,\n        forbidClick: true\n      });\n      \n      const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n    \n    if (response.data.code === 200) {\n      // 更新八字数据，使用空值合并运算符确保数据存在\n      baziData.value = {\n        yearPillar: response.data.data.baziChart?.yearPillar || null,\n        monthPillar: response.data.data.baziChart?.monthPillar || null,\n        dayPillar: response.data.data.baziChart?.dayPillar || null,\n        hourPillar: response.data.data.baziChart?.hourPillar || null,\n        fiveElements: response.data.data.baziChart?.fiveElements || null,\n        flowingYears: response.data.data.baziChart?.flowingYears || [],\n          shenSha: response.data.data.baziChart?.shenSha || baziData.value.shenSha,\n          daYun: response.data.data.baziChart?.daYun || baziData.value.daYun,\n        birthDate: response.data.data.baziChart?.birthDate || null,\n        birthTime: response.data.data.baziChart?.birthTime || null,\n        gender: response.data.data.baziChart?.gender || null\n      };\n      \n      // 更新AI分析结果\n      aiAnalysis.value = {\n        health: response.data.data.aiAnalysis?.health || '',\n        wealth: response.data.data.aiAnalysis?.wealth || '',\n        career: response.data.data.aiAnalysis?.career || '',\n        relationship: response.data.data.aiAnalysis?.relationship || '',\n        children: response.data.data.aiAnalysis?.children || '',\n        overall: response.data.data.aiAnalysis?.overall || '',\n        personality: response.data.data.aiAnalysis?.personality || '',\n        education: response.data.data.aiAnalysis?.education || '',\n        parents: response.data.data.aiAnalysis?.parents || '',\n        social: response.data.data.aiAnalysis?.social || '',\n        future: response.data.data.aiAnalysis?.future || ''\n      };\n      \n        // 检查是否存在\"正在分析\"的内容\n        const stillAnalyzing = Object.values(aiAnalysis.value).some(\n          value => typeof value === 'string' && value.includes('正在分析')\n        );\n        \n        // 更新分析状态\n        isAnalyzing.value = stillAnalyzing;\n        \n        if (stillAnalyzing) {\n          console.log('分析仍在进行中...');\n          // 不显示Toast，因为我们已经有进度条显示\n        } else {\n          // 分析完成\n          analyzeProgress.value = 100;\n          setTimeout(() => {\n            isAnalyzing.value = false;\n          }, 1000);\n        }\n    } else {\n      Toast.fail(response.data.message || '加载失败');\n      }\n    } catch (error) {\n      console.error('重新加载失败:', error);\n      Toast.fail('加载失败: ' + (error.message || '未知错误'));\n    }\n  } catch (error) {\n    console.error('重新加载失败:', error);\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\n  }\n};\n\n// 追问相关状态\nconst followupOptions = ref([\n  { id: 'marriage', name: '婚姻感情', selected: false, paid: false },\n  { id: 'career', name: '事业财运', selected: false, paid: false },\n  { id: 'children', name: '子女情况', selected: false, paid: false },\n  { id: 'parents', name: '父母情况', selected: false, paid: false },\n  { id: 'health', name: '身体健康', selected: false, paid: false },\n  { id: 'education', name: '学业', selected: false, paid: false },\n  { id: 'relationship', name: '人际关系', selected: false, paid: false },\n  { id: 'fiveYears', name: '近五年运势', selected: false, paid: false }\n]);\n\nconst currentFollowup = ref(null);\nconst showFollowupDialog = ref(false);\nconst followupAnalysis = ref({});\nconst isLoadingFollowup = ref(false);\n\n// 选择追问选项\nconst selectFollowupOption = (option) => {\n  // 如果已经支付过，直接显示结果\n  if (option.paid) {\n    // 显示已支付的分析结果\n    currentFollowup.value = option;\n    return;\n  }\n  \n  // 否则设置当前选择的追问选项\n  currentFollowup.value = option;\n  showFollowupDialog.value = true;\n};\n\n// 支付追问费用\nconst payForFollowup = async () => {\n  if (!currentFollowup.value) return;\n  \n  try {\n    isLoadingFollowup.value = true;\n    \n    // 第一步：创建订单\n    Toast.loading({\n      message: '正在创建订单...',\n      forbidClick: true,\n      duration: 0\n    });\n    \n    // 获取URL参数\n    const urlParams = new URLSearchParams(window.location.search);\n    \n    // 创建追问订单\n    const orderResponse = await axios.post('/api/order/create/followup', {\n      resultId: resultId.value,\n      area: currentFollowup.value.id\n    });\n    \n    if (orderResponse.data.code === 200) {\n      const followupOrderId = orderResponse.data.data.orderId;\n      console.log('追问订单创建成功:', followupOrderId);\n      \n      // 第二步：处理支付\n      Toast.loading({\n        message: '正在处理支付...',\n        forbidClick: true,\n        duration: 0\n      });\n      \n      // 模拟支付\n      const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\n        birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\n        birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\n        gender: baziData.value?.gender || urlParams.get('gender'),\n        area: currentFollowup.value.id,\n        resultId: resultId.value\n      });\n      \n      if (paymentResponse.data.code === 200) {\n        console.log('追问支付成功:', paymentResponse.data);\n        Toast.success('支付成功');\n        \n        // 第三步：加载分析结果\n        Toast.loading({\n          message: '正在生成分析结果，这可能需要30-60秒...',\n          forbidClick: true,\n          duration: 0\n        });\n        \n        // 获取并保存新的resultId（如果有的话）\n        if (paymentResponse.data.data && paymentResponse.data.data.resultId) {\n          const newResultId = paymentResponse.data.data.resultId;\n          console.log('获取到新的resultId:', newResultId);\n          // 更新全局的resultId变量\n          resultId.value = newResultId;\n          // 还需要更新本地存储中的resultId\n          localStorage.setItem('resultId', newResultId);\n        }\n        \n        // 轮询检查分析结果状态\n        const area = currentFollowup.value.id;\n        let isComplete = false;\n        let attempts = 0;\n        const maxAttempts = 30; // 最多等待60秒（30次 * 2秒）\n        \n        // 自定义轮询检查追问分析状态\n        const pollFollowupStatus = async () => {\n          while (attempts < maxAttempts && !isComplete) {\n            attempts++;\n            try {\n              // 等待2秒\n              await new Promise(resolve => setTimeout(resolve, 2000));\n              \n              // 检查追问分析结果\n              const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n              if (response.data.code === 200 && response.data.data.analysis) {\n                // 检查分析内容是否为\"正在分析\"\n                const analysis = response.data.data.analysis;\n                if (typeof analysis === 'string' && !analysis.includes('正在分析')) {\n                  isComplete = true;\n                  followupAnalysis.value[area] = analysis;\n                  break;\n                }\n              }\n            } catch (error) {\n              console.error('检查追问分析状态出错:', error);\n            }\n          }\n          \n          // 无论是否完成，都获取最终结果\n          await getFollowupAnalysis(area);\n        };\n        \n        // 开始轮询\n        await pollFollowupStatus();\n        \n        // 更新UI\n        Toast.clear();\n        if (isComplete) {\n          Toast.success('分析已完成');\n        } else {\n          Toast.info('分析可能尚未完成，显示部分结果');\n        }\n        \n        // 标记为已支付\n        const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n        if (index !== -1) {\n          followupOptions.value[index].paid = true;\n        }\n        \n        showFollowupDialog.value = false;\n      } else {\n        Toast.fail('支付失败');\n      }\n    } else {\n      Toast.fail('创建订单失败');\n    }\n  } catch (error) {\n    console.error('追问支付过程出错:', error);\n    Toast.fail('处理失败，请重试');\n  } finally {\n    isLoadingFollowup.value = false;\n    Toast.clear();\n  }\n};\n\n// 获取追问分析结果\nconst getFollowupAnalysis = async (area) => {\n  loading.value = true;\n  try {\n    const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n    \n    if (response.data.code === 200) {\n      console.log('获取追问分析成功:', response.data);\n      followupAnalysis.value[area] = response.data.data.analysis;\n      return response.data.data.analysis;\n    } else {\n      console.error('获取追问分析失败:', response.data);\n      return null;\n    }\n  } catch (error) {\n    console.error('获取追问分析出错:', error);\n    return null;\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 检查已支付的追问\nconst checkPaidFollowups = async () => {\n  try {\n    const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n    \n    if (response.data.code === 200 && response.data.data.followups) {\n      const paidFollowups = response.data.data.followups;\n      \n      // 更新已支付的追问选项\n      followupOptions.value = followupOptions.value.map(option => {\n        const isPaid = paidFollowups.some(f => f.area === option.id);\n        if (isPaid) {\n          // 如果已支付，获取分析结果\n          getFollowupAnalysis(option.id);\n        }\n        return { ...option, paid: isPaid };\n      });\n    }\n  } catch (error) {\n    console.error('检查已支付追问出错:', error);\n  }\n};\n\n// 修改getBaziResult函数\nconst getBaziResult = async () => {\n  loading.value = true;\n  try {\n    console.log('获取八字分析结果，ID:', resultId.value);\n    const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n    console.log('八字分析结果:', response.data);\n    \n    if (response.data.code === 200 && response.data.data) {\n      // 更新八字数据，使用深度合并确保数据结构完整\n      if (response.data.data.baziChart) {\n      baziData.value = {\n          yearPillar: response.data.data.baziChart.yearPillar || baziData.value.yearPillar,\n          monthPillar: response.data.data.baziChart.monthPillar || baziData.value.monthPillar,\n          dayPillar: response.data.data.baziChart.dayPillar || baziData.value.dayPillar,\n          hourPillar: response.data.data.baziChart.hourPillar || baziData.value.hourPillar,\n          fiveElements: response.data.data.baziChart.fiveElements || baziData.value.fiveElements,\n          flowingYears: response.data.data.baziChart.flowingYears || [],\n          shenSha: response.data.data.baziChart.shenSha || baziData.value.shenSha,\n          daYun: response.data.data.baziChart.daYun || baziData.value.daYun,\n          birthDate: response.data.data.baziChart.birthDate || null,\n          birthTime: response.data.data.baziChart.birthTime || null,\n          gender: response.data.data.baziChart.gender || null\n        };\n      } else {\n        console.warn('响应中缺少baziChart数据');\n        Toast.fail('数据格式不正确');\n      }\n      \n      // 更新AI分析结果\n      if (response.data.data.aiAnalysis) {\n      aiAnalysis.value = {\n          health: response.data.data.aiAnalysis.health || '',\n          wealth: response.data.data.aiAnalysis.wealth || '',\n          career: response.data.data.aiAnalysis.career || '',\n          relationship: response.data.data.aiAnalysis.relationship || '',\n          children: response.data.data.aiAnalysis.children || '',\n          overall: response.data.data.aiAnalysis.overall || '',\n          personality: response.data.data.aiAnalysis.personality || '',\n          education: response.data.data.aiAnalysis.education || '',\n          parents: response.data.data.aiAnalysis.parents || '',\n          social: response.data.data.aiAnalysis.social || '',\n          future: response.data.data.aiAnalysis.future || ''\n        };\n      }\n      \n      // 初始化追问选项\n      initFollowupOptions();\n      \n      // 加载已支付的追问分析结果\n      await loadFollowupResults();\n      \n      Toast.success('分析结果加载成功');\n    } else {\n      console.error('获取八字分析结果失败:', response.data.message);\n      Toast.fail(response.data.message || '获取分析结果失败');\n    }\n  } catch (error) {\n    console.error('获取八字分析结果出错:', error);\n    Toast.fail('获取分析结果失败，请稍后再试');\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 添加缺失的函数\n// 初始化追问选项\nconst initFollowupOptions = () => {\n  // 根据用户年龄调整追问选项\n  if (userAge.value !== null) {\n    if (userAge.value < 6) {\n      // 为婴幼儿调整选项\n      followupOptions.value = followupOptions.value.filter(option => \n        ['health', 'personality', 'education', 'parents'].includes(option.id)\n      );\n    } else if (userAge.value < 18) {\n      // 为未成年人调整选项\n      followupOptions.value = followupOptions.value.filter(option => \n        !['marriage', 'career'].includes(option.id)\n      );\n    }\n  }\n  \n  console.log('初始化追问选项完成:', followupOptions.value);\n};\n\n// 加载已支付的追问分析结果\nconst loadFollowupResults = async () => {\n  try {\n    // 检查是否有结果ID\n    if (!resultId.value) {\n      console.warn('缺少结果ID，无法加载追问分析');\n      return;\n    }\n    \n    // 调用API获取已支付的追问列表\n    const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n    \n    if (response.data.code === 200 && response.data.data.followups) {\n      const paidFollowups = response.data.data.followups;\n      \n      // 更新已支付的追问选项\n      followupOptions.value = followupOptions.value.map(option => {\n        const isPaid = paidFollowups.some(f => f.area === option.id);\n        if (isPaid) {\n          // 如果已支付，获取分析结果\n          getFollowupAnalysis(option.id);\n        }\n        return { ...option, paid: isPaid };\n      });\n      \n      console.log('已加载追问分析结果:', paidFollowups);\n    }\n  } catch (error) {\n    console.error('加载追问分析结果出错:', error);\n    // 出错时不显示错误提示，静默失败\n  }\n};\n\n// 解析八字数据\nconst parseBaZiData = (data) => {\n  if (!data) return null;\n  \n  return {\n    yearPillar: data.yearPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    monthPillar: data.monthPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    dayPillar: data.dayPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    hourPillar: data.hourPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\n    shenSha: data.shenSha || {\n      dayChong: '未知',\n      zhiShen: '未知',\n      pengZuGan: '未知',\n      pengZuZhi: '未知',\n      xiShen: '未知',\n      fuShen: '未知',\n      caiShen: '未知',\n      benMing: [],\n      yearGan: [],\n      yearZhi: [],\n      dayGan: [],\n      dayZhi: []\n    },\n    daYun: data.daYun || {\n      startAge: 0,\n      startYear: 0,\n      isForward: true,\n      daYunList: []\n    },\n    flowingYears: data.flowingYears || []\n  };\n};\n\n// 添加分析状态检测函数\nconst isAnalysisItemLoading = (key) => {\n  if (!aiAnalysis.value || !aiAnalysis.value[key]) return true;\n  return aiAnalysis.value[key].includes && aiAnalysis.value[key].includes('正在分析');\n};\n\n// 清理组件时移除定时器\nonUnmounted(() => {\n  if (analyzeTimer.value) {\n    clearInterval(analyzeTimer.value);\n    analyzeTimer.value = null;\n  }\n});\n</script>\n\n<style scoped>\n.result-container {\n  padding-bottom: 20px;\n}\n\n.result-header {\n  text-align: center;\n  padding: 20px 0;\n  background-color: #f2f3f5;\n}\n\n.result-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #323233;\n}\n\n.result-header p {\n  margin: 10px 0 0;\n  font-size: 14px;\n  color: #969799;\n}\n\n.bazi-chart {\n  padding: 20px 16px;\n}\n\n.bazi-chart h3 {\n  margin: 20px 0 10px;\n  color: #323233;\n}\n\n.four-pillars {\n  display: flex;\n  justify-content: space-around;\n  margin: 20px 0;\n}\n\n.pillar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #f5f7fa;\n  padding: 10px;\n  border-radius: 8px;\n  width: 80px;\n}\n\n.stem, .branch {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-weight: bold;\n  margin: 4px 0;\n  border-radius: 4px;\n}\n\n.stem {\n  background: #1989fa;\n  color: white;\n}\n\n.branch {\n  background: #07c160;\n  color: white;\n}\n\n.label {\n  font-size: 12px;\n  color: #646566;\n  margin-top: 4px;\n}\n\n.nayin, .shishen, .wangshuai {\n  font-size: 12px;\n  color: #323233;\n  margin-top: 4px;\n}\n\n.five-elements {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n}\n\n.element {\n  text-align: center;\n  flex: 1;\n}\n\n.element-name {\n  font-size: 14px;\n  color: #323233;\n}\n\n.element-value {\n  font-size: 18px;\n  font-weight: bold;\n  color: #1989fa;\n  margin-top: 5px;\n}\n\n.flowing-years {\n  margin: 20px 0;\n}\n\n.ai-analysis {\n  padding: 20px 16px;\n}\n\n.analysis-section {\n  margin-bottom: 20px;\n}\n\n.analysis-section h3 {\n  margin: 0 0 10px;\n  color: #323233;\n}\n\n.analysis-section p {\n  margin: 0;\n  font-size: 14px;\n  color: #646566;\n  line-height: 1.6;\n}\n\n.action-buttons {\n  padding: 20px 16px;\n}\n\n.age-notice {\n  margin-bottom: 20px;\n}\n\n.shen-sha-info {\n  margin-bottom: 20px;\n}\n\n.da-yun-info {\n  margin-bottom: 20px;\n}\n\n.qi-yun-info {\n  margin: 0 0 10px;\n  font-size: 14px;\n  color: #646566;\n}\n\n.da-yun-table {\n  margin-top: 10px;\n}\n\n.placeholder {\n  background-color: #f2f3f5;\n  color: #969799;\n}\n\n/* 追问部分样式 */\n.followup-section {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #fff;\n  border-radius: 8px;\n}\n\n.section-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.section-desc {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 15px;\n}\n\n.followup-options {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 12px;\n}\n\n.followup-option {\n  background-color: #f5f7fa;\n  border-radius: 8px;\n  padding: 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.followup-option:hover {\n  background-color: #e8f0fe;\n}\n\n.followup-option.paid {\n  background-color: #e6f7ff;\n  border: 1px solid #91d5ff;\n}\n\n.option-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.option-name {\n  font-size: 15px;\n  font-weight: 500;\n}\n\n.option-status {\n  font-size: 13px;\n  color: #ff6b00;\n}\n\n.followup-option.paid .option-status {\n  color: #52c41a;\n}\n\n.followup-result {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  border-left: 4px solid #1989fa;\n}\n\n.followup-result h3 {\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.analysis-content {\n  font-size: 14px;\n  line-height: 1.6;\n  color: #333;\n  white-space: pre-wrap;\n}\n\n.followup-dialog-content {\n  padding: 15px;\n  text-align: center;\n}\n\n/* 添加表格样式 */\n.custom-table {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  margin: 10px 0;\n  background-color: #fff;\n  color: #323233;\n  font-size: 14px;\n}\n\n.custom-table th,\n.custom-table td {\n  padding: 8px 12px;\n  border-bottom: 1px solid #ebedf0;\n  text-align: center;\n}\n\n.custom-table th {\n  font-weight: 500;\n  background-color: #f7f8fa;\n  color: #646566;\n}\n\n.custom-table tr:hover {\n  background-color: #f2f3f5;\n}\n\n/* 添加分析状态相关样式 */\n.analysis-progress-notice {\n  margin: 10px 16px;\n  border-radius: 8px;\n}\n\n.analysis-progress {\n  width: 100%;\n}\n\n.analysis-progress p {\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: #1989fa;\n}\n\n.loading-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px 0;\n  background-color: #f7f8fa;\n  border-radius: 8px;\n  margin: 10px 0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}