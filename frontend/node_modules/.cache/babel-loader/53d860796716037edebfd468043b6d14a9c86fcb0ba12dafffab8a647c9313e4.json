{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect } from \"vue\";\nimport _imports_0 from './assets/banner.png';\nconst _hoisted_1 = {\n  class: \"home-container\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  style: {\n    \"margin\": \"16px\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"intro-section\"\n};\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nexport default {\n  __name: 'Home',\n  setup(__props) {\n    const router = useRouter();\n\n    // 重新定义时辰数据为正确的格式\n    const timeData = [{\n      text: '子时 (23:00-01:00)'\n    }, {\n      text: '丑时 (01:00-03:00)'\n    }, {\n      text: '寅时 (03:00-05:00)'\n    }, {\n      text: '卯时 (05:00-07:00)'\n    }, {\n      text: '辰时 (07:00-09:00)'\n    }, {\n      text: '巳时 (09:00-11:00)'\n    }, {\n      text: '午时 (11:00-13:00)'\n    }, {\n      text: '未时 (13:00-15:00)'\n    }, {\n      text: '申时 (15:00-17:00)'\n    }, {\n      text: '酉时 (17:00-19:00)'\n    }, {\n      text: '戌时 (19:00-21:00)'\n    }, {\n      text: '亥时 (21:00-23:00)'\n    }];\n    const formData = reactive({\n      gender: 'male',\n      calendarType: 'solar',\n      birthDate: '',\n      birthTime: '',\n      birthPlace: '',\n      livingPlace: '',\n      focusAreas: []\n    });\n    const onSubmit = () => {\n      // 表单验证\n      if (!formData.birthDate) {\n        Toast.fail('请选择出生日期');\n        return;\n      }\n      if (!formData.birthTime) {\n        Toast.fail('请选择出生时辰');\n        return;\n      }\n      if (!formData.birthPlace) {\n        Toast.fail('请填写出生地');\n        return;\n      }\n      if (!formData.livingPlace) {\n        Toast.fail('请填写居住地');\n        return;\n      }\n      if (formData.focusAreas.length === 0) {\n        Toast.fail('请至少选择一个推算侧重点');\n        return;\n      }\n\n      // 创建订单并跳转到支付页面\n      console.log('提交数据:', formData);\n      router.push({\n        path: '/payment',\n        query: {\n          gender: formData.gender,\n          calendarType: formData.calendarType,\n          birthDate: formData.birthDate,\n          birthTime: formData.birthTime,\n          birthPlace: formData.birthPlace,\n          livingPlace: formData.livingPlace,\n          focusAreas: formData.focusAreas.join(',')\n        }\n      });\n    };\n    return (_ctx, _cache) => {\n      const _component_van_nav_bar = _resolveComponent(\"van-nav-bar\");\n      const _component_van_radio = _resolveComponent(\"van-radio\");\n      const _component_van_radio_group = _resolveComponent(\"van-radio-group\");\n      const _component_van_field = _resolveComponent(\"van-field\");\n      const _component_van_checkbox = _resolveComponent(\"van-checkbox\");\n      const _component_van_checkbox_group = _resolveComponent(\"van-checkbox-group\");\n      const _component_van_cell_group = _resolveComponent(\"van-cell-group\");\n      const _component_van_button = _resolveComponent(\"van-button\");\n      const _component_van_form = _resolveComponent(\"van-form\");\n      const _component_van_step = _resolveComponent(\"van-step\");\n      const _component_van_steps = _resolveComponent(\"van-steps\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_van_nav_bar, {\n        title: \"八字命理AI人生指导\"\n      }), _cache[25] || (_cache[25] = _createElementVNode(\"div\", {\n        class: \"banner\"\n      }, [_createElementVNode(\"img\", {\n        src: _imports_0,\n        alt: \"八字命理AI人生指导\",\n        class: \"banner-img\"\n      }), _createElementVNode(\"h2\", {\n        class: \"slogan\"\n      }, \"传统命理 · 现代科技 · 智慧人生\")], -1)), _createVNode(_component_van_form, {\n        onSubmit: onSubmit\n      }, {\n        default: _withCtx(() => [_createVNode(_component_van_cell_group, {\n          inset: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_van_field, {\n            name: \"gender\",\n            label: \"性别\"\n          }, {\n            input: _withCtx(() => [_createVNode(_component_van_radio_group, {\n              modelValue: formData.gender,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => formData.gender = $event),\n              direction: \"horizontal\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_van_radio, {\n                name: \"male\"\n              }, {\n                default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"男\")])),\n                _: 1,\n                __: [7]\n              }), _createVNode(_component_van_radio, {\n                name: \"female\"\n              }, {\n                default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"女\")])),\n                _: 1,\n                __: [8]\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_van_field, {\n            name: \"calendarType\",\n            label: \"历法选择\"\n          }, {\n            input: _withCtx(() => [_createVNode(_component_van_radio_group, {\n              modelValue: formData.calendarType,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => formData.calendarType = $event),\n              direction: \"horizontal\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_van_radio, {\n                name: \"solar\"\n              }, {\n                default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"公历\")])),\n                _: 1,\n                __: [9]\n              }), _createVNode(_component_van_radio, {\n                name: \"lunar\"\n              }, {\n                default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"农历\")])),\n                _: 1,\n                __: [10]\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          }), _createVNode(_component_van_field, {\n            name: \"birthDate\",\n            label: \"出生日期\"\n          }, {\n            input: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n              type: \"date\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => formData.birthDate = $event),\n              min: \"1900-01-01\",\n              max: \"2100-12-31\",\n              class: \"native-date-picker\"\n            }, null, 512), [[_vModelText, formData.birthDate]])]),\n            _: 1\n          }), _createVNode(_component_van_field, {\n            name: \"birthTime\",\n            label: \"出生时辰\"\n          }, {\n            input: _withCtx(() => [_withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => formData.birthTime = $event),\n              class: \"native-time-picker\"\n            }, [_cache[11] || (_cache[11] = _createElementVNode(\"option\", {\n              value: \"\"\n            }, \"请选择时辰\", -1)), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(timeData, (time, index) => {\n              return _createElementVNode(\"option\", {\n                key: index,\n                value: time.text\n              }, _toDisplayString(time.text), 9, _hoisted_2);\n            }), 64))], 512), [[_vModelSelect, formData.birthTime]])]),\n            _: 1\n          }), _createVNode(_component_van_field, {\n            modelValue: formData.birthPlace,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => formData.birthPlace = $event),\n            name: \"birthPlace\",\n            label: \"出生地\",\n            placeholder: \"请输入出生地（如：北京市海淀区）\",\n            rules: [{\n              required: true,\n              message: '请填写出生地'\n            }]\n          }, null, 8, [\"modelValue\"]), _createVNode(_component_van_field, {\n            modelValue: formData.livingPlace,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => formData.livingPlace = $event),\n            name: \"livingPlace\",\n            label: \"居住地\",\n            placeholder: \"请输入当前居住地（如：上海市浦东新区）\",\n            rules: [{\n              required: true,\n              message: '请填写居住地'\n            }]\n          }, null, 8, [\"modelValue\"]), _createVNode(_component_van_field, {\n            name: \"focusAreas\",\n            label: \"推算侧重点\"\n          }, {\n            input: _withCtx(() => [_createVNode(_component_van_checkbox_group, {\n              modelValue: formData.focusAreas,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => formData.focusAreas = $event),\n              direction: \"horizontal\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_van_checkbox, {\n                name: \"health\"\n              }, {\n                default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"身体健康\")])),\n                _: 1,\n                __: [12]\n              }), _createVNode(_component_van_checkbox, {\n                name: \"wealth\"\n              }, {\n                default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"财运\")])),\n                _: 1,\n                __: [13]\n              }), _createVNode(_component_van_checkbox, {\n                name: \"career\"\n              }, {\n                default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"事业\")])),\n                _: 1,\n                __: [14]\n              }), _createVNode(_component_van_checkbox, {\n                name: \"relationship\"\n              }, {\n                default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"婚姻感情\")])),\n                _: 1,\n                __: [15]\n              }), _createVNode(_component_van_checkbox, {\n                name: \"children\"\n              }, {\n                default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"子女\")])),\n                _: 1,\n                __: [16]\n              })]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_van_button, {\n          round: \"\",\n          block: \"\",\n          type: \"primary\",\n          \"native-type\": \"submit\"\n        }, {\n          default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\" 提交并支付 (9.9元) \")])),\n          _: 1,\n          __: [17]\n        })])]),\n        _: 1\n      }), _createElementVNode(\"div\", _hoisted_4, [_cache[22] || (_cache[22] = _createElementVNode(\"h3\", null, \"八字命理AI人生指导系统\", -1)), _cache[23] || (_cache[23] = _createElementVNode(\"p\", null, \"本系统结合传统八字命理理论与现代人工智能技术，为您提供个性化的人生指导建议。通过分析您的八字命盘和流年大运信息，AI将为您解读人生各方面的发展趋势和潜在机遇。\", -1)), _cache[24] || (_cache[24] = _createElementVNode(\"h3\", null, \"使用流程\", -1)), _createVNode(_component_van_steps, {\n        direction: \"vertical\",\n        active: 0\n      }, {\n        default: _withCtx(() => [_createVNode(_component_van_step, null, {\n          default: _withCtx(() => _cache[18] || (_cache[18] = [_createElementVNode(\"h3\", null, \"填写信息\", -1), _createElementVNode(\"p\", null, \"输入性别、出生年月日时、出生地、居住地和关注领域\", -1)])),\n          _: 1,\n          __: [18]\n        }), _createVNode(_component_van_step, null, {\n          default: _withCtx(() => _cache[19] || (_cache[19] = [_createElementVNode(\"h3\", null, \"完成支付\", -1), _createElementVNode(\"p\", null, \"支付9.9元获取专业分析\", -1)])),\n          _: 1,\n          __: [19]\n        }), _createVNode(_component_van_step, null, {\n          default: _withCtx(() => _cache[20] || (_cache[20] = [_createElementVNode(\"h3\", null, \"AI分析\", -1), _createElementVNode(\"p\", null, \"系统计算八字并通过AI进行解读\", -1)])),\n          _: 1,\n          __: [20]\n        }), _createVNode(_component_van_step, null, {\n          default: _withCtx(() => _cache[21] || (_cache[21] = [_createElementVNode(\"h3\", null, \"查看结果\", -1), _createElementVNode(\"p\", null, \"获取详细分析报告并可下载PDF\", -1)])),\n          _: 1,\n          __: [21]\n        })]),\n        _: 1\n      })])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","Toast","Dialog","router","timeData","text","formData","gender","calendarType","birthDate","birthTime","birthPlace","livingPlace","focusAreas","onSubmit","fail","length","console","log","push","path","query","join"],"sources":["D:/Python/20250603开发八字命理AI指导功能页码/开发八字命理AI指导功能页码/frontend/src/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <van-nav-bar title=\"八字命理AI人生指导\" />\n    \n    <div class=\"banner\">\n      <img src=\"./assets/banner.png\" alt=\"八字命理AI人生指导\" class=\"banner-img\">\n      <h2 class=\"slogan\">传统命理 · 现代科技 · 智慧人生</h2>\n    </div>\n    \n    <van-form @submit=\"onSubmit\">\n      <van-cell-group inset>\n        <van-field name=\"gender\" label=\"性别\">\n          <template #input>\n            <van-radio-group v-model=\"formData.gender\" direction=\"horizontal\">\n              <van-radio name=\"male\">男</van-radio>\n              <van-radio name=\"female\">女</van-radio>\n            </van-radio-group>\n          </template>\n        </van-field>\n        \n        <van-field name=\"calendarType\" label=\"历法选择\">\n          <template #input>\n            <van-radio-group v-model=\"formData.calendarType\" direction=\"horizontal\">\n              <van-radio name=\"solar\">公历</van-radio>\n              <van-radio name=\"lunar\">农历</van-radio>\n            </van-radio-group>\n          </template>\n        </van-field>\n        \n        <van-field name=\"birthDate\" label=\"出生日期\">\n          <template #input>\n            <input \n              type=\"date\" \n          v-model=\"formData.birthDate\"\n              min=\"1900-01-01\" \n              max=\"2100-12-31\"\n              class=\"native-date-picker\"\n          />\n          </template>\n        </van-field>\n        \n        <van-field name=\"birthTime\" label=\"出生时辰\">\n          <template #input>\n            <select v-model=\"formData.birthTime\" class=\"native-time-picker\">\n              <option value=\"\">请选择时辰</option>\n              <option \n                v-for=\"(time, index) in timeData\"\n                :key=\"index\"\n                :value=\"time.text\"\n              >\n                {{ time.text }}\n              </option>\n            </select>\n          </template>\n        </van-field>\n        \n        <van-field \n          v-model=\"formData.birthPlace\" \n          name=\"birthPlace\" \n          label=\"出生地\" \n          placeholder=\"请输入出生地（如：北京市海淀区）\"\n          :rules=\"[{ required: true, message: '请填写出生地' }]\"\n        />\n        \n        <van-field \n          v-model=\"formData.livingPlace\" \n          name=\"livingPlace\" \n          label=\"居住地\" \n          placeholder=\"请输入当前居住地（如：上海市浦东新区）\"\n          :rules=\"[{ required: true, message: '请填写居住地' }]\"\n        />\n        \n        <van-field name=\"focusAreas\" label=\"推算侧重点\">\n          <template #input>\n            <van-checkbox-group v-model=\"formData.focusAreas\" direction=\"horizontal\">\n              <van-checkbox name=\"health\">身体健康</van-checkbox>\n              <van-checkbox name=\"wealth\">财运</van-checkbox>\n              <van-checkbox name=\"career\">事业</van-checkbox>\n              <van-checkbox name=\"relationship\">婚姻感情</van-checkbox>\n              <van-checkbox name=\"children\">子女</van-checkbox>\n            </van-checkbox-group>\n          </template>\n        </van-field>\n      </van-cell-group>\n      \n      <div style=\"margin: 16px;\">\n        <van-button round block type=\"primary\" native-type=\"submit\">\n          提交并支付 (9.9元)\n        </van-button>\n      </div>\n    </van-form>\n    \n    <div class=\"intro-section\">\n      <h3>八字命理AI人生指导系统</h3>\n      <p>本系统结合传统八字命理理论与现代人工智能技术，为您提供个性化的人生指导建议。通过分析您的八字命盘和流年大运信息，AI将为您解读人生各方面的发展趋势和潜在机遇。</p>\n      \n      <h3>使用流程</h3>\n      <van-steps direction=\"vertical\" :active=\"0\">\n        <van-step>\n          <h3>填写信息</h3>\n          <p>输入性别、出生年月日时、出生地、居住地和关注领域</p>\n        </van-step>\n        <van-step>\n          <h3>完成支付</h3>\n          <p>支付9.9元获取专业分析</p>\n        </van-step>\n        <van-step>\n          <h3>AI分析</h3>\n          <p>系统计算八字并通过AI进行解读</p>\n        </van-step>\n        <van-step>\n          <h3>查看结果</h3>\n          <p>获取详细分析报告并可下载PDF</p>\n        </van-step>\n      </van-steps>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\n\nconst router = useRouter();\n\n// 重新定义时辰数据为正确的格式\nconst timeData = [\n  { text: '子时 (23:00-01:00)' },\n  { text: '丑时 (01:00-03:00)' },\n  { text: '寅时 (03:00-05:00)' },\n  { text: '卯时 (05:00-07:00)' },\n  { text: '辰时 (07:00-09:00)' },\n  { text: '巳时 (09:00-11:00)' },\n  { text: '午时 (11:00-13:00)' },\n  { text: '未时 (13:00-15:00)' },\n  { text: '申时 (15:00-17:00)' },\n  { text: '酉时 (17:00-19:00)' },\n  { text: '戌时 (19:00-21:00)' },\n  { text: '亥时 (21:00-23:00)' }\n];\n\nconst formData = reactive({\n  gender: 'male',\n  calendarType: 'solar',\n  birthDate: '',\n  birthTime: '',\n  birthPlace: '',\n  livingPlace: '',\n  focusAreas: []\n});\n\nconst onSubmit = () => {\n  // 表单验证\n  if (!formData.birthDate) {\n    Toast.fail('请选择出生日期');\n    return;\n  }\n  \n  if (!formData.birthTime) {\n    Toast.fail('请选择出生时辰');\n    return;\n  }\n  \n  if (!formData.birthPlace) {\n    Toast.fail('请填写出生地');\n    return;\n  }\n  \n  if (!formData.livingPlace) {\n    Toast.fail('请填写居住地');\n    return;\n  }\n  \n  if (formData.focusAreas.length === 0) {\n    Toast.fail('请至少选择一个推算侧重点');\n    return;\n  }\n  \n  // 创建订单并跳转到支付页面\n  console.log('提交数据:', formData);\n  router.push({\n    path: '/payment',\n    query: {\n      gender: formData.gender,\n      calendarType: formData.calendarType,\n      birthDate: formData.birthDate,\n      birthTime: formData.birthTime,\n      birthPlace: formData.birthPlace,\n      livingPlace: formData.livingPlace,\n      focusAreas: formData.focusAreas.join(',')\n    }\n  });\n};\n</script>\n\n<style>\n.home-container {\n  padding-bottom: 20px;\n}\n\n.banner {\n  text-align: center;\n  padding: 20px 15px;\n  background-color: #f7f8fa;\n}\n\n.banner-img {\n  width: 100%;\n  max-width: 300px;\n  border-radius: 8px;\n}\n\n.slogan {\n  margin-top: 10px;\n  font-size: 16px;\n  color: #666;\n}\n\n.intro-section {\n  padding: 20px 16px;\n  background-color: #fff;\n  margin-top: 20px;\n}\n\n.intro-section h3 {\n  margin-bottom: 10px;\n  font-size: 18px;\n  color: #323233;\n}\n\n.intro-section p {\n  color: #666;\n  font-size: 14px;\n  line-height: 1.6;\n  margin-bottom: 20px;\n}\n\n.time-selector {\n  background-color: #fff;\n  width: 100%;\n}\n\n.time-selector-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 16px;\n  border-bottom: 1px solid #ebedf0;\n}\n\n.time-selector-title {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.time-selector-content {\n  max-height: 60vh;\n  overflow-y: auto;\n}\n\n.time-active {\n  color: #1989fa;\n  font-weight: bold;\n}\n\n.date-selector {\n  background-color: #fff;\n  width: 100%;\n}\n\n.date-selector-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 16px;\n  border-bottom: 1px solid #ebedf0;\n}\n\n.date-selector-title {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.date-selector-content {\n  padding: 10px;\n}\n\n.native-date-picker {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ebedf0;\n  border-radius: 4px;\n}\n\n.native-time-picker {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ebedf0;\n  border-radius: 4px;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AAwHA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,KAAK,EAAEC,MAAM,QAAQ,MAAM;;;;IAEpC,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMI,QAAQ,GAAG,CACf;MAAEC,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,CAAC,EAC5B;MAAEA,IAAI,EAAE;IAAmB,EAC5B;IAED,MAAMC,QAAQ,GAAGP,QAAQ,CAAC;MACxBQ,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,OAAO;MACrBC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrB;MACA,IAAI,CAACR,QAAQ,CAACG,SAAS,EAAE;QACvBR,KAAK,CAACc,IAAI,CAAC,SAAS,CAAC;QACrB;MACF;MAEA,IAAI,CAACT,QAAQ,CAACI,SAAS,EAAE;QACvBT,KAAK,CAACc,IAAI,CAAC,SAAS,CAAC;QACrB;MACF;MAEA,IAAI,CAACT,QAAQ,CAACK,UAAU,EAAE;QACxBV,KAAK,CAACc,IAAI,CAAC,QAAQ,CAAC;QACpB;MACF;MAEA,IAAI,CAACT,QAAQ,CAACM,WAAW,EAAE;QACzBX,KAAK,CAACc,IAAI,CAAC,QAAQ,CAAC;QACpB;MACF;MAEA,IAAIT,QAAQ,CAACO,UAAU,CAACG,MAAM,KAAK,CAAC,EAAE;QACpCf,KAAK,CAACc,IAAI,CAAC,cAAc,CAAC;QAC1B;MACF;;MAEA;MACAE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEZ,QAAQ,CAAC;MAC9BH,MAAM,CAACgB,IAAI,CAAC;QACVC,IAAI,EAAE,UAAU;QAChBC,KAAK,EAAE;UACLd,MAAM,EAAED,QAAQ,CAACC,MAAM;UACvBC,YAAY,EAAEF,QAAQ,CAACE,YAAY;UACnCC,SAAS,EAAEH,QAAQ,CAACG,SAAS;UAC7BC,SAAS,EAAEJ,QAAQ,CAACI,SAAS;UAC7BC,UAAU,EAAEL,QAAQ,CAACK,UAAU;UAC/BC,WAAW,EAAEN,QAAQ,CAACM,WAAW;UACjCC,UAAU,EAAEP,QAAQ,CAACO,UAAU,CAACS,IAAI,CAAC,GAAG;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}