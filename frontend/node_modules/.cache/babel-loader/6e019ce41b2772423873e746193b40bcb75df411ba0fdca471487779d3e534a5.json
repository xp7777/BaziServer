{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, nextTick, onMounted, defineComponent } from \"vue\";\nimport { pick, clamp, extend, padZero, createNamespace, makeNumericProp } from \"../utils\";\nimport { times, sharedProps, pickerInheritKeys, proxyPickerMethods } from \"./utils\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Picker } from \"../picker\";\nconst [name] = createNamespace(\"time-picker\");\nvar stdin_default = defineComponent({\n  name,\n  props: extend({}, sharedProps, {\n    minHour: makeNumericProp(0),\n    maxHour: makeNumericProp(23),\n    minMinute: makeNumericProp(0),\n    maxMinute: makeNumericProp(59),\n    modelValue: String\n  }),\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const formatValue = value => {\n      const {\n        minHour,\n        maxHour,\n        maxMinute,\n        minMinute\n      } = props;\n      if (!value) {\n        value = `${padZero(minHour)}:${padZero(minMinute)}`;\n      }\n      let [hour, minute] = value.split(\":\");\n      hour = padZero(clamp(+hour, +minHour, +maxHour));\n      minute = padZero(clamp(+minute, +minMinute, +maxMinute));\n      return `${hour}:${minute}`;\n    };\n    const picker = ref();\n    const currentDate = ref(formatValue(props.modelValue));\n    const ranges = computed(() => [{\n      type: \"hour\",\n      range: [+props.minHour, +props.maxHour]\n    }, {\n      type: \"minute\",\n      range: [+props.minMinute, +props.maxMinute]\n    }]);\n    const originColumns = computed(() => ranges.value.map(({\n      type,\n      range: rangeArr\n    }) => {\n      let values = times(rangeArr[1] - rangeArr[0] + 1, index => padZero(rangeArr[0] + index));\n      if (props.filter) {\n        values = props.filter(type, values);\n      }\n      return {\n        type,\n        values\n      };\n    }));\n    const columns = computed(() => originColumns.value.map(column => ({\n      values: column.values.map(value => props.formatter(column.type, value))\n    })));\n    const updateColumnValue = () => {\n      const pair = currentDate.value.split(\":\");\n      const values = [props.formatter(\"hour\", pair[0]), props.formatter(\"minute\", pair[1])];\n      nextTick(() => {\n        var _a;\n        (_a = picker.value) == null ? void 0 : _a.setValues(values);\n      });\n    };\n    const updateInnerValue = () => {\n      const [hourIndex, minuteIndex] = picker.value.getIndexes();\n      const [hourColumn, minuteColumn] = originColumns.value;\n      const hour = hourColumn.values[hourIndex] || hourColumn.values[0];\n      const minute = minuteColumn.values[minuteIndex] || minuteColumn.values[0];\n      currentDate.value = formatValue(`${hour}:${minute}`);\n      updateColumnValue();\n    };\n    const onConfirm = () => emit(\"confirm\", currentDate.value);\n    const onCancel = () => emit(\"cancel\");\n    const onChange = () => {\n      updateInnerValue();\n      nextTick(() => {\n        nextTick(() => emit(\"change\", currentDate.value));\n      });\n    };\n    onMounted(() => {\n      updateColumnValue();\n      nextTick(updateInnerValue);\n    });\n    watch(columns, updateColumnValue);\n    watch(() => [props.filter, props.maxHour, props.minMinute, props.maxMinute], updateInnerValue);\n    watch(() => props.minHour, () => {\n      nextTick(updateInnerValue);\n    });\n    watch(currentDate, value => emit(\"update:modelValue\", value));\n    watch(() => props.modelValue, value => {\n      value = formatValue(value);\n      if (value !== currentDate.value) {\n        currentDate.value = value;\n        updateColumnValue();\n      }\n    });\n    useExpose({\n      getPicker: () => picker.value && proxyPickerMethods(picker.value, updateInnerValue)\n    });\n    return () => _createVNode(Picker, _mergeProps({\n      \"ref\": picker,\n      \"columns\": columns.value,\n      \"onChange\": onChange,\n      \"onCancel\": onCancel,\n      \"onConfirm\": onConfirm\n    }, pick(props, pickerInheritKeys)), slots);\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","ref","watch","computed","nextTick","onMounted","defineComponent","pick","clamp","extend","padZero","createNamespace","makeNumericProp","times","sharedProps","pickerInheritKeys","proxyPickerMethods","useExpose","Picker","name","stdin_default","props","minHour","maxHour","minMinute","maxMinute","modelValue","String","emits","setup","emit","slots","formatValue","value","hour","minute","split","picker","currentDate","ranges","type","range","originColumns","map","rangeArr","values","index","filter","columns","column","formatter","updateColumnValue","pair","_a","setValues","updateInnerValue","hourIndex","minuteIndex","getIndexes","hourColumn","minuteColumn","onConfirm","onCancel","onChange","getPicker","default"],"sources":["C:/Users/Administrator/Desktop/开发八字命理AI指导功能页码/frontend/node_modules/vant/es/datetime-picker/TimePicker.js"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, nextTick, onMounted, defineComponent } from \"vue\";\nimport { pick, clamp, extend, padZero, createNamespace, makeNumericProp } from \"../utils\";\nimport { times, sharedProps, pickerInheritKeys, proxyPickerMethods } from \"./utils\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Picker } from \"../picker\";\nconst [name] = createNamespace(\"time-picker\");\nvar stdin_default = defineComponent({\n  name,\n  props: extend({}, sharedProps, {\n    minHour: makeNumericProp(0),\n    maxHour: makeNumericProp(23),\n    minMinute: makeNumericProp(0),\n    maxMinute: makeNumericProp(59),\n    modelValue: String\n  }),\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const formatValue = (value) => {\n      const {\n        minHour,\n        maxHour,\n        maxMinute,\n        minMinute\n      } = props;\n      if (!value) {\n        value = `${padZero(minHour)}:${padZero(minMinute)}`;\n      }\n      let [hour, minute] = value.split(\":\");\n      hour = padZero(clamp(+hour, +minHour, +maxHour));\n      minute = padZero(clamp(+minute, +minMinute, +maxMinute));\n      return `${hour}:${minute}`;\n    };\n    const picker = ref();\n    const currentDate = ref(formatValue(props.modelValue));\n    const ranges = computed(() => [{\n      type: \"hour\",\n      range: [+props.minHour, +props.maxHour]\n    }, {\n      type: \"minute\",\n      range: [+props.minMinute, +props.maxMinute]\n    }]);\n    const originColumns = computed(() => ranges.value.map(({\n      type,\n      range: rangeArr\n    }) => {\n      let values = times(rangeArr[1] - rangeArr[0] + 1, (index) => padZero(rangeArr[0] + index));\n      if (props.filter) {\n        values = props.filter(type, values);\n      }\n      return {\n        type,\n        values\n      };\n    }));\n    const columns = computed(() => originColumns.value.map((column) => ({\n      values: column.values.map((value) => props.formatter(column.type, value))\n    })));\n    const updateColumnValue = () => {\n      const pair = currentDate.value.split(\":\");\n      const values = [props.formatter(\"hour\", pair[0]), props.formatter(\"minute\", pair[1])];\n      nextTick(() => {\n        var _a;\n        (_a = picker.value) == null ? void 0 : _a.setValues(values);\n      });\n    };\n    const updateInnerValue = () => {\n      const [hourIndex, minuteIndex] = picker.value.getIndexes();\n      const [hourColumn, minuteColumn] = originColumns.value;\n      const hour = hourColumn.values[hourIndex] || hourColumn.values[0];\n      const minute = minuteColumn.values[minuteIndex] || minuteColumn.values[0];\n      currentDate.value = formatValue(`${hour}:${minute}`);\n      updateColumnValue();\n    };\n    const onConfirm = () => emit(\"confirm\", currentDate.value);\n    const onCancel = () => emit(\"cancel\");\n    const onChange = () => {\n      updateInnerValue();\n      nextTick(() => {\n        nextTick(() => emit(\"change\", currentDate.value));\n      });\n    };\n    onMounted(() => {\n      updateColumnValue();\n      nextTick(updateInnerValue);\n    });\n    watch(columns, updateColumnValue);\n    watch(() => [props.filter, props.maxHour, props.minMinute, props.maxMinute], updateInnerValue);\n    watch(() => props.minHour, () => {\n      nextTick(updateInnerValue);\n    });\n    watch(currentDate, (value) => emit(\"update:modelValue\", value));\n    watch(() => props.modelValue, (value) => {\n      value = formatValue(value);\n      if (value !== currentDate.value) {\n        currentDate.value = value;\n        updateColumnValue();\n      }\n    });\n    useExpose({\n      getPicker: () => picker.value && proxyPickerMethods(picker.value, updateInnerValue)\n    });\n    return () => _createVNode(Picker, _mergeProps({\n      \"ref\": picker,\n      \"columns\": columns.value,\n      \"onChange\": onChange,\n      \"onCancel\": onCancel,\n      \"onConfirm\": onConfirm\n    }, pick(props, pickerInheritKeys)), slots);\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}