{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, computed, onMounted, onActivated, onDeactivated, onBeforeUnmount, defineComponent, nextTick } from \"vue\";\nimport { clamp, isHidden, truthProp, numericProp, windowWidth, windowHeight, preventDefault, createNamespace, makeNumericProp } from \"../utils\";\nimport { doubleRaf, useChildren, usePageVisibility } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { onPopupReopen } from \"../composables/on-popup-reopen\";\nconst [name, bem] = createNamespace(\"swipe\");\nconst swipeProps = {\n  loop: truthProp,\n  width: numericProp,\n  height: numericProp,\n  vertical: Boolean,\n  autoplay: makeNumericProp(0),\n  duration: makeNumericProp(500),\n  touchable: truthProp,\n  lazyRender: Boolean,\n  initialSwipe: makeNumericProp(0),\n  indicatorColor: String,\n  showIndicators: truthProp,\n  stopPropagation: truthProp\n};\nconst SWIPE_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: swipeProps,\n  emits: [\"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const state = reactive({\n      rect: null,\n      width: 0,\n      height: 0,\n      offset: 0,\n      active: 0,\n      swiping: false\n    });\n    const touch = useTouch();\n    const {\n      children,\n      linkChildren\n    } = useChildren(SWIPE_KEY);\n    const count = computed(() => children.length);\n    const size = computed(() => state[props.vertical ? \"height\" : \"width\"]);\n    const delta = computed(() => props.vertical ? touch.deltaY.value : touch.deltaX.value);\n    const minOffset = computed(() => {\n      if (state.rect) {\n        const base = props.vertical ? state.rect.height : state.rect.width;\n        return base - size.value * count.value;\n      }\n      return 0;\n    });\n    const maxCount = computed(() => Math.ceil(Math.abs(minOffset.value) / size.value));\n    const trackSize = computed(() => count.value * size.value);\n    const activeIndicator = computed(() => (state.active + count.value) % count.value);\n    const isCorrectDirection = computed(() => {\n      const expect = props.vertical ? \"vertical\" : \"horizontal\";\n      return touch.direction.value === expect;\n    });\n    const trackStyle = computed(() => {\n      const style = {\n        transitionDuration: `${state.swiping ? 0 : props.duration}ms`,\n        transform: `translate${props.vertical ? \"Y\" : \"X\"}(${state.offset}px)`\n      };\n      if (size.value) {\n        const mainAxis = props.vertical ? \"height\" : \"width\";\n        const crossAxis = props.vertical ? \"width\" : \"height\";\n        style[mainAxis] = `${trackSize.value}px`;\n        style[crossAxis] = props[crossAxis] ? `${props[crossAxis]}px` : \"\";\n      }\n      return style;\n    });\n    const getTargetActive = pace => {\n      const {\n        active\n      } = state;\n      if (pace) {\n        if (props.loop) {\n          return clamp(active + pace, -1, count.value);\n        }\n        return clamp(active + pace, 0, maxCount.value);\n      }\n      return active;\n    };\n    const getTargetOffset = (targetActive, offset = 0) => {\n      let currentPosition = targetActive * size.value;\n      if (!props.loop) {\n        currentPosition = Math.min(currentPosition, -minOffset.value);\n      }\n      let targetOffset = offset - currentPosition;\n      if (!props.loop) {\n        targetOffset = clamp(targetOffset, minOffset.value, 0);\n      }\n      return targetOffset;\n    };\n    const move = ({\n      pace = 0,\n      offset = 0,\n      emitChange\n    }) => {\n      if (count.value <= 1) {\n        return;\n      }\n      const {\n        active\n      } = state;\n      const targetActive = getTargetActive(pace);\n      const targetOffset = getTargetOffset(targetActive, offset);\n      if (props.loop) {\n        if (children[0] && targetOffset !== minOffset.value) {\n          const outRightBound = targetOffset < minOffset.value;\n          children[0].setOffset(outRightBound ? trackSize.value : 0);\n        }\n        if (children[count.value - 1] && targetOffset !== 0) {\n          const outLeftBound = targetOffset > 0;\n          children[count.value - 1].setOffset(outLeftBound ? -trackSize.value : 0);\n        }\n      }\n      state.active = targetActive;\n      state.offset = targetOffset;\n      if (emitChange && targetActive !== active) {\n        emit(\"change\", activeIndicator.value);\n      }\n    };\n    const correctPosition = () => {\n      state.swiping = true;\n      if (state.active <= -1) {\n        move({\n          pace: count.value\n        });\n      } else if (state.active >= count.value) {\n        move({\n          pace: -count.value\n        });\n      }\n    };\n    const prev = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: -1,\n          emitChange: true\n        });\n      });\n    };\n    const next = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: 1,\n          emitChange: true\n        });\n      });\n    };\n    let autoplayTimer;\n    const stopAutoplay = () => clearTimeout(autoplayTimer);\n    const autoplay = () => {\n      stopAutoplay();\n      if (props.autoplay > 0 && count.value > 1) {\n        autoplayTimer = setTimeout(() => {\n          next();\n          autoplay();\n        }, +props.autoplay);\n      }\n    };\n    const initialize = (active = +props.initialSwipe) => {\n      if (!root.value) {\n        return;\n      }\n      const cb = () => {\n        var _a, _b;\n        if (!isHidden(root)) {\n          const rect = {\n            width: root.value.offsetWidth,\n            height: root.value.offsetHeight\n          };\n          state.rect = rect;\n          state.width = +((_a = props.width) != null ? _a : rect.width);\n          state.height = +((_b = props.height) != null ? _b : rect.height);\n        }\n        if (count.value) {\n          active = Math.min(count.value - 1, active);\n        }\n        state.active = active;\n        state.swiping = true;\n        state.offset = getTargetOffset(active);\n        children.forEach(swipe => {\n          swipe.setOffset(0);\n        });\n        autoplay();\n      };\n      if (isHidden(root)) {\n        nextTick().then(cb);\n      } else {\n        cb();\n      }\n    };\n    const resize = () => initialize(state.active);\n    let touchStartTime;\n    const onTouchStart = event => {\n      if (!props.touchable) return;\n      touch.start(event);\n      touchStartTime = Date.now();\n      stopAutoplay();\n      correctPosition();\n    };\n    const onTouchMove = event => {\n      if (props.touchable && state.swiping) {\n        touch.move(event);\n        if (isCorrectDirection.value) {\n          preventDefault(event, props.stopPropagation);\n          move({\n            offset: delta.value\n          });\n        }\n      }\n    };\n    const onTouchEnd = () => {\n      if (!props.touchable || !state.swiping) {\n        return;\n      }\n      const duration = Date.now() - touchStartTime;\n      const speed = delta.value / duration;\n      const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta.value) > size.value / 2;\n      if (shouldSwipe && isCorrectDirection.value) {\n        const offset = props.vertical ? touch.offsetY.value : touch.offsetX.value;\n        let pace = 0;\n        if (props.loop) {\n          pace = offset > 0 ? delta.value > 0 ? -1 : 1 : 0;\n        } else {\n          pace = -Math[delta.value > 0 ? \"ceil\" : \"floor\"](delta.value / size.value);\n        }\n        move({\n          pace,\n          emitChange: true\n        });\n      } else if (delta.value) {\n        move({\n          pace: 0\n        });\n      }\n      state.swiping = false;\n      autoplay();\n    };\n    const swipeTo = (index, options = {}) => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        let targetIndex;\n        if (props.loop && index === count.value) {\n          targetIndex = state.active === 0 ? 0 : index;\n        } else {\n          targetIndex = index % count.value;\n        }\n        if (options.immediate) {\n          doubleRaf(() => {\n            state.swiping = false;\n          });\n        } else {\n          state.swiping = false;\n        }\n        move({\n          pace: targetIndex - state.active,\n          emitChange: true\n        });\n      });\n    };\n    const renderDot = (_, index) => {\n      const active = index === activeIndicator.value;\n      const style = active ? {\n        backgroundColor: props.indicatorColor\n      } : void 0;\n      return _createVNode(\"i\", {\n        \"style\": style,\n        \"class\": bem(\"indicator\", {\n          active\n        })\n      }, null);\n    };\n    const renderIndicator = () => {\n      if (slots.indicator) {\n        return slots.indicator({\n          active: activeIndicator.value,\n          total: count.value\n        });\n      }\n      if (props.showIndicators && count.value > 1) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"indicators\", {\n            vertical: props.vertical\n          })\n        }, [Array(count.value).fill(\"\").map(renderDot)]);\n      }\n    };\n    useExpose({\n      prev,\n      next,\n      state,\n      resize,\n      swipeTo\n    });\n    linkChildren({\n      size,\n      props,\n      count,\n      activeIndicator\n    });\n    watch(() => props.initialSwipe, value => initialize(+value));\n    watch(count, () => initialize(state.active));\n    watch(() => props.autoplay, autoplay);\n    watch([windowWidth, windowHeight], resize);\n    watch(usePageVisibility(), visible => {\n      if (visible === \"visible\") {\n        autoplay();\n      } else {\n        stopAutoplay();\n      }\n    });\n    onMounted(initialize);\n    onActivated(() => initialize(state.active));\n    onPopupReopen(() => initialize(state.active));\n    onDeactivated(stopAutoplay);\n    onBeforeUnmount(stopAutoplay);\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [_createVNode(\"div\", {\n        \"style\": trackStyle.value,\n        \"class\": bem(\"track\", {\n          vertical: props.vertical\n        }),\n        \"onTouchstart\": onTouchStart,\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]), renderIndicator()]);\n    };\n  }\n});\nexport { SWIPE_KEY, stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","ref","watch","reactive","computed","onMounted","onActivated","onDeactivated","onBeforeUnmount","defineComponent","nextTick","clamp","isHidden","truthProp","numericProp","windowWidth","windowHeight","preventDefault","createNamespace","makeNumericProp","doubleRaf","useChildren","usePageVisibility","useTouch","useExpose","onPopupReopen","name","bem","swipeProps","loop","width","height","vertical","Boolean","autoplay","duration","touchable","lazyRender","initialSwipe","indicatorColor","String","showIndicators","stopPropagation","SWIPE_KEY","Symbol","stdin_default","props","emits","setup","emit","slots","root","state","rect","offset","active","swiping","touch","children","linkChildren","count","length","size","delta","deltaY","value","deltaX","minOffset","base","maxCount","Math","ceil","abs","trackSize","activeIndicator","isCorrectDirection","expect","direction","trackStyle","style","transitionDuration","transform","mainAxis","crossAxis","getTargetActive","pace","getTargetOffset","targetActive","currentPosition","min","targetOffset","move","emitChange","outRightBound","setOffset","outLeftBound","correctPosition","prev","reset","next","autoplayTimer","stopAutoplay","clearTimeout","setTimeout","initialize","cb","_a","_b","offsetWidth","offsetHeight","forEach","swipe","then","resize","touchStartTime","onTouchStart","event","start","Date","now","onTouchMove","onTouchEnd","speed","shouldSwipe","offsetY","offsetX","swipeTo","index","options","targetIndex","immediate","renderDot","_","backgroundColor","renderIndicator","indicator","total","Array","fill","map","visible","default","call"],"sources":["C:/Users/Administrator/Desktop/开发八字命理AI指导功能页码/frontend/node_modules/vant/es/swipe/Swipe.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, computed, onMounted, onActivated, onDeactivated, onBeforeUnmount, defineComponent, nextTick } from \"vue\";\nimport { clamp, isHidden, truthProp, numericProp, windowWidth, windowHeight, preventDefault, createNamespace, makeNumericProp } from \"../utils\";\nimport { doubleRaf, useChildren, usePageVisibility } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { onPopupReopen } from \"../composables/on-popup-reopen\";\nconst [name, bem] = createNamespace(\"swipe\");\nconst swipeProps = {\n  loop: truthProp,\n  width: numericProp,\n  height: numericProp,\n  vertical: Boolean,\n  autoplay: makeNumericProp(0),\n  duration: makeNumericProp(500),\n  touchable: truthProp,\n  lazyRender: Boolean,\n  initialSwipe: makeNumericProp(0),\n  indicatorColor: String,\n  showIndicators: truthProp,\n  stopPropagation: truthProp\n};\nconst SWIPE_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: swipeProps,\n  emits: [\"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const state = reactive({\n      rect: null,\n      width: 0,\n      height: 0,\n      offset: 0,\n      active: 0,\n      swiping: false\n    });\n    const touch = useTouch();\n    const {\n      children,\n      linkChildren\n    } = useChildren(SWIPE_KEY);\n    const count = computed(() => children.length);\n    const size = computed(() => state[props.vertical ? \"height\" : \"width\"]);\n    const delta = computed(() => props.vertical ? touch.deltaY.value : touch.deltaX.value);\n    const minOffset = computed(() => {\n      if (state.rect) {\n        const base = props.vertical ? state.rect.height : state.rect.width;\n        return base - size.value * count.value;\n      }\n      return 0;\n    });\n    const maxCount = computed(() => Math.ceil(Math.abs(minOffset.value) / size.value));\n    const trackSize = computed(() => count.value * size.value);\n    const activeIndicator = computed(() => (state.active + count.value) % count.value);\n    const isCorrectDirection = computed(() => {\n      const expect = props.vertical ? \"vertical\" : \"horizontal\";\n      return touch.direction.value === expect;\n    });\n    const trackStyle = computed(() => {\n      const style = {\n        transitionDuration: `${state.swiping ? 0 : props.duration}ms`,\n        transform: `translate${props.vertical ? \"Y\" : \"X\"}(${state.offset}px)`\n      };\n      if (size.value) {\n        const mainAxis = props.vertical ? \"height\" : \"width\";\n        const crossAxis = props.vertical ? \"width\" : \"height\";\n        style[mainAxis] = `${trackSize.value}px`;\n        style[crossAxis] = props[crossAxis] ? `${props[crossAxis]}px` : \"\";\n      }\n      return style;\n    });\n    const getTargetActive = (pace) => {\n      const {\n        active\n      } = state;\n      if (pace) {\n        if (props.loop) {\n          return clamp(active + pace, -1, count.value);\n        }\n        return clamp(active + pace, 0, maxCount.value);\n      }\n      return active;\n    };\n    const getTargetOffset = (targetActive, offset = 0) => {\n      let currentPosition = targetActive * size.value;\n      if (!props.loop) {\n        currentPosition = Math.min(currentPosition, -minOffset.value);\n      }\n      let targetOffset = offset - currentPosition;\n      if (!props.loop) {\n        targetOffset = clamp(targetOffset, minOffset.value, 0);\n      }\n      return targetOffset;\n    };\n    const move = ({\n      pace = 0,\n      offset = 0,\n      emitChange\n    }) => {\n      if (count.value <= 1) {\n        return;\n      }\n      const {\n        active\n      } = state;\n      const targetActive = getTargetActive(pace);\n      const targetOffset = getTargetOffset(targetActive, offset);\n      if (props.loop) {\n        if (children[0] && targetOffset !== minOffset.value) {\n          const outRightBound = targetOffset < minOffset.value;\n          children[0].setOffset(outRightBound ? trackSize.value : 0);\n        }\n        if (children[count.value - 1] && targetOffset !== 0) {\n          const outLeftBound = targetOffset > 0;\n          children[count.value - 1].setOffset(outLeftBound ? -trackSize.value : 0);\n        }\n      }\n      state.active = targetActive;\n      state.offset = targetOffset;\n      if (emitChange && targetActive !== active) {\n        emit(\"change\", activeIndicator.value);\n      }\n    };\n    const correctPosition = () => {\n      state.swiping = true;\n      if (state.active <= -1) {\n        move({\n          pace: count.value\n        });\n      } else if (state.active >= count.value) {\n        move({\n          pace: -count.value\n        });\n      }\n    };\n    const prev = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: -1,\n          emitChange: true\n        });\n      });\n    };\n    const next = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: 1,\n          emitChange: true\n        });\n      });\n    };\n    let autoplayTimer;\n    const stopAutoplay = () => clearTimeout(autoplayTimer);\n    const autoplay = () => {\n      stopAutoplay();\n      if (props.autoplay > 0 && count.value > 1) {\n        autoplayTimer = setTimeout(() => {\n          next();\n          autoplay();\n        }, +props.autoplay);\n      }\n    };\n    const initialize = (active = +props.initialSwipe) => {\n      if (!root.value) {\n        return;\n      }\n      const cb = () => {\n        var _a, _b;\n        if (!isHidden(root)) {\n          const rect = {\n            width: root.value.offsetWidth,\n            height: root.value.offsetHeight\n          };\n          state.rect = rect;\n          state.width = +((_a = props.width) != null ? _a : rect.width);\n          state.height = +((_b = props.height) != null ? _b : rect.height);\n        }\n        if (count.value) {\n          active = Math.min(count.value - 1, active);\n        }\n        state.active = active;\n        state.swiping = true;\n        state.offset = getTargetOffset(active);\n        children.forEach((swipe) => {\n          swipe.setOffset(0);\n        });\n        autoplay();\n      };\n      if (isHidden(root)) {\n        nextTick().then(cb);\n      } else {\n        cb();\n      }\n    };\n    const resize = () => initialize(state.active);\n    let touchStartTime;\n    const onTouchStart = (event) => {\n      if (!props.touchable)\n        return;\n      touch.start(event);\n      touchStartTime = Date.now();\n      stopAutoplay();\n      correctPosition();\n    };\n    const onTouchMove = (event) => {\n      if (props.touchable && state.swiping) {\n        touch.move(event);\n        if (isCorrectDirection.value) {\n          preventDefault(event, props.stopPropagation);\n          move({\n            offset: delta.value\n          });\n        }\n      }\n    };\n    const onTouchEnd = () => {\n      if (!props.touchable || !state.swiping) {\n        return;\n      }\n      const duration = Date.now() - touchStartTime;\n      const speed = delta.value / duration;\n      const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta.value) > size.value / 2;\n      if (shouldSwipe && isCorrectDirection.value) {\n        const offset = props.vertical ? touch.offsetY.value : touch.offsetX.value;\n        let pace = 0;\n        if (props.loop) {\n          pace = offset > 0 ? delta.value > 0 ? -1 : 1 : 0;\n        } else {\n          pace = -Math[delta.value > 0 ? \"ceil\" : \"floor\"](delta.value / size.value);\n        }\n        move({\n          pace,\n          emitChange: true\n        });\n      } else if (delta.value) {\n        move({\n          pace: 0\n        });\n      }\n      state.swiping = false;\n      autoplay();\n    };\n    const swipeTo = (index, options = {}) => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        let targetIndex;\n        if (props.loop && index === count.value) {\n          targetIndex = state.active === 0 ? 0 : index;\n        } else {\n          targetIndex = index % count.value;\n        }\n        if (options.immediate) {\n          doubleRaf(() => {\n            state.swiping = false;\n          });\n        } else {\n          state.swiping = false;\n        }\n        move({\n          pace: targetIndex - state.active,\n          emitChange: true\n        });\n      });\n    };\n    const renderDot = (_, index) => {\n      const active = index === activeIndicator.value;\n      const style = active ? {\n        backgroundColor: props.indicatorColor\n      } : void 0;\n      return _createVNode(\"i\", {\n        \"style\": style,\n        \"class\": bem(\"indicator\", {\n          active\n        })\n      }, null);\n    };\n    const renderIndicator = () => {\n      if (slots.indicator) {\n        return slots.indicator({\n          active: activeIndicator.value,\n          total: count.value\n        });\n      }\n      if (props.showIndicators && count.value > 1) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"indicators\", {\n            vertical: props.vertical\n          })\n        }, [Array(count.value).fill(\"\").map(renderDot)]);\n      }\n    };\n    useExpose({\n      prev,\n      next,\n      state,\n      resize,\n      swipeTo\n    });\n    linkChildren({\n      size,\n      props,\n      count,\n      activeIndicator\n    });\n    watch(() => props.initialSwipe, (value) => initialize(+value));\n    watch(count, () => initialize(state.active));\n    watch(() => props.autoplay, autoplay);\n    watch([windowWidth, windowHeight], resize);\n    watch(usePageVisibility(), (visible) => {\n      if (visible === \"visible\") {\n        autoplay();\n      } else {\n        stopAutoplay();\n      }\n    });\n    onMounted(initialize);\n    onActivated(() => initialize(state.active));\n    onPopupReopen(() => initialize(state.active));\n    onDeactivated(stopAutoplay);\n    onBeforeUnmount(stopAutoplay);\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [_createVNode(\"div\", {\n        \"style\": trackStyle.value,\n        \"class\": bem(\"track\", {\n          vertical: props.vertical\n        }),\n        \"onTouchstart\": onTouchStart,\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]), renderIndicator()]);\n    };\n  }\n});\nexport {\n  SWIPE_KEY,\n  stdin_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}