{"ast":null,"code":"import { ref, onMounted, reactive } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport http from './api/http'; // 导入配置好的http实例\n\nexport default {\n  __name: 'Result',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const resultId = route.params.id || route.query.resultId;\n    const activeTab = ref(0);\n\n    // 模拟数据，作为API调用失败时的备用数据\n    const focusAreas = ref(['health', 'wealth', 'career', 'relationship']);\n\n    // 备用数据，只在API调用失败时使用\n    const baziData = ref({\n      yearPillar: {\n        heavenlyStem: '甲',\n        earthlyBranch: '子',\n        element: '水'\n      },\n      monthPillar: {\n        heavenlyStem: '丙',\n        earthlyBranch: '寅',\n        element: '木'\n      },\n      dayPillar: {\n        heavenlyStem: '戊',\n        earthlyBranch: '午',\n        element: '火'\n      },\n      hourPillar: {\n        heavenlyStem: '庚',\n        earthlyBranch: '申',\n        element: '金'\n      },\n      fiveElements: {\n        wood: 2,\n        fire: 2,\n        earth: 1,\n        metal: 2,\n        water: 1\n      },\n      flowingYears: [{\n        year: 2025,\n        heavenlyStem: '乙',\n        earthlyBranch: '丑',\n        element: '土'\n      }, {\n        year: 2026,\n        heavenlyStem: '丙',\n        earthlyBranch: '寅',\n        element: '木'\n      }, {\n        year: 2027,\n        heavenlyStem: '丁',\n        earthlyBranch: '卯',\n        element: '木'\n      }, {\n        year: 2028,\n        heavenlyStem: '戊',\n        earthlyBranch: '辰',\n        element: '土'\n      }, {\n        year: 2029,\n        heavenlyStem: '己',\n        earthlyBranch: '巳',\n        element: '火'\n      }]\n    });\n\n    // 备用分析数据，只在API调用失败时使用\n    const aiAnalysis = ref({\n      health: '您的八字中火土较旺，木水偏弱。从健康角度看，您需要注意心脑血管系统和消化系统的保养。建议平时多喝水，保持规律作息，避免过度劳累和情绪波动。2025-2026年间需特别注意肝胆健康，可适当增加绿色蔬菜的摄入，定期体检。',\n      wealth: '您的财运在2025年有明显上升趋势，特别是在春夏季节。八字中金水相生，适合从事金融、贸易、水利相关行业。投资方面，稳健为主，可考虑分散投资组合。2027年有意外财运，但需谨慎对待，避免投机性强的项目。',\n      career: '您的事业宫位较为稳定，具有较强的组织能力和执行力。2025-2026年是事业发展的关键期，有升职或转行的机会。建议提升专业技能，扩展人脉关系。您适合在团队中担任协调或管理角色，发挥沟通才能。',\n      relationship: '您的八字中日柱为戊午，感情态度较为务实。2025年下半年至2026年上半年是感情发展的良好时期。已婚者需注意与伴侣的沟通，避免因工作忙碌而忽略家庭。单身者有机会通过社交活动或朋友介绍认识合适的对象。',\n      children: '您的子女宫位较为温和，与子女关系和谐。教育方面，建议采用引导式而非强制式的方法，尊重子女的兴趣发展。2026-2027年是子女发展的重要阶段，可能需要您更多的关注和支持。',\n      overall: '综合分析您的八字，2025-2027年是您人生的一个上升期，各方面都有良好发展。建议把握这段时间，在事业上积极进取，在健康上注意保养，在人际关系上广结善缘。您的人生态度积极乐观，具有较强的适应能力和抗压能力，这将帮助您度过人生中的各种挑战。'\n    });\n    const testApiConnection = async () => {\n      try {\n        Toast.loading('正在测试API连接...');\n        // 使用配置好的http实例\n        const response = await http.get('/');\n        console.log('API根路径响应:', response.data);\n        Toast.success('API连接成功');\n        return true;\n      } catch (error) {\n        console.error('API连接测试失败:', error);\n        Toast.fail('API连接失败，请检查后端服务');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 先测试API连接\n      const isApiConnected = await testApiConnection();\n      if (!isApiConnected) {\n        console.warn('API连接失败，将使用模拟数据');\n        return;\n      }\n      console.log('结果页面加载，ID:', resultId);\n\n      // 如果没有resultId，尝试从本地存储获取\n      const localResultId = localStorage.getItem('resultId');\n      if (!resultId && localResultId) {\n        console.log('从本地存储获取ID:', localResultId);\n      }\n      const finalResultId = resultId || localResultId;\n      if (!finalResultId) {\n        console.error('缺少结果ID，无法获取分析结果');\n        Toast.fail('缺少结果ID，无法获取分析结果');\n        return;\n      }\n      try {\n        console.log('调用API获取结果:', `/api/bazi/result/${finalResultId}`);\n\n        // 显示加载提示，提醒用户需要等待\n        Toast.loading({\n          message: '正在调用AI进行八字分析，请耐心等待30-60秒...',\n          duration: 10000,\n          position: 'middle'\n        });\n\n        // 使用配置好的http实例\n        const response = await http.get(`/api/bazi/result/${finalResultId}`);\n        console.log('API响应:', response.status, response.data);\n        if (response.data.code === 200) {\n          console.log('获取成功，更新数据');\n          // 确保从API获取数据并更新视图\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('分析结果加载成功');\n        } else if (response.data.code === 202) {\n          // 服务器接受了请求但还在处理中（异步分析）\n          console.log('分析正在进行中，等待时间:', response.data.data.waitTime || '未知');\n\n          // 显示清晰的等待提示，告知用户确切的等待情况\n          Toast.loading({\n            message: `AI正在专注分析您的八字命盘，已经分析了${response.data.data.waitTime || 0}秒，完整分析需要30-60秒，请稍候...`,\n            duration: 8000,\n            position: 'middle'\n          });\n\n          // 预先显示部分数据\n          if (response.data.data.baziChart) {\n            baziData.value = response.data.data.baziChart;\n          }\n          if (response.data.data.aiAnalysis) {\n            aiAnalysis.value = response.data.data.aiAnalysis;\n          }\n          if (response.data.data.focusAreas) {\n            focusAreas.value = response.data.data.focusAreas;\n          }\n\n          // 启动轮询，每15秒查询一次直到分析完成\n          // 增加轮询间隔，减少服务器压力\n          const pollInterval = setInterval(async () => {\n            try {\n              console.log('轮询查询分析结果...');\n              const pollResponse = await http.get(`/api/bazi/result/${finalResultId}`);\n              if (pollResponse.data.code === 200) {\n                // 分析完成，更新数据\n                baziData.value = pollResponse.data.data.baziChart;\n                aiAnalysis.value = pollResponse.data.data.aiAnalysis;\n                focusAreas.value = pollResponse.data.data.focusAreas;\n                Toast.success('分析结果加载成功！您的八字命盘解析已完成');\n                clearInterval(pollInterval); // 停止轮询\n\n                // 自动切换到AI分析结果标签\n                activeTab.value = 1;\n              } else if (pollResponse.data.code !== 202) {\n                // 如果返回其他错误码，停止轮询\n                console.error('轮询时发生错误:', pollResponse.data.message);\n                Toast.fail(`查询错误: ${pollResponse.data.message}`);\n                clearInterval(pollInterval); // 停止轮询\n              } else {\n                // 仍在分析中，更新等待时间\n                const waitTime = pollResponse.data.data.waitTime || 0;\n                const remainingTime = Math.max(0, 60 - waitTime); // 假设总时间为60秒\n\n                Toast.loading({\n                  message: `AI正在专注分析中(${Math.round(waitTime / 60 * 100)}%)，预计还需${remainingTime}秒完成...`,\n                  duration: 5000,\n                  position: 'middle'\n                });\n                console.log('仍在分析中，已等待:', waitTime, '秒');\n              }\n            } catch (err) {\n              console.error('轮询时出错:', err);\n              clearInterval(pollInterval); // 出错也停止轮询\n            }\n          }, 15000); // 每15秒查询一次，减少服务器压力\n\n          // 设置最大轮询时间，防止无限轮询\n          setTimeout(() => {\n            if (pollInterval) {\n              clearInterval(pollInterval);\n              console.log('超过最大轮询时间，停止轮询');\n\n              // 显示一个友好的提示，询问用户是否要继续等待\n              Toast.confirm({\n                title: '分析耗时较长',\n                message: '您的八字命理分析正在进行中，但耗时较长。您可以选择继续等待或稍后再查看结果。',\n                showCancelButton: true,\n                confirmButtonText: '继续等待',\n                cancelButtonText: '稍后查看',\n                theme: 'round-button'\n              }).then(() => {\n                // 用户选择继续等待，重新启动轮询\n                window.location.reload();\n              }).catch(() => {\n                // 用户选择稍后查看，可以先返回首页\n                router.push('/');\n              });\n            }\n          }, 180000); // 最多轮询3分钟\n        } else {\n          console.error('API返回错误:', response.data.message);\n          Toast.fail(response.data.message || '获取分析结果失败');\n        }\n      } catch (error) {\n        console.error('获取分析结果出错:', error);\n        console.error('错误详情:', error.response ? error.response.data : '无响应数据');\n        Toast.fail('获取分析结果失败，请稍后重试');\n\n        // 备选方案：如果ID以\"RES\"开头，尝试模拟支付再获取结果\n        if (finalResultId.startsWith('RES')) {\n          try {\n            console.log('尝试使用模拟支付接口...');\n\n            // 显示加载提示\n            Toast.loading({\n              message: '正在模拟支付并进行八字分析，请耐心等待30-60秒...',\n              duration: 10000,\n              position: 'middle'\n            });\n            const orderId = finalResultId.replace('RES', '');\n            const mockPaymentResponse = await http.post(`/api/order/mock/pay/${orderId}`);\n            if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n              const newResultId = mockPaymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n              const retryResponse = await http.get(`/api/bazi/result/${newResultId}`);\n              if (retryResponse.data.code === 200) {\n                baziData.value = retryResponse.data.data.baziChart;\n                aiAnalysis.value = retryResponse.data.data.aiAnalysis;\n                focusAreas.value = retryResponse.data.data.focusAreas;\n                Toast.success('分析结果加载成功');\n                return;\n              }\n            }\n          } catch (mockError) {\n            console.error('模拟支付失败:', mockError);\n          }\n        }\n      }\n    });\n    const getElementName = element => {\n      const elementNames = {\n        wood: '木',\n        fire: '火',\n        earth: '土',\n        metal: '金',\n        water: '水'\n      };\n      return elementNames[element] || element;\n    };\n    const onClickLeft = () => {\n      router.push('/');\n    };\n    const downloadPDF = async () => {\n      Toast.loading({\n        message: '正在生成PDF，请稍候...',\n        duration: 5000,\n        position: 'middle'\n      });\n      if (!resultId) {\n        Toast.fail('缺少结果ID，无法生成PDF');\n        return;\n      }\n      try {\n        // 调用后端API生成并下载PDF\n        console.log('调用API下载PDF:', `/api/bazi/pdf/${resultId}`);\n\n        // 检测是否在微信环境中\n        const isWeixinBrowser = /MicroMessenger/i.test(navigator.userAgent);\n        console.log('是否在微信环境:', isWeixinBrowser);\n        if (isWeixinBrowser) {\n          // 微信环境使用直接打开链接的方式，返回JSON包含URL\n          const response = await http.get(`/api/bazi/pdf/${resultId}`);\n          if (response.data.code === 200 && response.data.data?.url) {\n            // 在新窗口打开URL\n            window.open(response.data.data.url, '_blank');\n            Toast.success('PDF生成成功，请点击右上角菜单在浏览器中打开以下载');\n            return;\n          } else if (response.data.code === 302 && response.data.data?.url) {\n            // 处理重定向\n            window.open(response.data.data.url, '_blank');\n            Toast.success('PDF生成成功，请点击右上角菜单在浏览器中打开以下载');\n            return;\n          } else {\n            Toast.fail(response.data.message || 'PDF已生成，请在浏览器中查看');\n            return;\n          }\n        } else {\n          // 非微信环境使用Blob下载\n          console.log('使用Blob模式下载PDF...');\n          // 由于文件下载需要处理二进制数据，使用特殊配置\n          const response = await http.get(`/api/bazi/pdf/${resultId}`, {\n            responseType: 'blob' // 设置响应类型为二进制数据\n          }).catch(error => {\n            // 直接处理错误，因为有些响应可能是JSON格式的错误消息\n            console.error('PDF下载请求错误:', error);\n            if (error.response) {\n              console.log('错误响应状态:', error.response.status);\n              console.log('错误响应头:', error.response.headers);\n              // 如果是JSON错误，尝试转换并显示\n              if (error.response.headers['content-type']?.includes('application/json')) {\n                return error.response;\n              }\n            }\n            throw error; // 其他错误重新抛出\n          });\n          console.log('PDF响应状态:', response.status);\n          console.log('PDF响应头:', response.headers);\n\n          // 检查响应状态\n          if (response.status === 200) {\n            // 检查返回的内容类型来确定是PDF还是JSON数据\n            const contentType = response.headers['content-type'];\n            console.log('响应内容类型:', contentType);\n\n            // 如果是PDF或未指定(默认处理为PDF)\n            if (contentType?.includes('application/pdf') || contentType?.includes('application/octet-stream') || response.data instanceof Blob) {\n              // 创建Blob对象\n              const blob = new Blob([response.data], {\n                type: 'application/pdf'\n              });\n\n              // 创建下载链接\n              const url = window.URL.createObjectURL(blob);\n\n              // 判断移动设备，可能不支持下载\n              const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n              if (isMobile) {\n                // 移动设备上优先打开PDF预览\n                window.open(url, '_blank');\n                Toast.success('PDF已打开，请使用浏览器的分享/保存功能下载');\n              } else {\n                // 桌面设备上使用标准下载方式\n                const link = document.createElement('a');\n                link.href = url;\n                link.download = `八字命理分析_${resultId}.pdf`;\n\n                // 模拟点击下载\n                document.body.appendChild(link);\n                link.click();\n\n                // 清理\n                setTimeout(() => {\n                  window.URL.revokeObjectURL(url);\n                  document.body.removeChild(link);\n                }, 100);\n              }\n              Toast.success('PDF下载成功！');\n              return;\n            }\n\n            // 处理JSON响应（可能是URL链接）\n            if (contentType?.includes('application/json')) {\n              // 解析JSON响应\n              const reader = new FileReader();\n              reader.onload = function () {\n                try {\n                  const jsonResponse = JSON.parse(reader.result);\n                  console.log('API响应(JSON):', jsonResponse);\n\n                  // 检查是否有URL\n                  if (jsonResponse.code === 200 && jsonResponse.data?.url) {\n                    // 在新窗口打开URL\n                    window.open(jsonResponse.data.url, '_blank');\n                    Toast.success('PDF生成成功，正在打开...');\n                  } else if (jsonResponse.code === 302 && jsonResponse.data?.url) {\n                    // 处理重定向\n                    window.open(jsonResponse.data.url, '_blank');\n                    Toast.success('PDF生成成功，正在打开...');\n                  } else {\n                    // 显示其他成功消息\n                    Toast.success(jsonResponse.message || 'PDF操作成功');\n                  }\n                } catch (e) {\n                  console.error('解析JSON响应出错:', e);\n                  Toast.fail('处理PDF响应时出错');\n                }\n              };\n              reader.readAsText(response.data);\n              return;\n            }\n\n            // 如果没有识别出内容类型但响应是Blob，尝试作为PDF处理\n            if (response.data instanceof Blob) {\n              console.log('响应是Blob但未识别内容类型，尝试作为PDF处理');\n              try {\n                // 创建Blob对象\n                const blob = new Blob([response.data], {\n                  type: 'application/pdf'\n                });\n\n                // 创建下载链接\n                const url = window.URL.createObjectURL(blob);\n\n                // 下载PDF文件\n                const link = document.createElement('a');\n                link.href = url;\n                link.download = `八字命理分析_${resultId}.pdf`;\n\n                // 模拟点击下载\n                document.body.appendChild(link);\n                link.click();\n\n                // 清理\n                setTimeout(() => {\n                  window.URL.revokeObjectURL(url);\n                  document.body.removeChild(link);\n                }, 100);\n                Toast.success('PDF下载成功！');\n                return;\n              } catch (e) {\n                console.error('尝试处理未知Blob时出错:', e);\n              }\n            }\n          }\n\n          // 处理其他情况\n          Toast.fail('PDF生成过程中出现异常，请重试');\n          console.error('未知的PDF响应:', response);\n        }\n      } catch (error) {\n        console.error('下载PDF出错:', error);\n        Toast.fail('下载PDF失败: ' + (error.message || '未知错误'));\n      }\n    };\n    const shareResult = () => {\n      Toast.success('分享功能开发中');\n    };\n    const reloadBaziData = async () => {\n      Toast.loading('正在重新加载数据...');\n      try {\n        // 测试模拟支付接口以获取分析结果\n        if (!resultId) {\n          Toast.fail('缺少结果ID');\n          return;\n        }\n\n        // 首先尝试使用模拟支付接口\n        try {\n          console.log('尝试使用模拟支付接口...');\n\n          // 显示加载提示\n          Toast.loading({\n            message: '正在重新分析八字，请耐心等待30-60秒...',\n            duration: 10000,\n            position: 'middle'\n          });\n          const mockPaymentResponse = await http.post(`/api/order/mock/pay/${resultId.replace('RES', '')}`);\n          console.log('模拟支付响应:', mockPaymentResponse.data);\n          if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n            // 使用返回的resultId重新加载数据\n            const newResultId = mockPaymentResponse.data.data.resultId;\n            console.log('获取到新的resultId:', newResultId);\n            const response = await http.get(`/api/bazi/result/${newResultId}`);\n            if (response.data.code === 200) {\n              baziData.value = response.data.data.baziChart;\n              aiAnalysis.value = response.data.data.aiAnalysis;\n              focusAreas.value = response.data.data.focusAreas;\n              Toast.success('数据加载成功');\n              return;\n            }\n          }\n        } catch (mockError) {\n          console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n        }\n\n        // 如果模拟支付失败，尝试直接获取结果\n        const response = await http.get(`/api/bazi/result/${resultId}`);\n        if (response.data.code === 200) {\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('数据加载成功');\n        } else {\n          Toast.fail(response.data.message || '加载失败');\n        }\n      } catch (error) {\n        console.error('重新加载失败:', error);\n        Toast.fail('加载失败: ' + (error.message || '未知错误'));\n      }\n    };\n    const __returned__ = {\n      route,\n      router,\n      resultId,\n      activeTab,\n      focusAreas,\n      baziData,\n      aiAnalysis,\n      testApiConnection,\n      getElementName,\n      onClickLeft,\n      downloadPDF,\n      shareResult,\n      reloadBaziData,\n      ref,\n      onMounted,\n      reactive,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      },\n      get jsPDF() {\n        return jsPDF;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get axios() {\n        return axios;\n      },\n      get http() {\n        return http;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","useRoute","useRouter","Toast","jsPDF","html2canvas","axios","http","route","router","resultId","params","id","query","activeTab","focusAreas","baziData","yearPillar","heavenlyStem","earthlyBranch","element","monthPillar","dayPillar","hourPillar","fiveElements","wood","fire","earth","metal","water","flowingYears","year","aiAnalysis","health","wealth","career","relationship","children","overall","testApiConnection","loading","response","get","console","log","data","success","error","fail","isApiConnected","warn","localResultId","localStorage","getItem","finalResultId","message","duration","position","status","code","value","baziChart","waitTime","pollInterval","setInterval","pollResponse","clearInterval","remainingTime","Math","max","round","err","setTimeout","confirm","title","showCancelButton","confirmButtonText","cancelButtonText","theme","then","window","location","reload","catch","push","startsWith","orderId","replace","mockPaymentResponse","post","newResultId","retryResponse","mockError","getElementName","elementNames","onClickLeft","downloadPDF","isWeixinBrowser","test","navigator","userAgent","url","open","responseType","headers","includes","contentType","Blob","blob","type","URL","createObjectURL","isMobile","link","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","reader","FileReader","onload","jsonResponse","JSON","parse","result","e","readAsText","shareResult","reloadBaziData"],"sources":["C:/Users/Administrator/Desktop/开发八字命理AI指导功能页码/frontend/src/Result.vue"],"sourcesContent":["<template>\n  <div class=\"result-container\">\n    <van-nav-bar\n      title=\"八字分析结果\"\n      left-text=\"返回\"\n      left-arrow\n      @click-left=\"onClickLeft\"\n    />\n    \n    <div class=\"result-header\">\n      <h2>您的八字命盘分析</h2>\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\n    </div>\n    \n    <van-tabs v-model=\"activeTab\" sticky>\n      <van-tab title=\"命盘信息\">\n        <div class=\"bazi-chart\">\n          <h3>八字命盘</h3>\n          <van-grid :column-num=\"4\" :border=\"false\">\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\n                  <div class=\"label\">年柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\n                  <div class=\"label\">月柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\n                  <div class=\"label\">日柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\n                  <div class=\"label\">时柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n          </van-grid>\n          \n          <h3>五行分布</h3>\n          <div class=\"five-elements\">\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">{{ value }}</div>\n            </div>\n          </div>\n          \n          <h3>大运流年</h3>\n          <div class=\"flowing-years\">\n            <van-steps direction=\"horizontal\" :active=\"2\">\n              <van-step v-for=\"(year, index) in baziData.flowingYears.slice(0, 5)\" :key=\"index\">\n                {{ year.year }}年<br>\n                {{ year.heavenlyStem }}{{ year.earthlyBranch }}\n              </van-step>\n            </van-steps>\n          </div>\n        </div>\n      </van-tab>\n      \n      <van-tab title=\"AI分析结果\">\n        <div class=\"ai-analysis\">\n          <template v-if=\"focusAreas.includes('health')\">\n            <div class=\"analysis-section\">\n              <h3>身体健康</h3>\n              <p>{{ aiAnalysis.health }}</p>\n            </div>\n          </template>\n          \n          <template v-if=\"focusAreas.includes('wealth')\">\n            <div class=\"analysis-section\">\n              <h3>财运分析</h3>\n              <p>{{ aiAnalysis.wealth }}</p>\n            </div>\n          </template>\n          \n          <template v-if=\"focusAreas.includes('career')\">\n            <div class=\"analysis-section\">\n              <h3>事业发展</h3>\n              <p>{{ aiAnalysis.career }}</p>\n            </div>\n          </template>\n          \n          <template v-if=\"focusAreas.includes('relationship')\">\n            <div class=\"analysis-section\">\n              <h3>婚姻感情</h3>\n              <p>{{ aiAnalysis.relationship }}</p>\n            </div>\n          </template>\n          \n          <template v-if=\"focusAreas.includes('children')\">\n            <div class=\"analysis-section\">\n              <h3>子女缘分</h3>\n              <p>{{ aiAnalysis.children }}</p>\n            </div>\n          </template>\n          \n          <div class=\"analysis-section\">\n            <h3>综合建议</h3>\n            <p>{{ aiAnalysis.overall }}</p>\n          </div>\n        </div>\n      </van-tab>\n    </van-tabs>\n    \n    <div class=\"action-buttons\">\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\n        下载PDF报告\n      </van-button>\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\n        分享结果\n      </van-button>\n      \n      <!-- 调试按钮 -->\n      <van-button plain type=\"warning\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"reloadBaziData\">\n        重新加载分析数据\n      </van-button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport http from './api/http'; // 导入配置好的http实例\n\nconst route = useRoute();\nconst router = useRouter();\nconst resultId = route.params.id || route.query.resultId;\nconst activeTab = ref(0);\n\n// 模拟数据，作为API调用失败时的备用数据\nconst focusAreas = ref(['health', 'wealth', 'career', 'relationship']);\n\n// 备用数据，只在API调用失败时使用\nconst baziData = ref({\n  yearPillar: {\n    heavenlyStem: '甲',\n    earthlyBranch: '子',\n    element: '水'\n  },\n  monthPillar: {\n    heavenlyStem: '丙',\n    earthlyBranch: '寅',\n    element: '木'\n  },\n  dayPillar: {\n    heavenlyStem: '戊',\n    earthlyBranch: '午',\n    element: '火'\n  },\n  hourPillar: {\n    heavenlyStem: '庚',\n    earthlyBranch: '申',\n    element: '金'\n  },\n  fiveElements: {\n    wood: 2,\n    fire: 2,\n    earth: 1,\n    metal: 2,\n    water: 1\n  },\n  flowingYears: [\n    {\n      year: 2025,\n      heavenlyStem: '乙',\n      earthlyBranch: '丑',\n      element: '土'\n    },\n    {\n      year: 2026,\n      heavenlyStem: '丙',\n      earthlyBranch: '寅',\n      element: '木'\n    },\n    {\n      year: 2027,\n      heavenlyStem: '丁',\n      earthlyBranch: '卯',\n      element: '木'\n    },\n    {\n      year: 2028,\n      heavenlyStem: '戊',\n      earthlyBranch: '辰',\n      element: '土'\n    },\n    {\n      year: 2029,\n      heavenlyStem: '己',\n      earthlyBranch: '巳',\n      element: '火'\n    }\n  ]\n});\n\n// 备用分析数据，只在API调用失败时使用\nconst aiAnalysis = ref({\n  health: '您的八字中火土较旺，木水偏弱。从健康角度看，您需要注意心脑血管系统和消化系统的保养。建议平时多喝水，保持规律作息，避免过度劳累和情绪波动。2025-2026年间需特别注意肝胆健康，可适当增加绿色蔬菜的摄入，定期体检。',\n  wealth: '您的财运在2025年有明显上升趋势，特别是在春夏季节。八字中金水相生，适合从事金融、贸易、水利相关行业。投资方面，稳健为主，可考虑分散投资组合。2027年有意外财运，但需谨慎对待，避免投机性强的项目。',\n  career: '您的事业宫位较为稳定，具有较强的组织能力和执行力。2025-2026年是事业发展的关键期，有升职或转行的机会。建议提升专业技能，扩展人脉关系。您适合在团队中担任协调或管理角色，发挥沟通才能。',\n  relationship: '您的八字中日柱为戊午，感情态度较为务实。2025年下半年至2026年上半年是感情发展的良好时期。已婚者需注意与伴侣的沟通，避免因工作忙碌而忽略家庭。单身者有机会通过社交活动或朋友介绍认识合适的对象。',\n  children: '您的子女宫位较为温和，与子女关系和谐。教育方面，建议采用引导式而非强制式的方法，尊重子女的兴趣发展。2026-2027年是子女发展的重要阶段，可能需要您更多的关注和支持。',\n  overall: '综合分析您的八字，2025-2027年是您人生的一个上升期，各方面都有良好发展。建议把握这段时间，在事业上积极进取，在健康上注意保养，在人际关系上广结善缘。您的人生态度积极乐观，具有较强的适应能力和抗压能力，这将帮助您度过人生中的各种挑战。'\n});\n\nconst testApiConnection = async () => {\n  try {\n    Toast.loading('正在测试API连接...');\n    // 使用配置好的http实例\n    const response = await http.get('/');\n    console.log('API根路径响应:', response.data);\n    Toast.success('API连接成功');\n    return true;\n  } catch (error) {\n    console.error('API连接测试失败:', error);\n    Toast.fail('API连接失败，请检查后端服务');\n    return false;\n  }\n};\n\nonMounted(async () => {\n  // 先测试API连接\n  const isApiConnected = await testApiConnection();\n  if (!isApiConnected) {\n    console.warn('API连接失败，将使用模拟数据');\n    return;\n  }\n  \n  console.log('结果页面加载，ID:', resultId);\n  \n  // 如果没有resultId，尝试从本地存储获取\n  const localResultId = localStorage.getItem('resultId');\n  if (!resultId && localResultId) {\n    console.log('从本地存储获取ID:', localResultId);\n  }\n  \n  const finalResultId = resultId || localResultId;\n  \n  if (!finalResultId) {\n    console.error('缺少结果ID，无法获取分析结果');\n    Toast.fail('缺少结果ID，无法获取分析结果');\n    return;\n  }\n  \n  try {\n    console.log('调用API获取结果:', `/api/bazi/result/${finalResultId}`);\n    \n    // 显示加载提示，提醒用户需要等待\n    Toast.loading({\n      message: '正在调用AI进行八字分析，请耐心等待30-60秒...',\n      duration: 10000,\n      position: 'middle'\n    });\n    \n    // 使用配置好的http实例\n    const response = await http.get(`/api/bazi/result/${finalResultId}`);\n    \n    console.log('API响应:', response.status, response.data);\n    \n    if (response.data.code === 200) {\n      console.log('获取成功，更新数据');\n      // 确保从API获取数据并更新视图\n      baziData.value = response.data.data.baziChart;\n      aiAnalysis.value = response.data.data.aiAnalysis;\n      focusAreas.value = response.data.data.focusAreas;\n      Toast.success('分析结果加载成功');\n    } else if (response.data.code === 202) {\n      // 服务器接受了请求但还在处理中（异步分析）\n      console.log('分析正在进行中，等待时间:', response.data.data.waitTime || '未知');\n      \n      // 显示清晰的等待提示，告知用户确切的等待情况\n      Toast.loading({\n        message: `AI正在专注分析您的八字命盘，已经分析了${response.data.data.waitTime || 0}秒，完整分析需要30-60秒，请稍候...`,\n        duration: 8000,\n        position: 'middle'\n      });\n      \n      // 预先显示部分数据\n      if (response.data.data.baziChart) {\n        baziData.value = response.data.data.baziChart;\n      }\n      if (response.data.data.aiAnalysis) {\n        aiAnalysis.value = response.data.data.aiAnalysis;\n      }\n      if (response.data.data.focusAreas) {\n        focusAreas.value = response.data.data.focusAreas;\n      }\n      \n      // 启动轮询，每15秒查询一次直到分析完成\n      // 增加轮询间隔，减少服务器压力\n      const pollInterval = setInterval(async () => {\n        try {\n          console.log('轮询查询分析结果...');\n          const pollResponse = await http.get(`/api/bazi/result/${finalResultId}`);\n          \n          if (pollResponse.data.code === 200) {\n            // 分析完成，更新数据\n            baziData.value = pollResponse.data.data.baziChart;\n            aiAnalysis.value = pollResponse.data.data.aiAnalysis;\n            focusAreas.value = pollResponse.data.data.focusAreas;\n            Toast.success('分析结果加载成功！您的八字命盘解析已完成');\n            clearInterval(pollInterval); // 停止轮询\n            \n            // 自动切换到AI分析结果标签\n            activeTab.value = 1;\n          } else if (pollResponse.data.code !== 202) {\n            // 如果返回其他错误码，停止轮询\n            console.error('轮询时发生错误:', pollResponse.data.message);\n            Toast.fail(`查询错误: ${pollResponse.data.message}`);\n            clearInterval(pollInterval); // 停止轮询\n          } else {\n            // 仍在分析中，更新等待时间\n            const waitTime = pollResponse.data.data.waitTime || 0;\n            const remainingTime = Math.max(0, 60 - waitTime);  // 假设总时间为60秒\n            \n            Toast.loading({\n              message: `AI正在专注分析中(${Math.round(waitTime/60*100)}%)，预计还需${remainingTime}秒完成...`,\n              duration: 5000,\n              position: 'middle'\n            });\n            console.log('仍在分析中，已等待:', waitTime, '秒');\n          }\n        } catch (err) {\n          console.error('轮询时出错:', err);\n          clearInterval(pollInterval); // 出错也停止轮询\n        }\n      }, 15000); // 每15秒查询一次，减少服务器压力\n      \n      // 设置最大轮询时间，防止无限轮询\n      setTimeout(() => {\n        if (pollInterval) {\n          clearInterval(pollInterval);\n          console.log('超过最大轮询时间，停止轮询');\n          \n          // 显示一个友好的提示，询问用户是否要继续等待\n          Toast.confirm({\n            title: '分析耗时较长',\n            message: '您的八字命理分析正在进行中，但耗时较长。您可以选择继续等待或稍后再查看结果。',\n            showCancelButton: true,\n            confirmButtonText: '继续等待',\n            cancelButtonText: '稍后查看',\n            theme: 'round-button',\n          }).then(() => {\n            // 用户选择继续等待，重新启动轮询\n            window.location.reload();\n          }).catch(() => {\n            // 用户选择稍后查看，可以先返回首页\n            router.push('/');\n          });\n        }\n      }, 180000); // 最多轮询3分钟\n    } else {\n      console.error('API返回错误:', response.data.message);\n      Toast.fail(response.data.message || '获取分析结果失败');\n    }\n  } catch (error) {\n    console.error('获取分析结果出错:', error);\n    console.error('错误详情:', error.response ? error.response.data : '无响应数据');\n    Toast.fail('获取分析结果失败，请稍后重试');\n    \n    // 备选方案：如果ID以\"RES\"开头，尝试模拟支付再获取结果\n    if (finalResultId.startsWith('RES')) {\n      try {\n        console.log('尝试使用模拟支付接口...');\n        \n        // 显示加载提示\n        Toast.loading({\n          message: '正在模拟支付并进行八字分析，请耐心等待30-60秒...',\n          duration: 10000,\n          position: 'middle'\n        });\n        \n        const orderId = finalResultId.replace('RES', '');\n        const mockPaymentResponse = await http.post(`/api/order/mock/pay/${orderId}`);\n        \n        if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n          const newResultId = mockPaymentResponse.data.data.resultId;\n          console.log('获取到新的resultId:', newResultId);\n          \n          const retryResponse = await http.get(`/api/bazi/result/${newResultId}`);\n          if (retryResponse.data.code === 200) {\n            baziData.value = retryResponse.data.data.baziChart;\n            aiAnalysis.value = retryResponse.data.data.aiAnalysis;\n            focusAreas.value = retryResponse.data.data.focusAreas;\n            Toast.success('分析结果加载成功');\n            return;\n          }\n        }\n      } catch (mockError) {\n        console.error('模拟支付失败:', mockError);\n      }\n    }\n  }\n});\n\nconst getElementName = (element) => {\n  const elementNames = {\n    wood: '木',\n    fire: '火',\n    earth: '土',\n    metal: '金',\n    water: '水'\n  };\n  return elementNames[element] || element;\n};\n\nconst onClickLeft = () => {\n  router.push('/');\n};\n\nconst downloadPDF = async () => {\n  Toast.loading({\n    message: '正在生成PDF，请稍候...',\n    duration: 5000,\n    position: 'middle'\n  });\n  \n  if (!resultId) {\n    Toast.fail('缺少结果ID，无法生成PDF');\n    return;\n  }\n  \n  try {\n    // 调用后端API生成并下载PDF\n    console.log('调用API下载PDF:', `/api/bazi/pdf/${resultId}`);\n    \n    // 检测是否在微信环境中\n    const isWeixinBrowser = /MicroMessenger/i.test(navigator.userAgent);\n    console.log('是否在微信环境:', isWeixinBrowser);\n    \n    if (isWeixinBrowser) {\n      // 微信环境使用直接打开链接的方式，返回JSON包含URL\n      const response = await http.get(`/api/bazi/pdf/${resultId}`);\n      \n      if (response.data.code === 200 && response.data.data?.url) {\n        // 在新窗口打开URL\n        window.open(response.data.data.url, '_blank');\n        Toast.success('PDF生成成功，请点击右上角菜单在浏览器中打开以下载');\n        return;\n      } else if (response.data.code === 302 && response.data.data?.url) {\n        // 处理重定向\n        window.open(response.data.data.url, '_blank');\n        Toast.success('PDF生成成功，请点击右上角菜单在浏览器中打开以下载');\n        return;\n      } else {\n        Toast.fail(response.data.message || 'PDF已生成，请在浏览器中查看');\n        return;\n      }\n    } else {\n      // 非微信环境使用Blob下载\n      console.log('使用Blob模式下载PDF...');\n      // 由于文件下载需要处理二进制数据，使用特殊配置\n      const response = await http.get(`/api/bazi/pdf/${resultId}`, {\n        responseType: 'blob', // 设置响应类型为二进制数据\n      }).catch(error => {\n        // 直接处理错误，因为有些响应可能是JSON格式的错误消息\n        console.error('PDF下载请求错误:', error);\n        if (error.response) {\n          console.log('错误响应状态:', error.response.status);\n          console.log('错误响应头:', error.response.headers);\n          // 如果是JSON错误，尝试转换并显示\n          if (error.response.headers['content-type']?.includes('application/json')) {\n            return error.response;\n          }\n        }\n        throw error; // 其他错误重新抛出\n      });\n      \n      console.log('PDF响应状态:', response.status);\n      console.log('PDF响应头:', response.headers);\n      \n      // 检查响应状态\n      if (response.status === 200) {\n        // 检查返回的内容类型来确定是PDF还是JSON数据\n        const contentType = response.headers['content-type'];\n        console.log('响应内容类型:', contentType);\n        \n        // 如果是PDF或未指定(默认处理为PDF)\n        if (contentType?.includes('application/pdf') || \n            contentType?.includes('application/octet-stream') || \n            response.data instanceof Blob) {\n          // 创建Blob对象\n          const blob = new Blob([response.data], { type: 'application/pdf' });\n          \n          // 创建下载链接\n          const url = window.URL.createObjectURL(blob);\n          \n          // 判断移动设备，可能不支持下载\n          const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n          \n          if (isMobile) {\n            // 移动设备上优先打开PDF预览\n            window.open(url, '_blank');\n            Toast.success('PDF已打开，请使用浏览器的分享/保存功能下载');\n          } else {\n            // 桌面设备上使用标准下载方式\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = `八字命理分析_${resultId}.pdf`;\n            \n            // 模拟点击下载\n            document.body.appendChild(link);\n            link.click();\n            \n            // 清理\n            setTimeout(() => {\n              window.URL.revokeObjectURL(url);\n              document.body.removeChild(link);\n            }, 100);\n          }\n          \n          Toast.success('PDF下载成功！');\n          return;\n        }\n        \n        // 处理JSON响应（可能是URL链接）\n        if (contentType?.includes('application/json')) {\n          // 解析JSON响应\n          const reader = new FileReader();\n          reader.onload = function() {\n            try {\n              const jsonResponse = JSON.parse(reader.result);\n              console.log('API响应(JSON):', jsonResponse);\n              \n              // 检查是否有URL\n              if (jsonResponse.code === 200 && jsonResponse.data?.url) {\n                // 在新窗口打开URL\n                window.open(jsonResponse.data.url, '_blank');\n                Toast.success('PDF生成成功，正在打开...');\n              } else if (jsonResponse.code === 302 && jsonResponse.data?.url) {\n                // 处理重定向\n                window.open(jsonResponse.data.url, '_blank');\n                Toast.success('PDF生成成功，正在打开...');\n              } else {\n                // 显示其他成功消息\n                Toast.success(jsonResponse.message || 'PDF操作成功');\n              }\n            } catch (e) {\n              console.error('解析JSON响应出错:', e);\n              Toast.fail('处理PDF响应时出错');\n            }\n          };\n          reader.readAsText(response.data);\n          return;\n        }\n        \n        // 如果没有识别出内容类型但响应是Blob，尝试作为PDF处理\n        if (response.data instanceof Blob) {\n          console.log('响应是Blob但未识别内容类型，尝试作为PDF处理');\n          try {\n            // 创建Blob对象\n            const blob = new Blob([response.data], { type: 'application/pdf' });\n            \n            // 创建下载链接\n            const url = window.URL.createObjectURL(blob);\n            \n            // 下载PDF文件\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = `八字命理分析_${resultId}.pdf`;\n            \n            // 模拟点击下载\n            document.body.appendChild(link);\n            link.click();\n            \n            // 清理\n            setTimeout(() => {\n              window.URL.revokeObjectURL(url);\n              document.body.removeChild(link);\n            }, 100);\n            \n            Toast.success('PDF下载成功！');\n            return;\n          } catch (e) {\n            console.error('尝试处理未知Blob时出错:', e);\n          }\n        }\n      }\n      \n      // 处理其他情况\n      Toast.fail('PDF生成过程中出现异常，请重试');\n      console.error('未知的PDF响应:', response);\n    }\n  } catch (error) {\n    console.error('下载PDF出错:', error);\n    Toast.fail('下载PDF失败: ' + (error.message || '未知错误'));\n  }\n};\n\nconst shareResult = () => {\n  Toast.success('分享功能开发中');\n};\n\nconst reloadBaziData = async () => {\n  Toast.loading('正在重新加载数据...');\n  \n  try {\n    // 测试模拟支付接口以获取分析结果\n    if (!resultId) {\n      Toast.fail('缺少结果ID');\n      return;\n    }\n    \n    // 首先尝试使用模拟支付接口\n    try {\n      console.log('尝试使用模拟支付接口...');\n      \n      // 显示加载提示\n      Toast.loading({\n        message: '正在重新分析八字，请耐心等待30-60秒...',\n        duration: 10000,\n        position: 'middle'\n      });\n      \n      const mockPaymentResponse = await http.post(`/api/order/mock/pay/${resultId.replace('RES', '')}`);\n      console.log('模拟支付响应:', mockPaymentResponse.data);\n      \n      if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n        // 使用返回的resultId重新加载数据\n        const newResultId = mockPaymentResponse.data.data.resultId;\n        console.log('获取到新的resultId:', newResultId);\n        \n        const response = await http.get(`/api/bazi/result/${newResultId}`);\n        if (response.data.code === 200) {\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('数据加载成功');\n          return;\n        }\n      }\n    } catch (mockError) {\n      console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n    }\n    \n    // 如果模拟支付失败，尝试直接获取结果\n    const response = await http.get(`/api/bazi/result/${resultId}`);\n    \n    if (response.data.code === 200) {\n      baziData.value = response.data.data.baziChart;\n      aiAnalysis.value = response.data.data.aiAnalysis;\n      focusAreas.value = response.data.data.focusAreas;\n      Toast.success('数据加载成功');\n    } else {\n      Toast.fail(response.data.message || '加载失败');\n    }\n  } catch (error) {\n    console.error('重新加载失败:', error);\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\n  }\n};\n</script>\n\n<style scoped>\n.result-container {\n  padding-bottom: 20px;\n}\n\n.result-header {\n  text-align: center;\n  padding: 20px 0;\n  background-color: #f2f3f5;\n}\n\n.result-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #323233;\n}\n\n.result-header p {\n  margin: 10px 0 0;\n  font-size: 14px;\n  color: #969799;\n}\n\n.bazi-chart {\n  padding: 20px 16px;\n}\n\n.bazi-chart h3 {\n  margin: 20px 0 10px;\n  color: #323233;\n}\n\n.pillar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.stem {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #1989fa;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.branch {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #07c160;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.label {\n  font-size: 12px;\n  color: #646566;\n}\n\n.five-elements {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n}\n\n.element {\n  text-align: center;\n  flex: 1;\n}\n\n.element-name {\n  font-size: 14px;\n  color: #323233;\n}\n\n.element-value {\n  font-size: 18px;\n  font-weight: bold;\n  color: #1989fa;\n  margin-top: 5px;\n}\n\n.flowing-years {\n  margin: 20px 0;\n}\n\n.ai-analysis {\n  padding: 20px 16px;\n}\n\n.analysis-section {\n  margin-bottom: 20px;\n}\n\n.analysis-section h3 {\n  margin: 0 0 10px;\n  color: #323233;\n}\n\n.analysis-section p {\n  margin: 0;\n  font-size: 14px;\n  color: #646566;\n  line-height: 1.6;\n}\n\n.action-buttons {\n  padding: 20px 16px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}