{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { showToast } from 'vant';\nexport default {\n  __name: 'Home',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const showDatePicker = ref(false);\n    const showTimePicker = ref(false);\n    const currentDate = ref(new Date());\n\n    // 重新定义时辰数据为正确的格式\n    const timeData = [{\n      text: '子时 (23:00-01:00)'\n    }, {\n      text: '丑时 (01:00-03:00)'\n    }, {\n      text: '寅时 (03:00-05:00)'\n    }, {\n      text: '卯时 (05:00-07:00)'\n    }, {\n      text: '辰时 (07:00-09:00)'\n    }, {\n      text: '巳时 (09:00-11:00)'\n    }, {\n      text: '午时 (11:00-13:00)'\n    }, {\n      text: '未时 (13:00-15:00)'\n    }, {\n      text: '申时 (15:00-17:00)'\n    }, {\n      text: '酉时 (17:00-19:00)'\n    }, {\n      text: '戌时 (19:00-21:00)'\n    }, {\n      text: '亥时 (21:00-23:00)'\n    }];\n    const formData = reactive({\n      gender: 'male',\n      calendarType: 'solar',\n      birthDate: '',\n      birthTime: '',\n      focusAreas: []\n    });\n    const formatDate = date => {\n      // 确保月份和日期为两位数\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      return `${date.getFullYear()}-${month}-${day}`;\n    };\n    const onConfirmDate = value => {\n      // 检查value是否为数组，如果不是则使用当前日期\n      if (Array.isArray(value)) {\n        const [year, month, day] = value;\n        // 格式化月份和日期为两位数\n        const formattedMonth = month.toString().padStart(2, '0');\n        const formattedDay = day.toString().padStart(2, '0');\n        formData.birthDate = `${year}-${formattedMonth}-${formattedDay}`;\n      } else if (value && typeof value === 'object' && value.getFullYear) {\n        // 如果是Date对象，使用格式化函数\n        formData.birthDate = formatDate(value);\n      } else {\n        // 如果value不是数组也不是Date，使用currentDate的值\n        formData.birthDate = formatDate(currentDate.value);\n      }\n\n      // 确保关闭日期选择器并打印调试信息\n      console.log('选择的日期:', formData.birthDate);\n      showDatePicker.value = false;\n    };\n    const onConfirmTime = value => {\n      // 处理时辰选择结果\n      console.log('选择的时辰值:', value);\n      if (value && value[0] && value[0].text) {\n        formData.birthTime = value[0].text;\n      } else if (value && typeof value === 'string') {\n        formData.birthTime = value;\n      } else if (Array.isArray(value)) {\n        formData.birthTime = value.map(item => item.text || item).join(' ');\n      } else {\n        formData.birthTime = JSON.stringify(value);\n      }\n      console.log('设置的时辰:', formData.birthTime);\n      showTimePicker.value = false;\n    };\n    const onSubmit = () => {\n      // 表单验证\n      if (!formData.birthDate) {\n        showToast('请选择出生日期');\n        return;\n      }\n      if (!formData.birthTime) {\n        showToast('请选择出生时辰');\n        return;\n      }\n      if (formData.focusAreas.length === 0) {\n        showToast('请至少选择一个推算侧重点');\n        return;\n      }\n\n      // 创建订单并跳转到支付页面\n      // 实际项目中这里应该调用API创建订单\n      router.push({\n        path: '/payment',\n        query: {\n          gender: formData.gender,\n          calendarType: formData.calendarType,\n          birthDate: formData.birthDate,\n          birthTime: formData.birthTime,\n          focusAreas: formData.focusAreas.join(',')\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      showDatePicker,\n      showTimePicker,\n      currentDate,\n      timeData,\n      formData,\n      formatDate,\n      onConfirmDate,\n      onConfirmTime,\n      onSubmit,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","showToast","router","showDatePicker","showTimePicker","currentDate","Date","timeData","text","formData","gender","calendarType","birthDate","birthTime","focusAreas","formatDate","date","month","getMonth","toString","padStart","day","getDate","getFullYear","onConfirmDate","value","Array","isArray","year","formattedMonth","formattedDay","console","log","onConfirmTime","map","item","join","JSON","stringify","onSubmit","length","push","path","query"],"sources":["C:/Users/123/Desktop/开发八字命理AI指导功能页码/frontend/src/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <van-nav-bar title=\"八字命理AI人生指导\" />\n    \n    <div class=\"banner\">\n      <img src=\"./assets/banner.png\" alt=\"八字命理AI人生指导\" class=\"banner-img\">\n      <h2 class=\"slogan\">传统命理 · 现代科技 · 智慧人生</h2>\n    </div>\n    \n    <van-form @submit=\"onSubmit\">\n      <van-cell-group inset>\n        <van-field name=\"gender\" label=\"性别\">\n          <template #input>\n            <van-radio-group v-model=\"formData.gender\" direction=\"horizontal\">\n              <van-radio name=\"male\">男</van-radio>\n              <van-radio name=\"female\">女</van-radio>\n            </van-radio-group>\n          </template>\n        </van-field>\n        \n        <van-field name=\"calendarType\" label=\"历法选择\">\n          <template #input>\n            <van-radio-group v-model=\"formData.calendarType\" direction=\"horizontal\">\n              <van-radio name=\"solar\">公历</van-radio>\n              <van-radio name=\"lunar\">农历</van-radio>\n            </van-radio-group>\n          </template>\n        </van-field>\n        \n        <van-field\n          v-model=\"formData.birthDate\"\n          readonly\n          clickable\n          name=\"birthDate\"\n          label=\"出生日期\"\n          placeholder=\"点击选择日期\"\n          @click=\"showDatePicker = true\"\n        />\n        <van-popup :show=\"showDatePicker\" @update:show=\"showDatePicker = $event\" position=\"bottom\">\n          <van-date-picker\n            :model-value=\"[currentDate.getFullYear(), currentDate.getMonth() + 1, currentDate.getDate()]\"\n            @update:model-value=\"val => currentDate = new Date(val[0], val[1] - 1, val[2])\"\n            title=\"选择出生日期\"\n            :min-date=\"new Date(1900, 0, 1)\"\n            :max-date=\"new Date()\"\n            :columns-type=\"['year', 'month', 'day']\"\n            swipe-duration=\"300\"\n            :item-height=\"44\"\n            visible-item-count=\"5\"\n            @confirm=\"onConfirmDate\"\n            @cancel=\"showDatePicker = false\"\n          />\n        </van-popup>\n        \n        <van-field\n          v-model=\"formData.birthTime\"\n          readonly\n          clickable\n          name=\"birthTime\"\n          label=\"出生时辰\"\n          placeholder=\"点击选择时辰\"\n          @click=\"showTimePicker = true\"\n        />\n        <van-popup :show=\"showTimePicker\" @update:show=\"showTimePicker = $event\" position=\"bottom\">\n          <van-picker\n            show-toolbar\n            title=\"选择出生时辰\"\n            value-key=\"text\"\n            :columns=\"timeData\"\n            @confirm=\"onConfirmTime\"\n            @cancel=\"showTimePicker = false\"\n          />\n        </van-popup>\n        \n        <van-field name=\"focusAreas\" label=\"推算侧重点\">\n          <template #input>\n            <van-checkbox-group v-model=\"formData.focusAreas\" direction=\"horizontal\">\n              <van-checkbox name=\"health\">身体健康</van-checkbox>\n              <van-checkbox name=\"wealth\">财运</van-checkbox>\n              <van-checkbox name=\"career\">事业</van-checkbox>\n              <van-checkbox name=\"relationship\">婚姻感情</van-checkbox>\n              <van-checkbox name=\"children\">子女</van-checkbox>\n            </van-checkbox-group>\n          </template>\n        </van-field>\n      </van-cell-group>\n      \n      <div style=\"margin: 16px;\">\n        <van-button round block type=\"primary\" native-type=\"submit\">\n          提交并支付 (9.9元)\n        </van-button>\n      </div>\n    </van-form>\n    \n    <div class=\"intro-section\">\n      <h3>八字命理AI人生指导系统</h3>\n      <p>本系统结合传统八字命理理论与现代人工智能技术，为您提供个性化的人生指导建议。通过分析您的八字命盘和流年大运信息，AI将为您解读人生各方面的发展趋势和潜在机遇。</p>\n      \n      <h3>使用流程</h3>\n      <van-steps direction=\"vertical\" :active=\"0\">\n        <van-step>\n          <h3>填写信息</h3>\n          <p>输入性别、出生年月日时和关注领域</p>\n        </van-step>\n        <van-step>\n          <h3>完成支付</h3>\n          <p>支付9.9元获取专业分析</p>\n        </van-step>\n        <van-step>\n          <h3>AI分析</h3>\n          <p>系统计算八字并通过AI进行解读</p>\n        </van-step>\n        <van-step>\n          <h3>查看结果</h3>\n          <p>获取详细分析报告并可下载PDF</p>\n        </van-step>\n      </van-steps>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { showToast } from 'vant';\n\nconst router = useRouter();\nconst showDatePicker = ref(false);\nconst showTimePicker = ref(false);\nconst currentDate = ref(new Date());\n\n// 重新定义时辰数据为正确的格式\nconst timeData = [\n  { text: '子时 (23:00-01:00)' },\n  { text: '丑时 (01:00-03:00)' },\n  { text: '寅时 (03:00-05:00)' },\n  { text: '卯时 (05:00-07:00)' },\n  { text: '辰时 (07:00-09:00)' },\n  { text: '巳时 (09:00-11:00)' },\n  { text: '午时 (11:00-13:00)' },\n  { text: '未时 (13:00-15:00)' },\n  { text: '申时 (15:00-17:00)' },\n  { text: '酉时 (17:00-19:00)' },\n  { text: '戌时 (19:00-21:00)' },\n  { text: '亥时 (21:00-23:00)' }\n];\n\nconst formData = reactive({\n  gender: 'male',\n  calendarType: 'solar',\n  birthDate: '',\n  birthTime: '',\n  focusAreas: []\n});\n\nconst formatDate = (date) => {\n  // 确保月份和日期为两位数\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${date.getFullYear()}-${month}-${day}`;\n};\n\nconst onConfirmDate = (value) => {\n  // 检查value是否为数组，如果不是则使用当前日期\n  if (Array.isArray(value)) {\n    const [year, month, day] = value;\n    // 格式化月份和日期为两位数\n    const formattedMonth = month.toString().padStart(2, '0');\n    const formattedDay = day.toString().padStart(2, '0');\n    formData.birthDate = `${year}-${formattedMonth}-${formattedDay}`;\n  } else if (value && typeof value === 'object' && value.getFullYear) {\n    // 如果是Date对象，使用格式化函数\n    formData.birthDate = formatDate(value);\n  } else {\n    // 如果value不是数组也不是Date，使用currentDate的值\n    formData.birthDate = formatDate(currentDate.value);\n  }\n  \n  // 确保关闭日期选择器并打印调试信息\n  console.log('选择的日期:', formData.birthDate);\n  showDatePicker.value = false;\n};\n\nconst onConfirmTime = (value) => {\n  // 处理时辰选择结果\n  console.log('选择的时辰值:', value);\n  if (value && value[0] && value[0].text) {\n    formData.birthTime = value[0].text;\n  } else if (value && typeof value === 'string') {\n    formData.birthTime = value;\n  } else if (Array.isArray(value)) {\n    formData.birthTime = value.map(item => item.text || item).join(' ');\n  } else {\n    formData.birthTime = JSON.stringify(value);\n  }\n  console.log('设置的时辰:', formData.birthTime);\n  showTimePicker.value = false;\n};\n\nconst onSubmit = () => {\n  // 表单验证\n  if (!formData.birthDate) {\n    showToast('请选择出生日期');\n    return;\n  }\n  \n  if (!formData.birthTime) {\n    showToast('请选择出生时辰');\n    return;\n  }\n  \n  if (formData.focusAreas.length === 0) {\n    showToast('请至少选择一个推算侧重点');\n    return;\n  }\n  \n  // 创建订单并跳转到支付页面\n  // 实际项目中这里应该调用API创建订单\n  router.push({\n    path: '/payment',\n    query: {\n      gender: formData.gender,\n      calendarType: formData.calendarType,\n      birthDate: formData.birthDate,\n      birthTime: formData.birthTime,\n      focusAreas: formData.focusAreas.join(',')\n    }\n  });\n};\n</script>\n\n<style>\n.home-container {\n  padding-bottom: 20px;\n}\n\n.banner {\n  text-align: center;\n  padding: 20px 15px;\n  background-color: #f7f8fa;\n}\n\n.banner-img {\n  width: 100%;\n  max-width: 300px;\n  border-radius: 8px;\n}\n\n.slogan {\n  margin-top: 10px;\n  font-size: 16px;\n  color: #666;\n}\n\n.intro-section {\n  padding: 20px 16px;\n  background-color: #fff;\n  margin-top: 20px;\n}\n\n.intro-section h3 {\n  margin-bottom: 10px;\n  font-size: 18px;\n  color: #323233;\n}\n\n.intro-section p {\n  color: #666;\n  font-size: 14px;\n  line-height: 1.6;\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}