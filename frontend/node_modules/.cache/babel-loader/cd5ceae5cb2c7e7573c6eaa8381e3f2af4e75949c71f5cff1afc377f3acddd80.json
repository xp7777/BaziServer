{"ast":null,"code":"import { computed, defineComponent, ref, watch, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { formatValueRange, genOptions, pickerInheritKeys, sharedProps } from \"../date-picker/utils.mjs\";\nimport { pick, extend, isSameValue, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Picker } from \"../picker/index.mjs\";\nconst [name] = createNamespace(\"time-picker\");\nconst validateTime = val => /^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$/.test(val);\nconst fullColumns = [\"hour\", \"minute\", \"second\"];\nconst timePickerProps = extend({}, sharedProps, {\n  minHour: makeNumericProp(0),\n  maxHour: makeNumericProp(23),\n  minMinute: makeNumericProp(0),\n  maxMinute: makeNumericProp(59),\n  minSecond: makeNumericProp(0),\n  maxSecond: makeNumericProp(59),\n  minTime: {\n    type: String,\n    validator: validateTime\n  },\n  maxTime: {\n    type: String,\n    validator: validateTime\n  },\n  columnsType: {\n    type: Array,\n    default: () => [\"hour\", \"minute\"]\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: timePickerProps,\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const currentValues = ref(props.modelValue);\n    const pickerRef = ref();\n    const getValidTime = time => {\n      const timeLimitArr = time.split(\":\");\n      return fullColumns.map((col, i) => props.columnsType.includes(col) ? timeLimitArr[i] : \"00\");\n    };\n    const confirm = () => {\n      var _a;\n      return (_a = pickerRef.value) == null ? void 0 : _a.confirm();\n    };\n    const getSelectedTime = () => currentValues.value;\n    const columns = computed(() => {\n      let {\n        minHour,\n        maxHour,\n        minMinute,\n        maxMinute,\n        minSecond,\n        maxSecond\n      } = props;\n      if (props.minTime || props.maxTime) {\n        const fullTime = {\n          hour: 0,\n          minute: 0,\n          second: 0\n        };\n        props.columnsType.forEach((col, i) => {\n          var _a;\n          fullTime[col] = (_a = currentValues.value[i]) != null ? _a : 0;\n        });\n        const {\n          hour,\n          minute\n        } = fullTime;\n        if (props.minTime) {\n          const [minH, minM, minS] = getValidTime(props.minTime);\n          minHour = minH;\n          minMinute = +hour <= +minHour ? minM : \"00\";\n          minSecond = +hour <= +minHour && +minute <= +minMinute ? minS : \"00\";\n        }\n        if (props.maxTime) {\n          const [maxH, maxM, maxS] = getValidTime(props.maxTime);\n          maxHour = maxH;\n          maxMinute = +hour >= +maxHour ? maxM : \"59\";\n          maxSecond = +hour >= +maxHour && +minute >= +maxMinute ? maxS : \"59\";\n        }\n      }\n      return props.columnsType.map(type => {\n        const {\n          filter,\n          formatter\n        } = props;\n        switch (type) {\n          case \"hour\":\n            return genOptions(+minHour, +maxHour, type, formatter, filter, currentValues.value);\n          case \"minute\":\n            return genOptions(+minMinute, +maxMinute, type, formatter, filter, currentValues.value);\n          case \"second\":\n            return genOptions(+minSecond, +maxSecond, type, formatter, filter, currentValues.value);\n          default:\n            if (process.env.NODE_ENV !== \"production\") {\n              throw new Error(`[Vant] DatePicker: unsupported columns type: ${type}`);\n            }\n            return [];\n        }\n      });\n    });\n    watch(currentValues, newValues => {\n      if (!isSameValue(newValues, props.modelValue)) {\n        emit(\"update:modelValue\", newValues);\n      }\n    });\n    watch(() => props.modelValue, newValues => {\n      newValues = formatValueRange(newValues, columns.value);\n      if (!isSameValue(newValues, currentValues.value)) {\n        currentValues.value = newValues;\n      }\n    }, {\n      immediate: true\n    });\n    const onChange = (...args) => emit(\"change\", ...args);\n    const onCancel = (...args) => emit(\"cancel\", ...args);\n    const onConfirm = (...args) => emit(\"confirm\", ...args);\n    useExpose({\n      confirm,\n      getSelectedTime\n    });\n    return () => _createVNode(Picker, _mergeProps({\n      \"ref\": pickerRef,\n      \"modelValue\": currentValues.value,\n      \"onUpdate:modelValue\": $event => currentValues.value = $event,\n      \"columns\": columns.value,\n      \"onChange\": onChange,\n      \"onCancel\": onCancel,\n      \"onConfirm\": onConfirm\n    }, pick(props, pickerInheritKeys)), slots);\n  }\n});\nexport { stdin_default as default, timePickerProps };","map":{"version":3,"names":["computed","defineComponent","ref","watch","mergeProps","_mergeProps","createVNode","_createVNode","formatValueRange","genOptions","pickerInheritKeys","sharedProps","pick","extend","isSameValue","makeNumericProp","createNamespace","useExpose","Picker","name","validateTime","val","test","fullColumns","timePickerProps","minHour","maxHour","minMinute","maxMinute","minSecond","maxSecond","minTime","type","String","validator","maxTime","columnsType","Array","default","stdin_default","props","emits","setup","emit","slots","currentValues","modelValue","pickerRef","getValidTime","time","timeLimitArr","split","map","col","i","includes","confirm","_a","value","getSelectedTime","columns","fullTime","hour","minute","second","forEach","minH","minM","minS","maxH","maxM","maxS","filter","formatter","process","env","NODE_ENV","Error","newValues","immediate","onChange","args","onCancel","onConfirm","$event"],"sources":["C:/Users/Administrator/Desktop/开发八字命理AI指导功能页码/frontend/node_modules/vant/es/time-picker/TimePicker.mjs"],"sourcesContent":["import { computed, defineComponent, ref, watch, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { formatValueRange, genOptions, pickerInheritKeys, sharedProps } from \"../date-picker/utils.mjs\";\nimport { pick, extend, isSameValue, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Picker } from \"../picker/index.mjs\";\nconst [name] = createNamespace(\"time-picker\");\nconst validateTime = (val) => /^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$/.test(val);\nconst fullColumns = [\"hour\", \"minute\", \"second\"];\nconst timePickerProps = extend({}, sharedProps, {\n  minHour: makeNumericProp(0),\n  maxHour: makeNumericProp(23),\n  minMinute: makeNumericProp(0),\n  maxMinute: makeNumericProp(59),\n  minSecond: makeNumericProp(0),\n  maxSecond: makeNumericProp(59),\n  minTime: {\n    type: String,\n    validator: validateTime\n  },\n  maxTime: {\n    type: String,\n    validator: validateTime\n  },\n  columnsType: {\n    type: Array,\n    default: () => [\"hour\", \"minute\"]\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: timePickerProps,\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const currentValues = ref(props.modelValue);\n    const pickerRef = ref();\n    const getValidTime = (time) => {\n      const timeLimitArr = time.split(\":\");\n      return fullColumns.map((col, i) => props.columnsType.includes(col) ? timeLimitArr[i] : \"00\");\n    };\n    const confirm = () => {\n      var _a;\n      return (_a = pickerRef.value) == null ? void 0 : _a.confirm();\n    };\n    const getSelectedTime = () => currentValues.value;\n    const columns = computed(() => {\n      let {\n        minHour,\n        maxHour,\n        minMinute,\n        maxMinute,\n        minSecond,\n        maxSecond\n      } = props;\n      if (props.minTime || props.maxTime) {\n        const fullTime = {\n          hour: 0,\n          minute: 0,\n          second: 0\n        };\n        props.columnsType.forEach((col, i) => {\n          var _a;\n          fullTime[col] = (_a = currentValues.value[i]) != null ? _a : 0;\n        });\n        const {\n          hour,\n          minute\n        } = fullTime;\n        if (props.minTime) {\n          const [minH, minM, minS] = getValidTime(props.minTime);\n          minHour = minH;\n          minMinute = +hour <= +minHour ? minM : \"00\";\n          minSecond = +hour <= +minHour && +minute <= +minMinute ? minS : \"00\";\n        }\n        if (props.maxTime) {\n          const [maxH, maxM, maxS] = getValidTime(props.maxTime);\n          maxHour = maxH;\n          maxMinute = +hour >= +maxHour ? maxM : \"59\";\n          maxSecond = +hour >= +maxHour && +minute >= +maxMinute ? maxS : \"59\";\n        }\n      }\n      return props.columnsType.map((type) => {\n        const {\n          filter,\n          formatter\n        } = props;\n        switch (type) {\n          case \"hour\":\n            return genOptions(+minHour, +maxHour, type, formatter, filter, currentValues.value);\n          case \"minute\":\n            return genOptions(+minMinute, +maxMinute, type, formatter, filter, currentValues.value);\n          case \"second\":\n            return genOptions(+minSecond, +maxSecond, type, formatter, filter, currentValues.value);\n          default:\n            if (process.env.NODE_ENV !== \"production\") {\n              throw new Error(`[Vant] DatePicker: unsupported columns type: ${type}`);\n            }\n            return [];\n        }\n      });\n    });\n    watch(currentValues, (newValues) => {\n      if (!isSameValue(newValues, props.modelValue)) {\n        emit(\"update:modelValue\", newValues);\n      }\n    });\n    watch(() => props.modelValue, (newValues) => {\n      newValues = formatValueRange(newValues, columns.value);\n      if (!isSameValue(newValues, currentValues.value)) {\n        currentValues.value = newValues;\n      }\n    }, {\n      immediate: true\n    });\n    const onChange = (...args) => emit(\"change\", ...args);\n    const onCancel = (...args) => emit(\"cancel\", ...args);\n    const onConfirm = (...args) => emit(\"confirm\", ...args);\n    useExpose({\n      confirm,\n      getSelectedTime\n    });\n    return () => _createVNode(Picker, _mergeProps({\n      \"ref\": pickerRef,\n      \"modelValue\": currentValues.value,\n      \"onUpdate:modelValue\": ($event) => currentValues.value = $event,\n      \"columns\": columns.value,\n      \"onChange\": onChange,\n      \"onCancel\": onCancel,\n      \"onConfirm\": onConfirm\n    }, pick(props, pickerInheritKeys)), slots);\n  }\n});\nexport {\n  stdin_default as default,\n  timePickerProps\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}