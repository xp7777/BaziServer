{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, reactive, defineComponent } from \"vue\";\nimport { clamp, numericProp, preventDefault, createNamespace, makeRequiredProp } from \"../utils\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { Image } from \"../image\";\nimport { Loading } from \"../loading\";\nimport { SwipeItem } from \"../swipe-item\";\nconst getDistance = touches => Math.sqrt((touches[0].clientX - touches[1].clientX) ** 2 + (touches[0].clientY - touches[1].clientY) ** 2);\nconst bem = createNamespace(\"image-preview\")[1];\nvar stdin_default = defineComponent({\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: makeRequiredProp(numericProp),\n    maxZoom: makeRequiredProp(numericProp),\n    rootWidth: makeRequiredProp(Number),\n    rootHeight: makeRequiredProp(Number)\n  },\n  emits: [\"scale\", \"close\"],\n  setup(props, {\n    emit\n  }) {\n    const state = reactive({\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    });\n    const touch = useTouch();\n    const vertical = computed(() => {\n      const {\n        rootWidth,\n        rootHeight\n      } = props;\n      const rootRatio = rootHeight / rootWidth;\n      return state.imageRatio > rootRatio;\n    });\n    const imageStyle = computed(() => {\n      const {\n        scale,\n        moveX,\n        moveY,\n        moving,\n        zooming\n      } = state;\n      const style = {\n        transitionDuration: zooming || moving ? \"0s\" : \".3s\"\n      };\n      if (scale !== 1) {\n        const offsetX = moveX / scale;\n        const offsetY = moveY / scale;\n        style.transform = `scale(${scale}, ${scale}) translate(${offsetX}px, ${offsetY}px)`;\n      }\n      return style;\n    });\n    const maxMoveX = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayWidth = vertical.value ? rootHeight / state.imageRatio : rootWidth;\n        return Math.max(0, (state.scale * displayWidth - rootWidth) / 2);\n      }\n      return 0;\n    });\n    const maxMoveY = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayHeight = vertical.value ? rootHeight : rootWidth * state.imageRatio;\n        return Math.max(0, (state.scale * displayHeight - rootHeight) / 2);\n      }\n      return 0;\n    });\n    const setScale = scale => {\n      scale = clamp(scale, +props.minZoom, +props.maxZoom + 1);\n      if (scale !== state.scale) {\n        state.scale = scale;\n        emit(\"scale\", {\n          scale,\n          index: props.active\n        });\n      }\n    };\n    const resetScale = () => {\n      setScale(1);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    const toggleScale = () => {\n      const scale = state.scale > 1 ? 1 : 2;\n      setScale(scale);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    let fingerNum;\n    let startMoveX;\n    let startMoveY;\n    let startScale;\n    let startDistance;\n    let doubleTapTimer;\n    let touchStartTime;\n    const onTouchStart = event => {\n      const {\n        touches\n      } = event;\n      const {\n        offsetX\n      } = touch;\n      touch.start(event);\n      fingerNum = touches.length;\n      startMoveX = state.moveX;\n      startMoveY = state.moveY;\n      touchStartTime = Date.now();\n      state.moving = fingerNum === 1 && state.scale !== 1;\n      state.zooming = fingerNum === 2 && !offsetX.value;\n      if (state.zooming) {\n        startScale = state.scale;\n        startDistance = getDistance(event.touches);\n      }\n    };\n    const onTouchMove = event => {\n      const {\n        touches\n      } = event;\n      touch.move(event);\n      if (state.moving || state.zooming) {\n        preventDefault(event, true);\n      }\n      if (state.moving) {\n        const {\n          deltaX,\n          deltaY\n        } = touch;\n        const moveX = deltaX.value + startMoveX;\n        const moveY = deltaY.value + startMoveY;\n        state.moveX = clamp(moveX, -maxMoveX.value, maxMoveX.value);\n        state.moveY = clamp(moveY, -maxMoveY.value, maxMoveY.value);\n      }\n      if (state.zooming && touches.length === 2) {\n        const distance = getDistance(touches);\n        const scale = startScale * distance / startDistance;\n        setScale(scale);\n      }\n    };\n    const checkTap = () => {\n      if (fingerNum > 1) {\n        return;\n      }\n      const {\n        offsetX,\n        offsetY\n      } = touch;\n      const deltaTime = Date.now() - touchStartTime;\n      const TAP_TIME = 250;\n      const TAP_OFFSET = 5;\n      if (offsetX.value < TAP_OFFSET && offsetY.value < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (doubleTapTimer) {\n          clearTimeout(doubleTapTimer);\n          doubleTapTimer = null;\n          toggleScale();\n        } else {\n          doubleTapTimer = setTimeout(() => {\n            emit(\"close\");\n            doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    };\n    const onTouchEnd = event => {\n      let stopPropagation = false;\n      if (state.moving || state.zooming) {\n        stopPropagation = true;\n        if (state.moving && startMoveX === state.moveX && startMoveY === state.moveY) {\n          stopPropagation = false;\n        }\n        if (!event.touches.length) {\n          if (state.zooming) {\n            state.moveX = clamp(state.moveX, -maxMoveX.value, maxMoveX.value);\n            state.moveY = clamp(state.moveY, -maxMoveY.value, maxMoveY.value);\n            state.zooming = false;\n          }\n          state.moving = false;\n          startMoveX = 0;\n          startMoveY = 0;\n          startScale = 1;\n          if (state.scale < 1) {\n            resetScale();\n          }\n          if (state.scale > props.maxZoom) {\n            state.scale = +props.maxZoom;\n          }\n        }\n      }\n      preventDefault(event, stopPropagation);\n      checkTap();\n      touch.reset();\n    };\n    const onLoad = event => {\n      const {\n        naturalWidth,\n        naturalHeight\n      } = event.target;\n      state.imageRatio = naturalHeight / naturalWidth;\n    };\n    watch(() => props.active, resetScale);\n    watch(() => props.show, value => {\n      if (!value) {\n        resetScale();\n      }\n    });\n    return () => {\n      const imageSlots = {\n        loading: () => _createVNode(Loading, {\n          \"type\": \"spinner\"\n        }, null)\n      };\n      return _createVNode(SwipeItem, {\n        \"class\": bem(\"swipe-item\"),\n        \"onTouchstart\": onTouchStart,\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, {\n        default: () => [_createVNode(Image, {\n          \"src\": props.src,\n          \"fit\": \"contain\",\n          \"class\": bem(\"image\", {\n            vertical: vertical.value\n          }),\n          \"style\": imageStyle.value,\n          \"onLoad\": onLoad\n        }, imageSlots)]\n      });\n    };\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","watch","computed","reactive","defineComponent","clamp","numericProp","preventDefault","createNamespace","makeRequiredProp","useTouch","Image","Loading","SwipeItem","getDistance","touches","Math","sqrt","clientX","clientY","bem","stdin_default","props","src","String","show","Boolean","active","Number","minZoom","maxZoom","rootWidth","rootHeight","emits","setup","emit","state","scale","moveX","moveY","moving","zooming","imageRatio","displayWidth","displayHeight","touch","vertical","rootRatio","imageStyle","style","transitionDuration","offsetX","offsetY","transform","maxMoveX","value","max","maxMoveY","setScale","index","resetScale","toggleScale","fingerNum","startMoveX","startMoveY","startScale","startDistance","doubleTapTimer","touchStartTime","onTouchStart","event","start","length","Date","now","onTouchMove","move","deltaX","deltaY","distance","checkTap","deltaTime","TAP_TIME","TAP_OFFSET","clearTimeout","setTimeout","onTouchEnd","stopPropagation","reset","onLoad","naturalWidth","naturalHeight","target","imageSlots","loading","default"],"sources":["C:/Users/Administrator/Desktop/开发八字命理AI指导功能页码/frontend/node_modules/vant/es/image-preview/ImagePreviewItem.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, reactive, defineComponent } from \"vue\";\nimport { clamp, numericProp, preventDefault, createNamespace, makeRequiredProp } from \"../utils\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { Image } from \"../image\";\nimport { Loading } from \"../loading\";\nimport { SwipeItem } from \"../swipe-item\";\nconst getDistance = (touches) => Math.sqrt((touches[0].clientX - touches[1].clientX) ** 2 + (touches[0].clientY - touches[1].clientY) ** 2);\nconst bem = createNamespace(\"image-preview\")[1];\nvar stdin_default = defineComponent({\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: makeRequiredProp(numericProp),\n    maxZoom: makeRequiredProp(numericProp),\n    rootWidth: makeRequiredProp(Number),\n    rootHeight: makeRequiredProp(Number)\n  },\n  emits: [\"scale\", \"close\"],\n  setup(props, {\n    emit\n  }) {\n    const state = reactive({\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    });\n    const touch = useTouch();\n    const vertical = computed(() => {\n      const {\n        rootWidth,\n        rootHeight\n      } = props;\n      const rootRatio = rootHeight / rootWidth;\n      return state.imageRatio > rootRatio;\n    });\n    const imageStyle = computed(() => {\n      const {\n        scale,\n        moveX,\n        moveY,\n        moving,\n        zooming\n      } = state;\n      const style = {\n        transitionDuration: zooming || moving ? \"0s\" : \".3s\"\n      };\n      if (scale !== 1) {\n        const offsetX = moveX / scale;\n        const offsetY = moveY / scale;\n        style.transform = `scale(${scale}, ${scale}) translate(${offsetX}px, ${offsetY}px)`;\n      }\n      return style;\n    });\n    const maxMoveX = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayWidth = vertical.value ? rootHeight / state.imageRatio : rootWidth;\n        return Math.max(0, (state.scale * displayWidth - rootWidth) / 2);\n      }\n      return 0;\n    });\n    const maxMoveY = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayHeight = vertical.value ? rootHeight : rootWidth * state.imageRatio;\n        return Math.max(0, (state.scale * displayHeight - rootHeight) / 2);\n      }\n      return 0;\n    });\n    const setScale = (scale) => {\n      scale = clamp(scale, +props.minZoom, +props.maxZoom + 1);\n      if (scale !== state.scale) {\n        state.scale = scale;\n        emit(\"scale\", {\n          scale,\n          index: props.active\n        });\n      }\n    };\n    const resetScale = () => {\n      setScale(1);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    const toggleScale = () => {\n      const scale = state.scale > 1 ? 1 : 2;\n      setScale(scale);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    let fingerNum;\n    let startMoveX;\n    let startMoveY;\n    let startScale;\n    let startDistance;\n    let doubleTapTimer;\n    let touchStartTime;\n    const onTouchStart = (event) => {\n      const {\n        touches\n      } = event;\n      const {\n        offsetX\n      } = touch;\n      touch.start(event);\n      fingerNum = touches.length;\n      startMoveX = state.moveX;\n      startMoveY = state.moveY;\n      touchStartTime = Date.now();\n      state.moving = fingerNum === 1 && state.scale !== 1;\n      state.zooming = fingerNum === 2 && !offsetX.value;\n      if (state.zooming) {\n        startScale = state.scale;\n        startDistance = getDistance(event.touches);\n      }\n    };\n    const onTouchMove = (event) => {\n      const {\n        touches\n      } = event;\n      touch.move(event);\n      if (state.moving || state.zooming) {\n        preventDefault(event, true);\n      }\n      if (state.moving) {\n        const {\n          deltaX,\n          deltaY\n        } = touch;\n        const moveX = deltaX.value + startMoveX;\n        const moveY = deltaY.value + startMoveY;\n        state.moveX = clamp(moveX, -maxMoveX.value, maxMoveX.value);\n        state.moveY = clamp(moveY, -maxMoveY.value, maxMoveY.value);\n      }\n      if (state.zooming && touches.length === 2) {\n        const distance = getDistance(touches);\n        const scale = startScale * distance / startDistance;\n        setScale(scale);\n      }\n    };\n    const checkTap = () => {\n      if (fingerNum > 1) {\n        return;\n      }\n      const {\n        offsetX,\n        offsetY\n      } = touch;\n      const deltaTime = Date.now() - touchStartTime;\n      const TAP_TIME = 250;\n      const TAP_OFFSET = 5;\n      if (offsetX.value < TAP_OFFSET && offsetY.value < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (doubleTapTimer) {\n          clearTimeout(doubleTapTimer);\n          doubleTapTimer = null;\n          toggleScale();\n        } else {\n          doubleTapTimer = setTimeout(() => {\n            emit(\"close\");\n            doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    };\n    const onTouchEnd = (event) => {\n      let stopPropagation = false;\n      if (state.moving || state.zooming) {\n        stopPropagation = true;\n        if (state.moving && startMoveX === state.moveX && startMoveY === state.moveY) {\n          stopPropagation = false;\n        }\n        if (!event.touches.length) {\n          if (state.zooming) {\n            state.moveX = clamp(state.moveX, -maxMoveX.value, maxMoveX.value);\n            state.moveY = clamp(state.moveY, -maxMoveY.value, maxMoveY.value);\n            state.zooming = false;\n          }\n          state.moving = false;\n          startMoveX = 0;\n          startMoveY = 0;\n          startScale = 1;\n          if (state.scale < 1) {\n            resetScale();\n          }\n          if (state.scale > props.maxZoom) {\n            state.scale = +props.maxZoom;\n          }\n        }\n      }\n      preventDefault(event, stopPropagation);\n      checkTap();\n      touch.reset();\n    };\n    const onLoad = (event) => {\n      const {\n        naturalWidth,\n        naturalHeight\n      } = event.target;\n      state.imageRatio = naturalHeight / naturalWidth;\n    };\n    watch(() => props.active, resetScale);\n    watch(() => props.show, (value) => {\n      if (!value) {\n        resetScale();\n      }\n    });\n    return () => {\n      const imageSlots = {\n        loading: () => _createVNode(Loading, {\n          \"type\": \"spinner\"\n        }, null)\n      };\n      return _createVNode(SwipeItem, {\n        \"class\": bem(\"swipe-item\"),\n        \"onTouchstart\": onTouchStart,\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, {\n        default: () => [_createVNode(Image, {\n          \"src\": props.src,\n          \"fit\": \"contain\",\n          \"class\": bem(\"image\", {\n            vertical: vertical.value\n          }),\n          \"style\": imageStyle.value,\n          \"onLoad\": onLoad\n        }, imageSlots)]\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}