{"ast":null,"code":"import { ref, onMounted, reactive, computed, watch, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport MarkdownIt from 'markdown-it'; // 添加markdown-it导入\n\n// 创建markdown解析器实例\n\nexport default {\n  __name: 'Result',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const md = new MarkdownIt({\n      html: true,\n      breaks: true,\n      linkify: true,\n      typographer: true\n    });\n    const route = useRoute();\n    const router = useRouter();\n    const resultId = ref(route.params.id || route.query.resultId);\n    const activeTab = ref(0);\n    const loading = ref(false);\n\n    // 添加分析状态相关变量\n    const isAnalyzing = ref(false);\n    const analyzeProgress = ref(0);\n    const analyzeTimer = ref(null);\n\n    // 渲染Markdown内容\n    const renderMarkdown = content => {\n      if (!content) return '';\n      try {\n        // 检查内容是否已经是HTML\n        if (content.includes('<') && content.includes('>')) {\n          // 如果已经含有HTML标签，可能已经被渲染过，直接返回\n          return content;\n        }\n        return md.render(content);\n      } catch (e) {\n        console.error('Markdown渲染失败:', e);\n        return content; // 如果渲染失败，返回原始内容\n      }\n    };\n\n    // 用户年龄，从URL参数或localStorage获取\n    const userAge = ref(null);\n    // 尝试从URL参数获取年龄\n    if (route.query.age && !isNaN(parseInt(route.query.age))) {\n      userAge.value = parseInt(route.query.age);\n    }\n    // 如果URL参数中没有年龄，尝试从localStorage获取\n    else if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n      userAge.value = parseInt(localStorage.getItem('userAge'));\n    }\n    // 记录用户年龄到控制台，便于调试\n    console.log('用户年龄:', userAge.value);\n\n    // 从分析文本中提取特定部分内容\n    const getAnalysisContent = sectionName => {\n      try {\n        // 如果是性格特点或学业发展，直接从对应字段获取\n        if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n          return aiAnalysis.value.personality;\n        }\n        if (sectionName === '学业发展' && aiAnalysis.value.education) {\n          return aiAnalysis.value.education;\n        }\n\n        // 处理健康分析文本，尝试提取学业、性格等内容\n        if (aiAnalysis.value.health) {\n          const healthText = aiAnalysis.value.health;\n\n          // 查找各部分的标记\n          const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n          if (sectionMatch && sectionMatch[1]) {\n            return sectionMatch[1].trim();\n          }\n\n          // 如果是未来发展，尝试从overall中提取\n          if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n            const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n            if (futureMatch && futureMatch[2]) {\n              return futureMatch[2].trim();\n            }\n          }\n        }\n\n        // 如果没有找到对应部分或提取失败，返回空字符串\n        return '';\n      } catch (e) {\n        console.error(`提取${sectionName}内容时出错:`, e);\n        return '';\n      }\n    };\n\n    // 修改数据初始化\n    const focusAreas = ref([]);\n    const analysisResult = ref({});\n\n    // 初始化八字数据\n    const baziData = ref({\n      yearPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      monthPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      dayPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      hourPillar: {\n        heavenlyStem: '',\n        earthlyBranch: '',\n        naYin: '',\n        shiShen: '',\n        wangShuai: ''\n      },\n      fiveElements: {},\n      flowingYears: [],\n      shenSha: {\n        dayChong: '',\n        zhiShen: '',\n        xiShen: '',\n        fuShen: '',\n        caiShen: '',\n        benMing: [],\n        yearGan: [],\n        yearZhi: [],\n        dayGan: [],\n        dayZhi: []\n      },\n      daYun: {\n        startAge: 0,\n        startYear: 0,\n        isForward: true,\n        daYunList: []\n      },\n      birthDate: null,\n      birthTime: null,\n      gender: null\n    });\n\n    // 初始化分析数据\n    const aiAnalysis = ref({\n      health: '',\n      career: '',\n      relationship: '',\n      children: '',\n      social: '',\n      future: '',\n      parents: '',\n      education: '',\n      // 新增字段\n      coreAnalysis: '',\n      fiveElements: '',\n      shenShaAnalysis: '',\n      keyPoints: ''\n    });\n    const testApiConnection = async () => {\n      try {\n        Toast.loading('正在测试API连接...');\n        // 使用配置好的http实例\n        const response = await axios.get('/');\n        console.log('API根路径响应:', response.data);\n        Toast.success('API连接成功');\n        return true;\n      } catch (error) {\n        console.error('API连接测试失败:', error);\n        Toast.fail('API连接失败，请检查后端服务');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 先测试API连接\n      const isApiConnected = await testApiConnection();\n      if (!isApiConnected) {\n        console.warn('API连接失败，将使用模拟数据');\n        loading.value = false;\n        return;\n      }\n      console.log('结果页面加载，URL参数中的ID:', resultId.value);\n\n      // 如果没有resultId，尝试从本地存储获取\n      const localResultId = localStorage.getItem('resultId');\n      if (!resultId.value && localResultId) {\n        console.log('从本地存储获取ID:', localResultId);\n        // 更新resultId为从本地存储获取的值\n        resultId.value = localResultId;\n      }\n\n      // 确保resultId是字符串类型，不是布尔值或其他数据类型\n      if (resultId.value === true || resultId.value === false) {\n        console.error('resultId不应该是布尔值:', resultId.value);\n        resultId.value = localResultId || route.query.resultId || '';\n      }\n      console.log('最终使用的resultId:', resultId.value);\n\n      // 如果resultId为空或无效，显示错误并尝试从URL查询参数获取\n      if (!resultId.value) {\n        console.error('缺少结果ID，无法获取分析结果');\n\n        // 尝试从URL查询参数获取备选ID\n        const urlResultId = route.query.resultId;\n        if (urlResultId) {\n          console.log('从URL查询参数获取备选ID:', urlResultId);\n          resultId.value = urlResultId;\n        } else {\n          Toast.fail('缺少结果ID，无法获取分析结果');\n          loading.value = false;\n          return;\n        }\n      }\n\n      // 存储确认的resultId到本地存储\n      localStorage.setItem('resultId', resultId.value);\n\n      // 显示加载提示\n      Toast.loading({\n        message: '正在加载八字分析结果，请稍候...',\n        duration: 0,\n        forbidClick: true\n      });\n\n      // 调用getBaziResult函数获取结果\n      await getBaziResult();\n\n      // 检查分析是否完成\n      const stillAnalyzing = Object.values(aiAnalysis.value).some(value => typeof value === 'string' && value.includes('正在分析'));\n      if (stillAnalyzing) {\n        console.log('检测到分析仍在进行中...');\n        Toast.loading({\n          message: '正在生成八字分析结果，这可能需要30-60秒...',\n          duration: 0\n        });\n\n        // 启动轮询\n        await pollAnalysisStatus(resultId.value);\n        Toast.success('分析完成');\n      }\n\n      // 关闭加载提示\n      Toast.clear();\n    });\n    const getElementName = element => {\n      if (!element) return '--';\n      const elementNames = {\n        'wood': '木',\n        'fire': '火',\n        'earth': '土',\n        'metal': '金',\n        'water': '水',\n        '木': '木',\n        '火': '火',\n        '土': '土',\n        '金': '金',\n        '水': '水'\n      };\n      return elementNames[element] || element;\n    };\n    const onClickLeft = () => {\n      router.push('/');\n    };\n\n    // 修改后的直接流下载函数，适应后端始终返回文件流\n    const downloadPDFAsStream = async () => {\n      Toast.loading({\n        message: '正在生成PDF并下载报告...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      if (!resultId.value) {\n        Toast.clear();\n        Toast.fail('缺少结果ID，无法下载报告');\n        return false;\n      }\n      try {\n        console.log('直接下载报告, 结果ID:', resultId.value);\n\n        // 创建下载链接，添加时间戳避免缓存问题和force参数强制重新生成\n        const timestamp = new Date().getTime();\n        const downloadUrl = `/api/bazi/pdf/${resultId.value}?t=${timestamp}&force=true&parseMarkdown=true`;\n        console.log('下载URL:', downloadUrl);\n\n        // 使用fetch API获取文件流\n        const response = await fetch(downloadUrl, {\n          method: 'GET',\n          cache: 'no-cache',\n          headers: {\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': '0'\n          }\n        });\n\n        // 检查错误\n        if (!response.ok) {\n          let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n          try {\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n              const errorData = await response.json();\n              errorMsg = errorData.message || errorMsg;\n            } else {\n              // 如果不是JSON格式的错误，尝试获取文本错误信息\n              const errorText = await response.text();\n              if (errorText) {\n                errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n              }\n            }\n          } catch (e) {\n            console.error('解析错误响应失败:', e);\n          }\n          throw new Error(errorMsg);\n        }\n\n        // 检查内容类型\n        const contentType = response.headers.get('content-type');\n        const disposition = response.headers.get('content-disposition');\n        console.log('响应内容类型:', contentType);\n        console.log('响应内容处置:', disposition);\n\n        // 确定文件名和扩展名\n        let filename = `八字命理分析_${resultId.value}.pdf`;\n        if (disposition && disposition.includes('filename=')) {\n          const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n\n        // 确定文件类型\n        const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n        if (!filename.endsWith(fileExtension)) {\n          filename = `八字命理分析_${resultId.value}.${fileExtension}`;\n        }\n\n        // 转换为Blob对象\n        const blob = await response.blob();\n        console.log('PDF Blob大小:', blob.size, '字节');\n\n        // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n        // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n        const isDownloadStarted = disposition && disposition.includes('attachment');\n        if (blob.size === 0 && !isDownloadStarted) {\n          throw new Error('下载的文件为空');\n        }\n\n        // 对于小文件，我们可以验证文件内容\n        // 但对于大文件或浏览器接管的下载，跳过验证\n        if (blob.size > 0 && blob.size < 1024 * 1024 && contentType && contentType.includes('pdf')) {\n          try {\n            // 读取文件头部以验证是否为有效的PDF\n            const fileReader = new FileReader();\n            const headerPromise = new Promise((resolve, reject) => {\n              fileReader.onloadend = e => resolve(e.target.result);\n              fileReader.onerror = e => reject(e);\n            });\n            fileReader.readAsArrayBuffer(blob.slice(0, 5));\n            const header = await headerPromise;\n            const headerView = new Uint8Array(header);\n            const headerString = String.fromCharCode.apply(null, headerView);\n            if (!headerString.startsWith('%PDF')) {\n              console.error('无效的PDF文件头:', headerString);\n              throw new Error('下载的不是有效的PDF文件');\n            } else {\n              console.log('PDF文件头验证通过');\n            }\n          } catch (e) {\n            console.error('验证PDF文件失败:', e);\n            // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n            if (!isDownloadStarted) {\n              throw new Error('验证PDF文件失败: ' + e.message);\n            } else {\n              console.warn('浏览器接管了下载，跳过PDF验证');\n            }\n          }\n        }\n\n        // 不管浏览器是否已经接管下载，我们都手动创建一个下载链接\n        try {\n          // 创建下载链接\n          const url = window.URL.createObjectURL(blob);\n          console.log('创建Blob URL:', url);\n\n          // 使用iframe方式下载，避免某些浏览器的下载拦截\n          const iframe = document.createElement('iframe');\n          iframe.style.display = 'none';\n          document.body.appendChild(iframe);\n\n          // 创建a标签并触发下载\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `八字命理分析_${resultId.value}.pdf`; // 强制使用自定义文件名\n          a.target = '_blank';\n          a.rel = 'noopener noreferrer';\n\n          // 在iframe中添加a标签并点击\n          iframe.contentWindow.document.body.appendChild(a);\n          console.log('触发下载, 文件名:', a.download);\n          a.click();\n\n          // 清理\n          setTimeout(() => {\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(iframe);\n            console.log('清理下载资源完成');\n          }, 1000); // 增加延时确保下载开始\n        } catch (e) {\n          console.error('创建下载链接失败:', e);\n\n          // 尝试使用window.open直接打开PDF\n          try {\n            console.log('尝试使用window.open方法下载');\n            const pdfWindow = window.open(downloadUrl, '_blank');\n            if (!pdfWindow) {\n              console.warn('弹出窗口被阻止，尝试其他方法');\n              // 提示用户直接打开链接\n              Dialog.alert({\n                title: '下载提示',\n                message: '系统无法自动下载PDF，请点击确定后手动保存文件',\n                confirmButtonText: '确定'\n              }).then(() => {\n                window.open(downloadUrl, '_blank');\n              });\n            }\n          } catch (openError) {\n            console.error('使用window.open下载失败:', openError);\n            throw new Error('下载失败，请尝试使用其他浏览器');\n          }\n        }\n        Toast.clear();\n        Toast.success('报告下载成功');\n        return true;\n      } catch (error) {\n        console.error('直接下载PDF出错:', error);\n        Toast.clear();\n\n        // 检查是否是因为浏览器已经接管了下载而导致的错误\n        if (error.message && (error.message.includes('下载的文件为空') || error.message.includes('验证PDF文件失败'))) {\n          // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n          console.log('可能是浏览器已经接管了下载，不显示错误');\n          Toast.success('报告下载已开始，请等待浏览器完成下载');\n          return true;\n        }\n\n        // 显示错误信息\n        Toast.fail(error.message || '下载失败，请稍后重试');\n        return false;\n      }\n    };\n\n    // 修改主下载函数，添加重试逻辑\n    const downloadPDF = async () => {\n      Toast.loading({\n        message: '正在准备生成PDF报告...',\n        duration: 5000,\n        position: 'middle'\n      });\n      if (!resultId.value) {\n        Toast.fail('缺少结果ID，无法生成报告');\n        return;\n      }\n      try {\n        // 先重新加载最新的数据，确保PDF包含最新的追问分析结果\n        Toast.loading({\n          message: '正在同步最新数据...',\n          duration: 5000\n        });\n\n        // 获取最新的基础分析结果\n        await getBaziResult();\n\n        // 获取最新的追问分析结果\n        await loadFollowupResults();\n        Toast.loading({\n          message: '正在生成并下载PDF报告...',\n          duration: 5000\n        });\n\n        // 最多尝试3次下载\n        let attempts = 0;\n        let success = false;\n        while (attempts < 3 && !success) {\n          attempts++;\n          if (attempts > 1) {\n            console.log(`尝试第${attempts}次下载...`);\n            Toast.loading({\n              message: `尝试第${attempts}次下载...`,\n              duration: 2000\n            });\n            // 在重试之前等待一段时间\n            await new Promise(resolve => setTimeout(resolve, 2000));\n          }\n\n          // 使用流式下载模式，并处理返回值\n          success = await downloadPDFAsStream();\n\n          // 如果流式下载成功，直接返回，不再尝试其他方法\n          if (success === true) {\n            return;\n          }\n        }\n\n        // 如果多次尝试后仍然失败，提示用户\n        if (!success) {\n          Toast.clear();\n          Dialog.alert({\n            title: 'PDF下载失败',\n            message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。'\n          });\n        }\n      } catch (error) {\n        console.error('下载PDF过程中发生错误:', error);\n        Toast.clear();\n        Toast.fail('生成PDF报告失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 本地生成PDF的函数\n    const generatePDFLocally = async () => {\n      console.log('使用客户端jsPDF库生成PDF');\n\n      // 获取内容元素\n      const element = document.querySelector('.result-container');\n      if (!element) {\n        throw new Error('找不到要转换的内容元素');\n      }\n      Toast.loading({\n        message: '正在捕获页面内容...',\n        duration: 5000\n      });\n      try {\n        // 在捕获内容前先应用Markdown格式（临时）\n        const sections = document.querySelectorAll('.analysis-section');\n        const originalContents = [];\n\n        // 确保所有Markdown内容都已经被渲染为HTML\n        sections.forEach((section, index) => {\n          const contentElement = section.querySelector('p, .markdown-content');\n          if (contentElement && !contentElement.classList.contains('markdown-content')) {\n            originalContents.push({\n              element: contentElement,\n              content: contentElement.innerHTML\n            });\n\n            // 如果内容中有Markdown语法但尚未渲染，则渲染它\n            if (contentElement.textContent.includes('**') || contentElement.textContent.includes('##') || contentElement.textContent.includes('--') || contentElement.textContent.includes('- ')) {\n              contentElement.innerHTML = md.render(contentElement.textContent);\n              contentElement.classList.add('markdown-content-temp');\n            }\n          }\n        });\n\n        // 使用html2canvas捕获内容\n        const canvas = await html2canvas(element, {\n          scale: 1,\n          useCORS: true,\n          logging: false,\n          windowWidth: document.documentElement.offsetWidth,\n          windowHeight: document.documentElement.offsetHeight\n        });\n        Toast.loading({\n          message: '正在生成PDF文件...',\n          duration: 5000\n        });\n\n        // 创建PDF文档\n        const pdf = new jsPDF('p', 'mm', 'a4');\n\n        // 计算尺寸和比例\n        const imgData = canvas.toDataURL('image/png');\n        const imgWidth = 210; // A4宽度，单位mm\n        const pageHeight = 297; // A4高度，单位mm\n        const imgHeight = canvas.height * imgWidth / canvas.width;\n        let heightLeft = imgHeight;\n        let position = 0;\n\n        // 添加首页\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n\n        // 如果内容超过一页，添加更多页\n        while (heightLeft > 0) {\n          position = heightLeft - imgHeight;\n          pdf.addPage();\n          pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n          heightLeft -= pageHeight;\n        }\n\n        // 添加页脚\n        const pageCount = pdf.internal.getNumberOfPages();\n        for (let i = 1; i <= pageCount; i++) {\n          pdf.setPage(i);\n          pdf.setFontSize(10);\n          pdf.setTextColor(150);\n          pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, {\n            align: 'center'\n          });\n        }\n\n        // 恢复原始内容\n        originalContents.forEach(item => {\n          if (item && item.element) {\n            item.element.innerHTML = item.content;\n            item.element.classList.remove('markdown-content-temp');\n          }\n        });\n\n        // 保存PDF\n        pdf.save(`八字命理分析_${resultId.value}.pdf`);\n        return true;\n      } catch (error) {\n        console.error('本地PDF生成错误:', error);\n        throw error;\n      }\n    };\n    const shareResult = () => {\n      Toast.success('分享功能开发中');\n    };\n\n    // 处理本地PDF生成\n    const handleLocalPDFGeneration = async () => {\n      try {\n        Toast.loading({\n          message: '正在本地生成PDF...',\n          duration: 0,\n          forbidClick: true\n        });\n\n        // 确保所有内容都已经渲染Markdown\n        const sections = document.querySelectorAll('.analysis-section');\n        const originalContents = [];\n        let needsRendering = false;\n\n        // 检查是否有内容需要渲染\n        sections.forEach(section => {\n          const contentElement = section.querySelector('p:not(.markdown-content)');\n          if (contentElement) {\n            needsRendering = true;\n          }\n        });\n\n        // 如果需要渲染，先将所有内容进行Markdown渲染\n        if (needsRendering) {\n          console.log('检测到需要渲染Markdown内容');\n          sections.forEach(section => {\n            const contentElements = section.querySelectorAll('p:not(.markdown-content)');\n            contentElements.forEach(element => {\n              const text = element.textContent;\n              if (text && (text.includes('**') || text.includes('#') || text.includes('-') || text.includes('1.') || text.includes('\\n'))) {\n                originalContents.push({\n                  element: element,\n                  content: element.innerHTML\n                });\n                element.innerHTML = md.render(text);\n                element.classList.add('markdown-content');\n                element.classList.add('temp-rendered');\n              }\n            });\n          });\n        }\n\n        // 生成PDF\n        await generatePDFLocally();\n\n        // 恢复原始内容\n        if (needsRendering) {\n          document.querySelectorAll('.temp-rendered').forEach(element => {\n            const original = originalContents.find(item => item.element === element);\n            if (original) {\n              element.innerHTML = original.content;\n              element.classList.remove('markdown-content');\n              element.classList.remove('temp-rendered');\n            }\n          });\n        }\n        Toast.clear();\n        Toast.success('本地PDF生成成功');\n      } catch (error) {\n        console.error('本地PDF生成失败:', error);\n        Toast.clear();\n        Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 添加分析状态检查函数\n    const checkAnalysisStatus = async resultId => {\n      try {\n        console.log('检查分析状态:', resultId);\n        const response = await axios.get(`/api/bazi/result/${resultId}`);\n        if (response.data.code === 200) {\n          // 检查AI分析是否已经生成\n          const aiAnalysisData = response.data.data.aiAnalysis || {};\n\n          // 统计已完成和正在分析的项目\n          let totalItems = 0;\n          let completedItems = 0;\n          Object.entries(aiAnalysisData).forEach(([key, value]) => {\n            totalItems++;\n            if (!(typeof value === 'string' && value.includes('正在分析'))) {\n              completedItems++;\n            }\n          });\n\n          // 更新进度\n          if (totalItems > 0) {\n            analyzeProgress.value = Math.floor(completedItems / totalItems * 100);\n          }\n\n          // 检查是否还有\"正在分析\"的内容\n          const stillAnalyzing = Object.values(aiAnalysisData).some(value => typeof value === 'string' && value.includes('正在分析'));\n          isAnalyzing.value = stillAnalyzing;\n          if (stillAnalyzing) {\n            console.log('分析仍在进行中...', `完成度: ${analyzeProgress.value}%`);\n            return false;\n          } else {\n            console.log('分析已完成');\n            return true;\n          }\n        }\n        return false;\n      } catch (error) {\n        console.error('检查分析状态出错:', error);\n        return false;\n      }\n    };\n\n    // 添加轮询检查函数\n    const pollAnalysisStatus = async (resultId, maxAttempts = 30) => {\n      let attempts = 0;\n\n      // 显示进度条\n      isAnalyzing.value = true;\n\n      // 创建模拟进度，即使后端没有反馈也会看到进度在增加\n      if (analyzeTimer.value) clearInterval(analyzeTimer.value);\n      analyzeTimer.value = setInterval(() => {\n        if (analyzeProgress.value < 90) {\n          analyzeProgress.value += 2;\n        }\n      }, 2000);\n      return new Promise(resolve => {\n        const checkInterval = setInterval(async () => {\n          attempts++;\n          const isComplete = await checkAnalysisStatus(resultId);\n          if (isComplete || attempts >= maxAttempts) {\n            clearInterval(checkInterval);\n\n            // 清除模拟进度定时器\n            if (analyzeTimer.value) {\n              clearInterval(analyzeTimer.value);\n              analyzeTimer.value = null;\n            }\n            if (isComplete) {\n              // 如果完成，确保进度显示100%\n              analyzeProgress.value = 100;\n              setTimeout(() => {\n                isAnalyzing.value = false;\n              }, 1000); // 短暂显示100%后隐藏进度条\n            }\n            await getBaziResult(); // 最后再获取一次完整结果\n            Toast.clear();\n            resolve(isComplete);\n          }\n        }, 2000); // 每2秒检查一次\n      });\n    };\n\n    // 修改reloadBaziData函数，添加轮询逻辑\n    const reloadBaziData = async () => {\n      Toast.loading('正在重新加载数据...');\n      try {\n        if (!resultId.value) {\n          Toast.fail('缺少结果ID');\n          return;\n        }\n        console.log(`重新加载数据，结果ID: ${resultId.value}`);\n\n        // 获取URL参数\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // 尝试使用模拟支付接口\n        try {\n          console.log('尝试使用模拟支付接口...');\n\n          // 显示加载提示\n          Toast.loading({\n            message: '正在处理支付...',\n            duration: 0,\n            position: 'middle',\n            forbidClick: true\n          });\n\n          // 准备请求数据\n          const requestData = {\n            birthDate: baziData.value.birthDate || urlParams.get('birthDate'),\n            birthTime: baziData.value.birthTime || urlParams.get('birthTime'),\n            gender: baziData.value.gender || urlParams.get('gender')\n          };\n          console.log('请求数据:', requestData);\n\n          // 发送模拟支付请求\n          const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId.value}`, requestData);\n          console.log('模拟支付响应:', mockPaymentResponse.data);\n          if (mockPaymentResponse.data.code === 200) {\n            // 支付成功，显示成功提示\n            Toast.success('支付成功');\n\n            // 使用返回的resultId重新加载数据\n            if (mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n              const newResultId = mockPaymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n\n              // 更新全局的resultId变量\n              resultId.value = newResultId;\n              // 还需要更新本地存储中的resultId\n              localStorage.setItem('resultId', newResultId);\n\n              // 显示正在加载分析结果\n              Toast.loading({\n                message: '正在生成八字分析结果，这可能需要30-60秒...',\n                duration: 0,\n                position: 'middle',\n                forbidClick: true\n              });\n\n              // 轮询检查分析状态\n              const analysisComplete = await pollAnalysisStatus(newResultId);\n              if (analysisComplete) {\n                Toast.success('分析已完成');\n              } else {\n                Toast.success('已完成部分分析，显示可用结果');\n              }\n\n              // 重新加载追问分析结果\n              await loadFollowupResults();\n              return;\n            }\n          }\n        } catch (mockError) {\n          console.error('模拟支付失败:', mockError);\n          Toast.fail('重新加载失败: ' + (mockError.message || '未知错误'));\n          return;\n        }\n\n        // 如果模拟支付失败，尝试直接获取结果\n        try {\n          Toast.loading({\n            message: '正在加载现有分析结果...',\n            duration: 0,\n            forbidClick: true\n          });\n          const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n          if (response.data.code === 200) {\n            // 更新八字数据，使用空值合并运算符确保数据存在\n            baziData.value = {\n              yearPillar: response.data.data.baziChart?.yearPillar || null,\n              monthPillar: response.data.data.baziChart?.monthPillar || null,\n              dayPillar: response.data.data.baziChart?.dayPillar || null,\n              hourPillar: response.data.data.baziChart?.hourPillar || null,\n              fiveElements: response.data.data.baziChart?.fiveElements || null,\n              flowingYears: response.data.data.baziChart?.flowingYears || [],\n              shenSha: response.data.data.baziChart?.shenSha || baziData.value.shenSha,\n              daYun: response.data.data.baziChart?.daYun || baziData.value.daYun,\n              birthDate: response.data.data.baziChart?.birthDate || null,\n              birthTime: response.data.data.baziChart?.birthTime || null,\n              gender: response.data.data.baziChart?.gender || null\n            };\n\n            // 更新AI分析结果\n            aiAnalysis.value = {\n              health: response.data.data.aiAnalysis?.health || '',\n              career: response.data.data.aiAnalysis?.career || '',\n              relationship: response.data.data.aiAnalysis?.relationship || '',\n              children: response.data.data.aiAnalysis?.children || '',\n              social: response.data.data.aiAnalysis?.social || '',\n              future: response.data.data.aiAnalysis?.future || '',\n              parents: response.data.data.aiAnalysis?.parents || '',\n              education: response.data.data.aiAnalysis?.education || '',\n              // 新增字段\n              coreAnalysis: response.data.data.aiAnalysis?.coreAnalysis || '',\n              fiveElements: response.data.data.aiAnalysis?.fiveElements || '',\n              shenShaAnalysis: response.data.data.aiAnalysis?.shenShaAnalysis || '',\n              keyPoints: response.data.data.aiAnalysis?.keyPoints || ''\n            };\n\n            // 检查是否存在\"正在分析\"的内容\n            const stillAnalyzing = Object.values(aiAnalysis.value).some(value => typeof value === 'string' && value.includes('正在分析'));\n\n            // 更新分析状态\n            isAnalyzing.value = stillAnalyzing;\n            if (stillAnalyzing) {\n              console.log('分析仍在进行中...');\n              // 不显示Toast，因为我们已经有进度条显示\n            } else {\n              // 分析完成\n              analyzeProgress.value = 100;\n              setTimeout(() => {\n                isAnalyzing.value = false;\n              }, 1000);\n            }\n\n            // 重新加载追问分析结果\n            console.log('重新加载追问分析结果...');\n            await loadFollowupResults();\n\n            // 遍历所有已支付的追问选项，强制重新获取分析结果\n            const paidOptions = followupOptions.value.filter(option => option.paid);\n            if (paidOptions.length > 0) {\n              console.log('发现已支付的追问选项，强制重新获取:', paidOptions.map(o => o.id));\n              for (const option of paidOptions) {\n                await getFollowupAnalysis(option.id);\n              }\n            }\n            Toast.success('数据刷新成功');\n          } else {\n            Toast.fail(response.data.message || '加载失败');\n          }\n        } catch (error) {\n          console.error('重新加载失败:', error);\n          Toast.fail('加载失败: ' + (error.message || '未知错误'));\n        }\n      } catch (error) {\n        console.error('重新加载失败:', error);\n        Toast.fail('加载失败: ' + (error.message || '未知错误'));\n      }\n    };\n\n    // 追问相关状态\n    const followupOptions = ref([{\n      id: 'marriage',\n      name: '婚姻感情',\n      selected: false,\n      paid: false\n    }, {\n      id: 'career',\n      name: '事业财运',\n      selected: false,\n      paid: false\n    }, {\n      id: 'children',\n      name: '子女情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'parents',\n      name: '父母情况',\n      selected: false,\n      paid: false\n    }, {\n      id: 'health',\n      name: '身体健康',\n      selected: false,\n      paid: false\n    }, {\n      id: 'education',\n      name: '学业',\n      selected: false,\n      paid: false\n    }, {\n      id: 'relationship',\n      name: '人际关系',\n      selected: false,\n      paid: false\n    }, {\n      id: 'fiveYears',\n      name: '近五年运势',\n      selected: false,\n      paid: false\n    }]);\n    const currentFollowup = ref(null);\n    const showFollowupDialog = ref(false);\n    const followupAnalysis = ref({});\n    const isLoadingFollowup = ref(false);\n\n    // 选择追问选项\n    const selectFollowupOption = async option => {\n      // 设置当前选择的追问选项\n      currentFollowup.value = option;\n\n      // 如果已经支付过，直接显示结果\n      if (option.paid) {\n        console.log(`选择已支付的追问: ${option.id}`);\n\n        // 如果已有分析结果，直接显示\n        if (followupAnalysis.value[option.id]) {\n          console.log(`已有${option.id}分析结果，直接显示`);\n          return;\n        }\n\n        // 如果没有分析结果，尝试获取\n        console.log(`尝试获取${option.id}分析结果`);\n        Toast.loading({\n          message: '正在加载分析结果...',\n          duration: 0\n        });\n        try {\n          // 尝试获取分析结果\n          const analysis = await getFollowupAnalysis(option.id);\n          if (analysis && typeof analysis === 'string' && analysis.length > 0) {\n            Toast.success('加载成功');\n            console.log(`成功获取${option.id}分析结果，长度: ${analysis.length}`);\n          } else {\n            Toast.fail('分析结果尚未生成完成，请稍后再试');\n            console.warn(`获取${option.id}分析结果失败或为空`);\n          }\n        } catch (error) {\n          console.error(`获取${option.id}分析失败:`, error);\n          Toast.fail('获取分析失败，请重试');\n        } finally {\n          Toast.clear();\n        }\n        return;\n      }\n\n      // 否则显示支付对话框\n      showFollowupDialog.value = true;\n    };\n\n    // 支付追问费用\n    const payForFollowup = async () => {\n      if (!currentFollowup.value) return;\n      try {\n        isLoadingFollowup.value = true;\n\n        // 第一步：创建订单\n        Toast.loading({\n          message: '正在创建订单...',\n          forbidClick: true,\n          duration: 0\n        });\n\n        // 获取URL参数\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // 创建追问订单\n        const orderResponse = await axios.post('/api/order/create/followup', {\n          resultId: resultId.value,\n          area: currentFollowup.value.id\n        });\n        if (orderResponse.data.code === 200) {\n          const followupOrderId = orderResponse.data.data.orderId;\n          console.log('追问订单创建成功:', followupOrderId);\n\n          // 第二步：处理支付\n          Toast.loading({\n            message: '正在处理支付...',\n            forbidClick: true,\n            duration: 0\n          });\n\n          // 模拟支付\n          const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\n            birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\n            birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\n            gender: baziData.value?.gender || urlParams.get('gender'),\n            area: currentFollowup.value.id,\n            resultId: resultId.value\n          });\n          if (paymentResponse.data.code === 200) {\n            console.log('追问支付成功:', paymentResponse.data);\n            Toast.success('支付成功');\n\n            // 立即更新UI状态，将当前追问标记为已付费\n            const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n            if (index !== -1) {\n              followupOptions.value[index].paid = true;\n              followupOptions.value = [...followupOptions.value]; // 强制Vue更新\n            }\n\n            // 第三步：加载分析结果\n            Toast.loading({\n              message: '正在生成分析结果，这可能需要30-60秒...',\n              forbidClick: true,\n              duration: 0\n            });\n\n            // 获取并保存新的resultId（如果有的话）\n            if (paymentResponse.data.data && paymentResponse.data.data.resultId) {\n              const newResultId = paymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n              // 更新全局的resultId变量\n              resultId.value = newResultId;\n              // 还需要更新本地存储中的resultId\n              localStorage.setItem('resultId', newResultId);\n            }\n\n            // 轮询检查分析结果状态\n            const area = currentFollowup.value.id;\n            let isComplete = false;\n            let attempts = 0;\n            const maxAttempts = 60; // 最多等待120秒（60次 * 2秒）\n\n            // 自定义轮询检查追问分析状态\n            const pollFollowupStatus = async () => {\n              console.log(`开始轮询追问分析状态: ${area}`);\n\n              // 开始计时\n              const startTime = new Date().getTime();\n              const timeoutMs = 120000; // 120秒超时\n\n              while (attempts < maxAttempts && !isComplete) {\n                attempts++;\n                try {\n                  // 等待2秒\n                  await new Promise(resolve => setTimeout(resolve, 2000));\n\n                  // 检查是否超时\n                  const currentTime = new Date().getTime();\n                  if (currentTime - startTime > timeoutMs) {\n                    console.warn(`轮询追问分析状态超时: ${area}`);\n                    break;\n                  }\n\n                  // 检查追问分析结果\n                  console.log(`尝试第${attempts}次获取追问分析: ${area}`);\n                  const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n                  if (response.data.code === 200 && response.data.data && response.data.data.analysis) {\n                    // 检查分析内容是否为\"正在分析\"\n                    const analysis = response.data.data.analysis;\n                    if (typeof analysis === 'string' && !analysis.includes('正在分析')) {\n                      console.log(`成功获取追问分析结果: ${area}`);\n                      isComplete = true;\n                      followupAnalysis.value[area] = analysis;\n                      break;\n                    } else {\n                      console.log(`追问分析结果还在生成中: ${area}`);\n                    }\n                  }\n                } catch (error) {\n                  // 只有非404错误才打印详细信息\n                  if (!error.response || error.response.status !== 404) {\n                    console.error('检查追问分析状态出错:', error);\n                  }\n\n                  // 如果遇到404错误，表示追问分析尚未创建完毕\n                  if (error.response && error.response.status === 404) {\n                    console.log('追问分析尚未创建完毕，继续等待...');\n                  } else if (attempts >= maxAttempts / 2) {\n                    // 如果尝试次数超过一半且仍然失败，不要退出轮询，但记录错误\n                    console.warn(`获取分析数据失败(${attempts}/${maxAttempts})，继续尝试...`);\n                  }\n                }\n              }\n\n              // 无论是否完成，都尝试获取最终结果\n              console.log(`轮询完成，最终尝试获取追问分析: ${area}`);\n              try {\n                const finalResult = await getFollowupAnalysis(area);\n                console.log(`最终获取追问分析结果: ${finalResult ? '成功' : '失败'}`);\n                return finalResult;\n              } catch (error) {\n                console.error('获取最终追问分析结果失败:', error);\n                // 如果分析结果仍然不可用，显示友好的错误信息\n                followupAnalysis.value[area] = \"分析正在处理中，请稍后刷新页面查看。\";\n                return null;\n              }\n            };\n\n            // 开始轮询\n            const result = await pollFollowupStatus();\n\n            // 更新UI\n            Toast.clear();\n            if (result) {\n              Toast.success('分析已完成');\n\n              // 支付成功且分析完成后，切换到AI分析结果标签页显示结果\n              activeTab.value = 1; // 切换到AI分析结果标签\n\n              // 滚动到相应分析部分\n              setTimeout(() => {\n                const sectionMap = {\n                  'relationship': '婚姻感情',\n                  'marriage': '婚姻感情',\n                  'career': '事业财运',\n                  'work': '事业财运',\n                  'money': '事业财运',\n                  'wealth': '事业财运',\n                  'children': '子女情况',\n                  'family': '子女情况',\n                  'parents': '父母情况',\n                  'health': '身体健康',\n                  'education': '学业',\n                  'study': '学业',\n                  'social': '人际关系',\n                  'friends': '人际关系',\n                  'future': '近五年运势',\n                  'fiveYears': '近五年运势'\n                };\n                const targetTitle = sectionMap[currentFollowup.value.id];\n                if (targetTitle) {\n                  // 查找并滚动到对应的分析部分\n                  const sections = document.querySelectorAll('.analysis-section h3');\n                  for (let i = 0; i < sections.length; i++) {\n                    if (sections[i].textContent.includes(targetTitle)) {\n                      sections[i].scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'center'\n                      });\n\n                      // 高亮显示该部分\n                      const section = sections[i].parentElement;\n                      section.classList.add('highlight-section');\n                      setTimeout(() => {\n                        section.classList.remove('highlight-section');\n                      }, 3000);\n                      break;\n                    }\n                  }\n                }\n              }, 500);\n            } else {\n              Toast.success('正在生成分析，请稍后刷新查看');\n            }\n            showFollowupDialog.value = false;\n\n            // 确保界面刷新显示分析结果\n            setTimeout(() => {\n              const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\n              if (index !== -1) {\n                // 强制更新\n                followupOptions.value = [...followupOptions.value];\n              }\n            }, 500);\n          } else {\n            Toast.fail('支付失败');\n          }\n        } else {\n          Toast.fail('创建订单失败');\n        }\n      } catch (error) {\n        console.error('追问支付过程出错:', error);\n        Toast.fail('处理失败，请重试');\n      } finally {\n        isLoadingFollowup.value = false;\n        Toast.clear();\n      }\n    };\n\n    // 获取追问分析结果\n    const getFollowupAnalysis = async area => {\n      loading.value = true;\n      try {\n        console.log(`开始获取[${area}]追问分析，结果ID: ${resultId.value}`);\n        const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\n        if (response.data.code === 200) {\n          console.log('获取追问分析成功，响应数据:', response.data);\n          console.log('响应data字段详情:', JSON.stringify(response.data.data));\n\n          // 处理分析结果为null或空的情况\n          if (!response.data.data) {\n            console.warn(`追问分析结果data为空: ${area}`);\n            const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\n            followupAnalysis.value[area] = defaultMessage;\n            return defaultMessage;\n          }\n\n          // 提取分析内容，处理不同的响应格式\n          let analysisContent = null;\n          if (response.data.data.analysis) {\n            // 标准格式：{area, analysis}\n            analysisContent = response.data.data.analysis;\n            console.log(`获取到标准格式分析结果, 类型: ${typeof analysisContent}, 长度: ${analysisContent ? analysisContent.length : 0}`);\n          } else if (typeof response.data.data === 'string') {\n            // 直接字符串格式\n            analysisContent = response.data.data;\n            console.log(`获取到字符串格式分析结果, 长度: ${analysisContent.length}`);\n          } else if (response.data.data[area]) {\n            // 对象格式：{area1: \"分析1\", area2: \"分析2\"}\n            analysisContent = response.data.data[area];\n            console.log(`获取到对象格式分析结果, 长度: ${analysisContent ? analysisContent.length : 0}`);\n          } else {\n            // 尝试遍历所有属性，看是否有匹配的内容\n            console.log('尝试查找匹配内容，data的所有键:', Object.keys(response.data.data));\n            for (const key in response.data.data) {\n              if (key.toLowerCase() === area.toLowerCase() || area === 'fiveYears' && key === 'future' || area === 'future' && key === 'fiveYears') {\n                analysisContent = response.data.data[key];\n                console.log(`找到匹配的键[${key}]，内容长度: ${analysisContent ? analysisContent.length : 0}`);\n                break;\n              }\n            }\n          }\n\n          // 检查分析结果是否为null或空\n          if (!analysisContent) {\n            console.warn(`无法从响应中提取有效分析内容: ${area}`);\n            const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析尚未生成，请稍后刷新页面查看。`;\n            followupAnalysis.value[area] = defaultMessage;\n            return defaultMessage;\n          }\n\n          // 检查分析结果是否是空字符串\n          if (typeof analysisContent === 'string' && analysisContent.trim() === '') {\n            console.warn(`追问分析结果为空字符串: ${area}`);\n            const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\n            followupAnalysis.value[area] = defaultMessage;\n            return defaultMessage;\n          }\n\n          // 记录有效的分析结果\n          console.log(`获取到有效的[${area}]分析结果，长度: ${analysisContent.length}`);\n\n          // 存储并返回分析结果\n          followupAnalysis.value[area] = analysisContent;\n          return analysisContent;\n        } else {\n          console.error('获取追问分析失败:', response.data);\n          const errorMessage = `获取分析失败: ${response.data.message || '未知错误'}`;\n          followupAnalysis.value[area] = errorMessage;\n          return errorMessage;\n        }\n      } catch (error) {\n        console.error('获取追问分析出错:', error);\n        const errorMessage = `获取分析出错: ${error.message || '请稍后重试'}`;\n        followupAnalysis.value[area] = errorMessage;\n        return errorMessage;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 检查已支付的追问\n    const checkPaidFollowups = async () => {\n      try {\n        const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            const isPaid = paidFollowups.some(f => f.area === option.id);\n            if (isPaid) {\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n        }\n      } catch (error) {\n        console.error('检查已支付追问出错:', error);\n      }\n    };\n\n    // 修改getBaziResult函数\n    const getBaziResult = async () => {\n      loading.value = true;\n      try {\n        console.log('获取八字分析结果，ID:', resultId.value);\n        const response = await axios.get(`/api/bazi/result/${resultId.value}`);\n        console.log('八字分析结果:', response.data);\n        if (response.data.code === 200 && response.data.data) {\n          // 更新八字数据，使用深度合并确保数据结构完整\n          if (response.data.data.baziChart) {\n            baziData.value = {\n              yearPillar: response.data.data.baziChart.yearPillar || baziData.value.yearPillar,\n              monthPillar: response.data.data.baziChart.monthPillar || baziData.value.monthPillar,\n              dayPillar: response.data.data.baziChart.dayPillar || baziData.value.dayPillar,\n              hourPillar: response.data.data.baziChart.hourPillar || baziData.value.hourPillar,\n              fiveElements: response.data.data.baziChart.fiveElements || baziData.value.fiveElements,\n              flowingYears: response.data.data.baziChart.flowingYears || [],\n              shenSha: response.data.data.baziChart.shenSha || baziData.value.shenSha,\n              daYun: response.data.data.baziChart.daYun || baziData.value.daYun,\n              birthDate: response.data.data.baziChart.birthDate || null,\n              birthTime: response.data.data.baziChart.birthTime || null,\n              gender: response.data.data.baziChart.gender || null\n            };\n          } else {\n            console.warn('响应中缺少baziChart数据');\n            Toast.fail('数据格式不正确');\n          }\n\n          // 更新AI分析结果\n          if (response.data.data.aiAnalysis) {\n            aiAnalysis.value = {\n              health: response.data.data.aiAnalysis.health || '',\n              career: response.data.data.aiAnalysis.career || '',\n              relationship: response.data.data.aiAnalysis.relationship || '',\n              children: response.data.data.aiAnalysis.children || '',\n              social: response.data.data.aiAnalysis.social || '',\n              future: response.data.data.aiAnalysis.future || '',\n              parents: response.data.data.aiAnalysis.parents || '',\n              education: response.data.data.aiAnalysis.education || '',\n              // 新增字段\n              coreAnalysis: response.data.data.aiAnalysis.coreAnalysis || '',\n              fiveElements: response.data.data.aiAnalysis.fiveElements || '',\n              shenShaAnalysis: response.data.data.aiAnalysis.shenShaAnalysis || '',\n              keyPoints: response.data.data.aiAnalysis.keyPoints || ''\n            };\n          }\n\n          // 初始化追问选项\n          initFollowupOptions();\n\n          // 加载已支付的追问分析结果\n          await loadFollowupResults();\n          Toast.success('分析结果加载成功');\n        } else {\n          console.error('获取八字分析结果失败:', response.data.message);\n          Toast.fail(response.data.message || '获取分析结果失败');\n        }\n      } catch (error) {\n        console.error('获取八字分析结果出错:', error);\n        Toast.fail('获取分析结果失败，请稍后再试');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 添加缺失的函数\n    // 初始化追问选项\n    const initFollowupOptions = () => {\n      // 根据用户年龄调整追问选项\n      if (userAge.value !== null) {\n        if (userAge.value < 6) {\n          // 为婴幼儿调整选项\n          followupOptions.value = followupOptions.value.filter(option => ['health', 'personality', 'education', 'parents'].includes(option.id));\n        } else if (userAge.value < 18) {\n          // 为未成年人调整选项\n          followupOptions.value = followupOptions.value.filter(option => !['marriage', 'career'].includes(option.id));\n        }\n      }\n      console.log('初始化追问选项完成:', followupOptions.value);\n    };\n\n    // 加载已支付的追问分析结果\n    const loadFollowupResults = async () => {\n      try {\n        // 检查是否有结果ID\n        if (!resultId.value) {\n          console.warn('缺少结果ID，无法加载追问分析');\n          return;\n        }\n        console.log('开始加载追问分析结果列表:', resultId.value);\n\n        // 调用API获取已支付的追问列表\n        const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\n        if (response.data.code === 200 && response.data.data.followups) {\n          const paidFollowups = response.data.data.followups;\n          console.log('获取到的追问列表:', paidFollowups);\n\n          // 更新已支付的追问选项\n          followupOptions.value = followupOptions.value.map(option => {\n            // 检查是否有匹配的追问分析\n            const isPaid = paidFollowups.some(f => {\n              // 尝试多种匹配方式\n              if (typeof f === 'object') {\n                // 对象格式：检查area字段\n                return f.area === option.id;\n              } else if (typeof f === 'string') {\n                // 字符串格式：直接比较\n                return f === option.id;\n              }\n              return false;\n            });\n            if (isPaid) {\n              console.log(`发现已支付的追问: ${option.id}`);\n              // 如果已支付，获取分析结果\n              getFollowupAnalysis(option.id);\n            }\n            return {\n              ...option,\n              paid: isPaid\n            };\n          });\n          console.log('更新后的追问选项:', followupOptions.value);\n        } else {\n          console.warn('获取追问列表失败或返回空列表');\n        }\n      } catch (error) {\n        console.error('加载追问分析结果出错:', error);\n        // 出错时不显示错误提示，静默失败\n      }\n    };\n\n    // 解析八字数据\n    const parseBaZiData = data => {\n      if (!data) return null;\n      return {\n        yearPillar: data.yearPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        monthPillar: data.monthPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        dayPillar: data.dayPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        hourPillar: data.hourPillar || {\n          heavenlyStem: '未知',\n          earthlyBranch: '未知'\n        },\n        shenSha: data.shenSha || {\n          dayChong: '未知',\n          zhiShen: '未知',\n          pengZuGan: '未知',\n          pengZuZhi: '未知',\n          xiShen: '未知',\n          fuShen: '未知',\n          caiShen: '未知',\n          benMing: [],\n          yearGan: [],\n          yearZhi: [],\n          dayGan: [],\n          dayZhi: []\n        },\n        daYun: data.daYun || {\n          startAge: 0,\n          startYear: 0,\n          isForward: true,\n          daYunList: []\n        },\n        flowingYears: data.flowingYears || []\n      };\n    };\n\n    // 添加分析状态检测函数\n    const isAnalysisItemLoading = key => {\n      if (!aiAnalysis.value) return true;\n      const value = aiAnalysis.value[key];\n      return !value || value === '暂无' || value.includes && value.includes('正在分析');\n    };\n\n    // 清理组件时移除定时器\n    onUnmounted(() => {\n      if (analyzeTimer.value) {\n        clearInterval(analyzeTimer.value);\n        analyzeTimer.value = null;\n      }\n    });\n\n    // 刷新特定追问的分析结果\n    const reloadFollowupAnalysis = async area => {\n      if (!area) return;\n      try {\n        isLoadingFollowup.value = true;\n        Toast.loading({\n          message: '正在刷新分析结果...',\n          duration: 0\n        });\n        console.log(`刷新${area}分析结果`);\n        const analysis = await getFollowupAnalysis(area);\n        if (analysis && typeof analysis === 'string' && analysis.length > 0) {\n          Toast.success('刷新成功');\n          console.log(`成功刷新${area}分析结果，长度: ${analysis.length}`);\n        } else {\n          Toast.fail('分析结果尚未生成完成');\n          console.warn(`刷新${area}分析结果失败或为空`);\n        }\n      } catch (error) {\n        console.error(`刷新${area}分析失败:`, error);\n        Toast.fail('刷新失败，请重试');\n      } finally {\n        isLoadingFollowup.value = false;\n        Toast.clear();\n      }\n    };\n    const __returned__ = {\n      md,\n      route,\n      router,\n      resultId,\n      activeTab,\n      loading,\n      isAnalyzing,\n      analyzeProgress,\n      analyzeTimer,\n      renderMarkdown,\n      userAge,\n      getAnalysisContent,\n      focusAreas,\n      analysisResult,\n      baziData,\n      aiAnalysis,\n      testApiConnection,\n      getElementName,\n      onClickLeft,\n      downloadPDFAsStream,\n      downloadPDF,\n      generatePDFLocally,\n      shareResult,\n      handleLocalPDFGeneration,\n      checkAnalysisStatus,\n      pollAnalysisStatus,\n      reloadBaziData,\n      followupOptions,\n      currentFollowup,\n      showFollowupDialog,\n      followupAnalysis,\n      isLoadingFollowup,\n      selectFollowupOption,\n      payForFollowup,\n      getFollowupAnalysis,\n      checkPaidFollowups,\n      getBaziResult,\n      initFollowupOptions,\n      loadFollowupResults,\n      parseBaZiData,\n      isAnalysisItemLoading,\n      reloadFollowupAnalysis,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      watch,\n      onUnmounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get jsPDF() {\n        return jsPDF;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get axios() {\n        return axios;\n      },\n      get MarkdownIt() {\n        return MarkdownIt;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","watch","onUnmounted","useRoute","useRouter","Toast","Dialog","jsPDF","html2canvas","axios","MarkdownIt","md","html","breaks","linkify","typographer","route","router","resultId","params","id","query","activeTab","loading","isAnalyzing","analyzeProgress","analyzeTimer","renderMarkdown","content","includes","render","e","console","error","userAge","age","isNaN","parseInt","value","localStorage","getItem","log","getAnalysisContent","sectionName","aiAnalysis","personality","education","health","healthText","sectionMatch","match","RegExp","trim","overall","futureMatch","focusAreas","analysisResult","baziData","yearPillar","heavenlyStem","earthlyBranch","naYin","shiShen","wangShuai","monthPillar","dayPillar","hourPillar","fiveElements","flowingYears","shenSha","dayChong","zhiShen","xiShen","fuShen","caiShen","benMing","yearGan","yearZhi","dayGan","dayZhi","daYun","startAge","startYear","isForward","daYunList","birthDate","birthTime","gender","career","relationship","children","social","future","parents","coreAnalysis","shenShaAnalysis","keyPoints","testApiConnection","response","get","data","success","fail","isApiConnected","warn","localResultId","urlResultId","setItem","message","duration","forbidClick","getBaziResult","stillAnalyzing","Object","values","some","pollAnalysisStatus","clear","getElementName","element","elementNames","onClickLeft","push","downloadPDFAsStream","position","timestamp","Date","getTime","downloadUrl","fetch","method","cache","headers","ok","errorMsg","status","contentType","errorData","json","errorText","text","substring","Error","disposition","filename","filenameMatch","fileExtension","endsWith","blob","size","isDownloadStarted","fileReader","FileReader","headerPromise","Promise","resolve","reject","onloadend","target","result","onerror","readAsArrayBuffer","slice","header","headerView","Uint8Array","headerString","String","fromCharCode","apply","startsWith","url","window","URL","createObjectURL","iframe","document","createElement","style","display","body","appendChild","a","href","download","rel","contentWindow","click","setTimeout","revokeObjectURL","removeChild","pdfWindow","open","alert","title","confirmButtonText","then","openError","downloadPDF","loadFollowupResults","attempts","generatePDFLocally","querySelector","sections","querySelectorAll","originalContents","forEach","section","index","contentElement","classList","contains","innerHTML","textContent","add","canvas","scale","useCORS","logging","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","pdf","imgData","toDataURL","imgWidth","pageHeight","imgHeight","height","width","heightLeft","addImage","addPage","pageCount","internal","getNumberOfPages","i","setPage","setFontSize","setTextColor","pageSize","getWidth","getHeight","align","item","remove","save","shareResult","handleLocalPDFGeneration","needsRendering","contentElements","original","find","checkAnalysisStatus","code","aiAnalysisData","totalItems","completedItems","entries","key","Math","floor","maxAttempts","clearInterval","setInterval","checkInterval","isComplete","reloadBaziData","urlParams","URLSearchParams","location","search","requestData","mockPaymentResponse","post","newResultId","analysisComplete","mockError","baziChart","paidOptions","followupOptions","filter","option","paid","length","map","o","getFollowupAnalysis","name","selected","currentFollowup","showFollowupDialog","followupAnalysis","isLoadingFollowup","selectFollowupOption","analysis","payForFollowup","orderResponse","area","followupOrderId","orderId","paymentResponse","findIndex","pollFollowupStatus","startTime","timeoutMs","currentTime","finalResult","sectionMap","targetTitle","scrollIntoView","behavior","block","parentElement","JSON","stringify","defaultMessage","analysisContent","keys","toLowerCase","errorMessage","checkPaidFollowups","followups","paidFollowups","isPaid","f","initFollowupOptions","parseBaZiData","pengZuGan","pengZuZhi","isAnalysisItemLoading","reloadFollowupAnalysis"],"sources":["D:/Python/20250603开发八字命理AI指导功能页码/开发八字命理AI指导功能页码/frontend/src/Result.vue"],"sourcesContent":["<template>\r\n  <div class=\"result-container\">\r\n    <van-nav-bar\r\n      title=\"八字分析结果\"\r\n      left-text=\"返回\"\r\n      left-arrow\r\n      @click-left=\"onClickLeft\"\r\n    />\r\n    \r\n    <div class=\"result-header\">\r\n      <h2>您的八字命盘分析</h2>\r\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\r\n    </div>\r\n    \r\n    <!-- 添加全局分析状态提示 -->\r\n    <van-notice-bar\r\n      v-if=\"isAnalyzing\"\r\n      color=\"#1989fa\"\r\n      background=\"#ecf9ff\"\r\n      left-icon=\"info-o\"\r\n      :scrollable=\"false\"\r\n      class=\"analysis-progress-notice\"\r\n    >\r\n      <div class=\"analysis-progress\">\r\n        <p>AI正在生成八字分析结果，这可能需要30-60秒</p>\r\n        <van-progress :percentage=\"analyzeProgress\" :show-pivot=\"false\" color=\"#1989fa\" />\r\n      </div>\r\n    </van-notice-bar>\r\n    \r\n    <van-tabs v-model=\"activeTab\" sticky>\r\n      <van-tab title=\"命盘信息\">\r\n        <div class=\"bazi-chart\">\r\n          <h3>八字命盘</h3>\r\n          <div v-if=\"baziData && baziData.yearPillar && baziData.monthPillar && baziData.dayPillar && baziData.hourPillar\" class=\"four-pillars\">\r\n            <!-- 年柱 -->\r\n            <div class=\"pillar\">\r\n              <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\r\n              <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\r\n              <div class=\"label\">年柱</div>\r\n              <div class=\"nayin\">{{ baziData.yearPillar.naYin }}</div>\r\n              <div class=\"shishen\">{{ baziData.yearPillar.shiShen }}</div>\r\n              <div class=\"wangshuai\">{{ baziData.yearPillar.wangShuai }}</div>\r\n            </div>\r\n            \r\n            <!-- 月柱 -->\r\n            <div class=\"pillar\">\r\n              <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\r\n              <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\r\n              <div class=\"label\">月柱</div>\r\n              <div class=\"nayin\">{{ baziData.monthPillar.naYin }}</div>\r\n              <div class=\"shishen\">{{ baziData.monthPillar.shiShen }}</div>\r\n              <div class=\"wangshuai\">{{ baziData.monthPillar.wangShuai }}</div>\r\n            </div>\r\n            \r\n            <!-- 日柱 -->\r\n            <div class=\"pillar\">\r\n              <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\r\n              <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\r\n              <div class=\"label\">日柱</div>\r\n              <div class=\"nayin\">{{ baziData.dayPillar.naYin }}</div>\r\n              <div class=\"shishen\">{{ baziData.dayPillar.shiShen }}</div>\r\n              <div class=\"wangshuai\">{{ baziData.dayPillar.wangShuai }}</div>\r\n            </div>\r\n            \r\n            <!-- 时柱 -->\r\n            <div class=\"pillar\">\r\n              <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\r\n              <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\r\n              <div class=\"label\">时柱</div>\r\n              <div class=\"nayin\">{{ baziData.hourPillar.naYin }}</div>\r\n              <div class=\"shishen\">{{ baziData.hourPillar.shiShen }}</div>\r\n              <div class=\"wangshuai\">{{ baziData.hourPillar.wangShuai }}</div>\r\n            </div>\r\n          </div>\r\n          <div v-else class=\"error-message\">\r\n            <van-empty description=\"八字数据加载失败，请重试\" />\r\n            <van-button type=\"primary\" size=\"small\" @click=\"reloadBaziData\">重新加载</van-button>\r\n          </div>\r\n          \r\n          <h3>五行分布</h3>\r\n          <div class=\"five-elements\" v-if=\"baziData && baziData.fiveElements\">\r\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\r\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\r\n              <div class=\"element-value\">{{ value }}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"five-elements\" v-else>\r\n            <div class=\"element\" v-for=\"element in ['wood', 'fire', 'earth', 'metal', 'water']\" :key=\"element\">\r\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\r\n              <div class=\"element-value\">--</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 添加神煞显示 -->\r\n          <h3>神煞信息</h3>\r\n          <div class=\"shen-sha-info\" v-if=\"baziData && baziData.shenSha\">\r\n            <div class=\"shen-sha-content\">\r\n              <div class=\"shen-sha-item\">\r\n                <span class=\"label\">日冲</span>\r\n                <span class=\"value\">{{ baziData.shenSha.dayChong }}</span>\r\n              </div>\r\n              <div class=\"shen-sha-item\">\r\n                <span class=\"label\">值神</span>\r\n                <span class=\"value\">{{ baziData.shenSha.zhiShen }}</span>\r\n              </div>\r\n              <div class=\"shen-sha-item\">\r\n                <span class=\"label\">喜神</span>\r\n                <span class=\"value\">{{ baziData.shenSha.xiShen }}</span>\r\n              </div>\r\n              <div class=\"shen-sha-item\">\r\n                <span class=\"label\">福神</span>\r\n                <span class=\"value\">{{ baziData.shenSha.fuShen }}</span>\r\n              </div>\r\n              <div class=\"shen-sha-item\">\r\n                <span class=\"label\">财神</span>\r\n                <span class=\"value\">{{ baziData.shenSha.caiShen }}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- 本命神煞 -->\r\n            <div class=\"ben-ming-sha\" v-if=\"baziData.shenSha.benMing.length > 0\">\r\n              <h4>本命神煞</h4>\r\n              <div class=\"ben-ming-list\">\r\n                <span v-for=\"(sha, index) in baziData.shenSha.benMing\" :key=\"index\" class=\"ben-ming-item\">\r\n                  {{ sha }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"shen-sha-info\" v-else>\r\n            <van-cell-group inset>\r\n              <van-cell title=\"神煞信息\" value=\"暂无数据\" />\r\n            </van-cell-group>\r\n          </div>\r\n          \r\n          <!-- 添加大运显示 -->\r\n          <h3>大运信息</h3>\r\n          <div class=\"da-yun-info\" v-if=\"baziData && baziData.daYun\">\r\n            <div class=\"qi-yun-info\">\r\n              <p>起运年龄: {{ baziData.daYun.startAge }}岁</p>\r\n              <p>起运年份: {{ baziData.daYun.startYear }}年</p>\r\n              <p>大运顺序: {{ baziData.daYun.isForward ? '顺行' : '逆行' }}</p>\r\n            </div>\r\n            \r\n            <!-- 大运列表 -->\r\n            <div class=\"da-yun-table\">\r\n              <table class=\"custom-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>年龄</th>\r\n                    <th>年份</th>\r\n                    <th>天干</th>\r\n                    <th>地支</th>\r\n                    <th>纳音</th>\r\n                    <th>吉凶</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(yun, index) in baziData.daYun.daYunList\" :key=\"index\">\r\n                    <td>{{ yun.startAge }}-{{ yun.endAge }}</td>\r\n                    <td>{{ yun.startYear }}-{{ yun.endYear }}</td>\r\n                    <td>{{ yun.heavenlyStem }}</td>\r\n                    <td>{{ yun.earthlyBranch }}</td>\r\n                    <td>{{ yun.naYin }}</td>\r\n                    <td>{{ yun.jiXiong }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"da-yun-info\" v-else>\r\n            <van-cell-group inset>\r\n              <van-cell title=\"大运信息\" value=\"暂无数据\" />\r\n            </van-cell-group>\r\n          </div>\r\n          \r\n          <h3>流年信息</h3>\r\n          <div class=\"liu-nian-info\" v-if=\"baziData && baziData.flowingYears && baziData.flowingYears.length\">\r\n            <table class=\"custom-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>年份</th>\r\n                  <th>年龄</th>\r\n                  <th>天干</th>\r\n                  <th>地支</th>\r\n                  <th>五行</th>\r\n                  <th>神煞</th>\r\n                  <th>吉凶</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(year, index) in baziData.flowingYears\" :key=\"index\">\r\n                  <td>{{ year.year }}</td>\r\n                  <td>{{ year.age }}</td>\r\n                  <td>{{ year.heavenlyStem }}</td>\r\n                  <td>{{ year.earthlyBranch }}</td>\r\n                  <td>{{ getElementName(year.ganElement) }}/{{ getElementName(year.zhiElement) }}</td>\r\n                  <td>{{ year.shenSha && Array.isArray(year.shenSha) ? year.shenSha.join(', ') : '无' }}</td>\r\n                  <td>{{ year.jiXiong || '未知' }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"liu-nian-info\" v-else>\r\n            <van-empty description=\"流年数据暂无\" />\r\n          </div>\r\n        </div>\r\n      </van-tab>\r\n      \r\n      <van-tab title=\"AI分析结果\">\r\n        <div class=\"ai-analysis\">\r\n          <div v-if=\"userAge !== null && userAge < 0\" class=\"age-notice\">\r\n            <van-notice-bar\r\n              color=\"#1989fa\"\r\n              background=\"#ecf9ff\"\r\n              left-icon=\"info-o\"\r\n            >\r\n              此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。\r\n            </van-notice-bar>\r\n          </div>\r\n          <div v-else-if=\"userAge !== null && userAge < 6\" class=\"age-notice\">\r\n            <van-notice-bar\r\n              color=\"#1989fa\"\r\n              background=\"#ecf9ff\"\r\n              left-icon=\"info-o\"\r\n            >\r\n              此分析针对婴幼儿({{userAge}}岁)，重点关注性格特点、天赋才能和健康发展趋势。\r\n            </van-notice-bar>\r\n          </div>\r\n          <div v-else-if=\"userAge !== null && userAge < 18\" class=\"age-notice\">\r\n            <van-notice-bar\r\n              color=\"#1989fa\"\r\n              background=\"#ecf9ff\"\r\n              left-icon=\"info-o\"\r\n            >\r\n              此分析针对未成年人({{userAge}}岁)，重点关注性格特点、学业发展和健康状况。\r\n            </van-notice-bar>\r\n          </div>\r\n          \r\n          <!-- 添加全局分析状态提示 -->\r\n          <van-notice-bar\r\n            v-if=\"isAnalyzing\"\r\n            color=\"#1989fa\"\r\n            background=\"#ecf9ff\"\r\n            left-icon=\"info-o\"\r\n            :scrollable=\"false\"\r\n            class=\"analysis-progress-notice\"\r\n          >\r\n            <div class=\"analysis-progress\">\r\n              <p>AI正在生成八字分析结果，这可能需要30-60秒</p>\r\n              <van-progress :percentage=\"analyzeProgress\" :show-pivot=\"false\" color=\"#1989fa\" />\r\n            </div>\r\n          </van-notice-bar>\r\n          \r\n          <!-- 八字命局核心分析 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>八字命局核心分析</h3>\r\n            <template v-if=\"!aiAnalysis.coreAnalysis || aiAnalysis.coreAnalysis === '暂无' || aiAnalysis.coreAnalysis.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.coreAnalysis)\" class=\"markdown-content\"></div>\r\n          </div>\r\n          \r\n          <!-- 五行旺衰与用神 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>五行旺衰与用神</h3>\r\n            <template v-if=\"!aiAnalysis.fiveElements || aiAnalysis.fiveElements === '暂无' || aiAnalysis.fiveElements.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.fiveElements)\" class=\"markdown-content\"></div>\r\n          </div>\r\n          \r\n          <!-- 神煞解析 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>神煞解析</h3>\r\n            <template v-if=\"!aiAnalysis.shenShaAnalysis || aiAnalysis.shenShaAnalysis === '暂无' || aiAnalysis.shenShaAnalysis.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.shenShaAnalysis)\" class=\"markdown-content\"></div>\r\n          </div>\r\n          \r\n          <!-- 大运与流年关键节点 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>大运与流年关键节点</h3>\r\n            <template v-if=\"!aiAnalysis.keyPoints || aiAnalysis.keyPoints === '暂无' || aiAnalysis.keyPoints.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else v-html=\"renderMarkdown(aiAnalysis.keyPoints)\" class=\"markdown-content\"></div>\r\n          </div>\r\n          \r\n          <!-- 婚姻感情 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>{{ userAge !== null && userAge >= 18 ? '婚姻感情' : '未来感情发展' }}</h3>\r\n            <template v-if=\"!aiAnalysis.relationship || aiAnalysis.relationship === '暂无' || aiAnalysis.relationship.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.relationship || followupAnalysis.marriage\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.relationship || followupAnalysis.marriage)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.relationship)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 事业财运 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>{{ userAge !== null && userAge >= 18 ? '事业财运' : '未来事业财运' }}</h3>\r\n            <template v-if=\"!aiAnalysis.career || aiAnalysis.career === '暂无' || aiAnalysis.career.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.career || followupAnalysis.work || followupAnalysis.money || followupAnalysis.wealth\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.career || followupAnalysis.work || followupAnalysis.money || followupAnalysis.wealth)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.career)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 子女情况 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>{{ userAge !== null && userAge >= 18 ? '子女情况' : '未来子女缘分' }}</h3>\r\n            <template v-if=\"!aiAnalysis.children || aiAnalysis.children === '暂无' || aiAnalysis.children.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.children || followupAnalysis.family\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.children || followupAnalysis.family)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.children)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 父母情况 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>父母情况</h3>\r\n            <template v-if=\"!aiAnalysis.parents || aiAnalysis.parents === '暂无' || aiAnalysis.parents.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.parents\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.parents)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.parents)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 身体健康 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>身体健康</h3>\r\n            <template v-if=\"!aiAnalysis.health || aiAnalysis.health === '暂无' || aiAnalysis.health.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.health\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.health)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.health)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 学业 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>学业</h3>\r\n            <template v-if=\"!aiAnalysis.education || aiAnalysis.education === '暂无' || aiAnalysis.education.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.education || followupAnalysis.study\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.education || followupAnalysis.study)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.education)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 人际关系 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>人际关系</h3>\r\n            <template v-if=\"!aiAnalysis.social || aiAnalysis.social === '暂无' || aiAnalysis.social.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.social || followupAnalysis.relationship || followupAnalysis.friends\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.social || followupAnalysis.relationship || followupAnalysis.friends)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.social)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- 近五年运势 -->\r\n          <div class=\"analysis-section\">\r\n            <h3>近五年运势</h3>\r\n            <template v-if=\"!aiAnalysis.future || aiAnalysis.future === '暂无' || aiAnalysis.future.includes('正在分析')\">\r\n              <div class=\"loading-content\">\r\n                <van-loading size=\"24px\" vertical>分析生成中...</van-loading>\r\n              </div>\r\n            </template>\r\n            <div v-else>\r\n              <!-- 如果有追问分析结果，优先显示追问分析 -->\r\n              <div v-if=\"followupAnalysis.future || followupAnalysis.fiveYears\" class=\"enhanced-analysis\">\r\n                <div v-html=\"renderMarkdown(followupAnalysis.future || followupAnalysis.fiveYears)\" class=\"markdown-content\"></div>\r\n                <div class=\"analysis-source\">\r\n                  <van-tag type=\"primary\" size=\"medium\">深度分析</van-tag>\r\n                </div>\r\n              </div>\r\n              <div v-else v-html=\"renderMarkdown(aiAnalysis.future)\" class=\"markdown-content\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </van-tab>\r\n    </van-tabs>\r\n    \r\n    <div class=\"action-buttons\">\r\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\r\n        下载PDF报告\r\n      </van-button>\r\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\r\n        分享结果\r\n      </van-button>\r\n      \r\n      <!-- 本地生成PDF按钮 -->\r\n      <van-button plain type=\"info\" \r\n                  block \r\n                  style=\"margin-top: 10px;\" \r\n                  @click=\"handleLocalPDFGeneration\">\r\n        本地生成PDF\r\n      </van-button>\r\n      \r\n      <!-- 调试按钮 -->\r\n      <van-button plain type=\"warning\" \r\n                  block \r\n                  style=\"margin-top: 10px;\" \r\n                  @click=\"reloadBaziData\">\r\n        重新加载分析数据\r\n      </van-button>\r\n    </div>\r\n    \r\n    <!-- 添加追问部分 -->\r\n    <div class=\"followup-section\" v-if=\"baziData && !loading\">\r\n      <h2 class=\"section-title\">深度分析</h2>\r\n      <p class=\"section-desc\">选择您感兴趣的领域，进行深度分析</p>\r\n      \r\n      <div class=\"followup-options\">\r\n        <div \r\n          v-for=\"option in followupOptions\" \r\n          :key=\"option.id\" \r\n          class=\"followup-option\" \r\n          :class=\"{ 'paid': option.paid }\"\r\n          @click=\"selectFollowupOption(option)\"\r\n        >\r\n          <div class=\"option-content\">\r\n            <span class=\"option-name\">{{ option.name }}</span>\r\n            <span class=\"option-status\" v-if=\"option.paid\">已解锁</span>\r\n            <span class=\"option-status\" v-else>￥9.9</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 已支付的追问分析结果展示 -->\r\n      <div v-if=\"currentFollowup && currentFollowup.paid\" class=\"followup-result\">\r\n        <h3>{{ currentFollowup.name }}分析</h3>\r\n        <div v-if=\"isLoadingFollowup\" class=\"loading-content\">\r\n          <van-loading size=\"24px\" vertical>分析加载中...</van-loading>\r\n        </div>\r\n        <div v-else-if=\"!followupAnalysis[currentFollowup.id]\" class=\"loading-content\">\r\n          <van-empty description=\"分析结果尚未生成，请稍后刷新页面\" />\r\n          <van-button type=\"primary\" size=\"small\" @click=\"reloadFollowupAnalysis(currentFollowup.id)\">\r\n            刷新分析\r\n          </van-button>\r\n        </div>\r\n        <div v-else class=\"analysis-content\" v-html=\"renderMarkdown(followupAnalysis[currentFollowup.id])\"></div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 追问支付对话框 -->\r\n    <van-dialog\r\n      v-model:show=\"showFollowupDialog\"\r\n      title=\"深度分析\"\r\n      confirm-button-text=\"支付 ￥9.9\"\r\n      @confirm=\"payForFollowup\"\r\n      :before-close=\"() => !isLoadingFollowup\"\r\n    >\r\n      <div class=\"followup-dialog-content\">\r\n        <p>您选择了「{{ currentFollowup?.name }}」深度分析</p>\r\n        <p>支付后，AI将根据您的八字和流年运势，为您提供专业的命理分析</p>\r\n      </div>\r\n    </van-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive, computed, watch, onUnmounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { Toast, Dialog } from 'vant';\r\nimport { jsPDF } from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport axios from 'axios';\r\nimport MarkdownIt from 'markdown-it';  // 添加markdown-it导入\r\n\r\n// 创建markdown解析器实例\r\nconst md = new MarkdownIt({\r\n  html: true,\r\n  breaks: true,\r\n  linkify: true,\r\n  typographer: true\r\n});\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst resultId = ref(route.params.id || route.query.resultId);\r\nconst activeTab = ref(0);\r\nconst loading = ref(false);\r\n\r\n// 添加分析状态相关变量\r\nconst isAnalyzing = ref(false);\r\nconst analyzeProgress = ref(0);\r\nconst analyzeTimer = ref(null);\r\n\r\n// 渲染Markdown内容\r\nconst renderMarkdown = (content) => {\r\n  if (!content) return '';\r\n  try {\r\n    // 检查内容是否已经是HTML\r\n    if (content.includes('<') && content.includes('>')) {\r\n      // 如果已经含有HTML标签，可能已经被渲染过，直接返回\r\n      return content;\r\n    }\r\n    return md.render(content);\r\n  } catch (e) {\r\n    console.error('Markdown渲染失败:', e);\r\n    return content; // 如果渲染失败，返回原始内容\r\n  }\r\n};\r\n\r\n// 用户年龄，从URL参数或localStorage获取\r\nconst userAge = ref(null);\r\n// 尝试从URL参数获取年龄\r\nif (route.query.age && !isNaN(parseInt(route.query.age))) {\r\n  userAge.value = parseInt(route.query.age);\r\n} \r\n// 如果URL参数中没有年龄，尝试从localStorage获取\r\nelse if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\r\n  userAge.value = parseInt(localStorage.getItem('userAge'));\r\n}\r\n// 记录用户年龄到控制台，便于调试\r\nconsole.log('用户年龄:', userAge.value);\r\n\r\n// 从分析文本中提取特定部分内容\r\nconst getAnalysisContent = (sectionName) => {\r\n  try {\r\n    // 如果是性格特点或学业发展，直接从对应字段获取\r\n    if (sectionName === '性格特点' && aiAnalysis.value.personality) {\r\n      return aiAnalysis.value.personality;\r\n    }\r\n    \r\n    if (sectionName === '学业发展' && aiAnalysis.value.education) {\r\n      return aiAnalysis.value.education;\r\n    }\r\n    \r\n    // 处理健康分析文本，尝试提取学业、性格等内容\r\n    if (aiAnalysis.value.health) {\r\n      const healthText = aiAnalysis.value.health;\r\n      \r\n      // 查找各部分的标记\r\n      const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\r\n      if (sectionMatch && sectionMatch[1]) {\r\n        return sectionMatch[1].trim();\r\n      }\r\n      \r\n      // 如果是未来发展，尝试从overall中提取\r\n      if (sectionName === '未来发展' && aiAnalysis.value.overall) {\r\n        const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\r\n        if (futureMatch && futureMatch[2]) {\r\n          return futureMatch[2].trim();\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 如果没有找到对应部分或提取失败，返回空字符串\r\n    return '';\r\n  } catch (e) {\r\n    console.error(`提取${sectionName}内容时出错:`, e);\r\n    return '';\r\n  }\r\n};\r\n\r\n// 修改数据初始化\r\nconst focusAreas = ref([]);\r\nconst analysisResult = ref({});\r\n\r\n// 初始化八字数据\r\nconst baziData = ref({\r\n  yearPillar: { \r\n    heavenlyStem: '', \r\n    earthlyBranch: '',\r\n    naYin: '',\r\n    shiShen: '',\r\n    wangShuai: ''\r\n  },\r\n  monthPillar: { \r\n    heavenlyStem: '', \r\n    earthlyBranch: '',\r\n    naYin: '',\r\n    shiShen: '',\r\n    wangShuai: ''\r\n  },\r\n  dayPillar: { \r\n    heavenlyStem: '', \r\n    earthlyBranch: '',\r\n    naYin: '',\r\n    shiShen: '',\r\n    wangShuai: ''\r\n  },\r\n  hourPillar: { \r\n    heavenlyStem: '', \r\n    earthlyBranch: '',\r\n    naYin: '',\r\n    shiShen: '',\r\n    wangShuai: ''\r\n  },\r\n  fiveElements: {},\r\n  flowingYears: [],\r\n  shenSha: {\r\n    dayChong: '',\r\n    zhiShen: '',\r\n    xiShen: '',\r\n    fuShen: '',\r\n    caiShen: '',\r\n    benMing: [],\r\n    yearGan: [],\r\n    yearZhi: [],\r\n    dayGan: [],\r\n    dayZhi: []\r\n  },\r\n  daYun: {\r\n    startAge: 0,\r\n    startYear: 0,\r\n    isForward: true,\r\n    daYunList: []\r\n  },\r\n  birthDate: null,\r\n  birthTime: null,\r\n  gender: null\r\n});\r\n\r\n// 初始化分析数据\r\nconst aiAnalysis = ref({\r\n  health: '',\r\n  career: '',\r\n  relationship: '',\r\n  children: '',\r\n  social: '',\r\n  future: '',\r\n  parents: '',\r\n  education: '',\r\n  // 新增字段\r\n  coreAnalysis: '',\r\n  fiveElements: '',\r\n  shenShaAnalysis: '',\r\n  keyPoints: ''\r\n});\r\n\r\nconst testApiConnection = async () => {\r\n  try {\r\n    Toast.loading('正在测试API连接...');\r\n    // 使用配置好的http实例\r\n    const response = await axios.get('/');\r\n    console.log('API根路径响应:', response.data);\r\n    Toast.success('API连接成功');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('API连接测试失败:', error);\r\n    Toast.fail('API连接失败，请检查后端服务');\r\n    return false;\r\n  }\r\n};\r\n\r\nonMounted(async () => {\r\n  // 先测试API连接\r\n  const isApiConnected = await testApiConnection();\r\n  if (!isApiConnected) {\r\n    console.warn('API连接失败，将使用模拟数据');\r\n    loading.value = false;\r\n    return;\r\n  }\r\n  \r\n  console.log('结果页面加载，URL参数中的ID:', resultId.value);\r\n  \r\n  // 如果没有resultId，尝试从本地存储获取\r\n  const localResultId = localStorage.getItem('resultId');\r\n  if (!resultId.value && localResultId) {\r\n    console.log('从本地存储获取ID:', localResultId);\r\n    // 更新resultId为从本地存储获取的值\r\n    resultId.value = localResultId;\r\n  }\r\n  \r\n  // 确保resultId是字符串类型，不是布尔值或其他数据类型\r\n  if (resultId.value === true || resultId.value === false) {\r\n    console.error('resultId不应该是布尔值:', resultId.value);\r\n    resultId.value = localResultId || route.query.resultId || '';\r\n  }\r\n  \r\n  console.log('最终使用的resultId:', resultId.value);\r\n  \r\n  // 如果resultId为空或无效，显示错误并尝试从URL查询参数获取\r\n  if (!resultId.value) {\r\n    console.error('缺少结果ID，无法获取分析结果');\r\n    \r\n    // 尝试从URL查询参数获取备选ID\r\n    const urlResultId = route.query.resultId;\r\n    if (urlResultId) {\r\n      console.log('从URL查询参数获取备选ID:', urlResultId);\r\n      resultId.value = urlResultId;\r\n    } else {\r\n      Toast.fail('缺少结果ID，无法获取分析结果');\r\n      loading.value = false;\r\n      return;\r\n    }\r\n  }\r\n  \r\n  // 存储确认的resultId到本地存储\r\n  localStorage.setItem('resultId', resultId.value);\r\n  \r\n  // 显示加载提示\r\n  Toast.loading({\r\n    message: '正在加载八字分析结果，请稍候...',\r\n    duration: 0,\r\n    forbidClick: true\r\n  });\r\n  \r\n  // 调用getBaziResult函数获取结果\r\n  await getBaziResult();\r\n  \r\n  // 检查分析是否完成\r\n  const stillAnalyzing = Object.values(aiAnalysis.value).some(\r\n    value => typeof value === 'string' && value.includes('正在分析')\r\n  );\r\n  \r\n  if (stillAnalyzing) {\r\n    console.log('检测到分析仍在进行中...');\r\n    Toast.loading({\r\n      message: '正在生成八字分析结果，这可能需要30-60秒...',\r\n      duration: 0\r\n    });\r\n    \r\n    // 启动轮询\r\n    await pollAnalysisStatus(resultId.value);\r\n    Toast.success('分析完成');\r\n  }\r\n  \r\n  // 关闭加载提示\r\n  Toast.clear();\r\n});\r\n\r\nconst getElementName = (element) => {\r\n  if (!element) return '--';\r\n  \r\n  const elementNames = {\r\n    'wood': '木',\r\n    'fire': '火',\r\n    'earth': '土',\r\n    'metal': '金',\r\n    'water': '水',\r\n    '木': '木',\r\n    '火': '火',\r\n    '土': '土',\r\n    '金': '金',\r\n    '水': '水'\r\n  };\r\n  \r\n  return elementNames[element] || element;\r\n};\r\n\r\nconst onClickLeft = () => {\r\n  router.push('/');\r\n};\r\n\r\n// 修改后的直接流下载函数，适应后端始终返回文件流\r\nconst downloadPDFAsStream = async () => {\r\n  Toast.loading({\r\n    message: '正在生成PDF并下载报告...',\r\n    duration: 0,\r\n    position: 'middle',\r\n    forbidClick: true\r\n  });\r\n  \r\n  if (!resultId.value) {\r\n    Toast.clear();\r\n    Toast.fail('缺少结果ID，无法下载报告');\r\n    return false;\r\n  }\r\n  \r\n  try {\r\n    console.log('直接下载报告, 结果ID:', resultId.value);\r\n    \r\n    // 创建下载链接，添加时间戳避免缓存问题和force参数强制重新生成\r\n    const timestamp = new Date().getTime();\r\n    const downloadUrl = `/api/bazi/pdf/${resultId.value}?t=${timestamp}&force=true&parseMarkdown=true`;\r\n    console.log('下载URL:', downloadUrl);\r\n    \r\n    // 使用fetch API获取文件流\r\n    const response = await fetch(downloadUrl, {\r\n      method: 'GET',\r\n      cache: 'no-cache',\r\n      headers: {\r\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n        'Pragma': 'no-cache',\r\n        'Expires': '0'\r\n      }\r\n    });\r\n    \r\n    // 检查错误\r\n    if (!response.ok) {\r\n      let errorMsg = `下载失败: HTTP错误 ${response.status}`;\r\n      try {\r\n        const contentType = response.headers.get('content-type');\r\n        if (contentType && contentType.includes('application/json')) {\r\n          const errorData = await response.json();\r\n          errorMsg = errorData.message || errorMsg;\r\n        } else {\r\n          // 如果不是JSON格式的错误，尝试获取文本错误信息\r\n          const errorText = await response.text();\r\n          if (errorText) {\r\n            errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error('解析错误响应失败:', e);\r\n      }\r\n      throw new Error(errorMsg);\r\n    }\r\n    \r\n    // 检查内容类型\r\n    const contentType = response.headers.get('content-type');\r\n    const disposition = response.headers.get('content-disposition');\r\n    \r\n    console.log('响应内容类型:', contentType);\r\n    console.log('响应内容处置:', disposition);\r\n    \r\n    // 确定文件名和扩展名\r\n    let filename = `八字命理分析_${resultId.value}.pdf`;\r\n    if (disposition && disposition.includes('filename=')) {\r\n      const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\r\n      if (filenameMatch && filenameMatch[1]) {\r\n        filename = filenameMatch[1];\r\n      }\r\n    }\r\n    \r\n    // 确定文件类型\r\n    const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\r\n    if (!filename.endsWith(fileExtension)) {\r\n      filename = `八字命理分析_${resultId.value}.${fileExtension}`;\r\n    }\r\n    \r\n    // 转换为Blob对象\r\n    const blob = await response.blob();\r\n    console.log('PDF Blob大小:', blob.size, '字节');\r\n    \r\n    // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\r\n    // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\r\n    const isDownloadStarted = disposition && disposition.includes('attachment');\r\n    if (blob.size === 0 && !isDownloadStarted) {\r\n      throw new Error('下载的文件为空');\r\n    }\r\n    \r\n    // 对于小文件，我们可以验证文件内容\r\n    // 但对于大文件或浏览器接管的下载，跳过验证\r\n    if (blob.size > 0 && blob.size < 1024*1024 && contentType && contentType.includes('pdf')) {\r\n      try {\r\n        // 读取文件头部以验证是否为有效的PDF\r\n        const fileReader = new FileReader();\r\n        const headerPromise = new Promise((resolve, reject) => {\r\n          fileReader.onloadend = (e) => resolve(e.target.result);\r\n          fileReader.onerror = (e) => reject(e);\r\n        });\r\n        fileReader.readAsArrayBuffer(blob.slice(0, 5));\r\n        \r\n        const header = await headerPromise;\r\n        const headerView = new Uint8Array(header);\r\n        const headerString = String.fromCharCode.apply(null, headerView);\r\n        \r\n        if (!headerString.startsWith('%PDF')) {\r\n          console.error('无效的PDF文件头:', headerString);\r\n          throw new Error('下载的不是有效的PDF文件');\r\n        } else {\r\n          console.log('PDF文件头验证通过');\r\n        }\r\n      } catch (e) {\r\n        console.error('验证PDF文件失败:', e);\r\n        // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\r\n        if (!isDownloadStarted) {\r\n          throw new Error('验证PDF文件失败: ' + e.message);\r\n        } else {\r\n          console.warn('浏览器接管了下载，跳过PDF验证');\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 不管浏览器是否已经接管下载，我们都手动创建一个下载链接\r\n    try {\r\n      // 创建下载链接\r\n      const url = window.URL.createObjectURL(blob);\r\n      console.log('创建Blob URL:', url);\r\n      \r\n      // 使用iframe方式下载，避免某些浏览器的下载拦截\r\n      const iframe = document.createElement('iframe');\r\n      iframe.style.display = 'none';\r\n      document.body.appendChild(iframe);\r\n      \r\n      // 创建a标签并触发下载\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `八字命理分析_${resultId.value}.pdf`; // 强制使用自定义文件名\r\n      a.target = '_blank';\r\n      a.rel = 'noopener noreferrer';\r\n      \r\n      // 在iframe中添加a标签并点击\r\n      iframe.contentWindow.document.body.appendChild(a);\r\n      console.log('触发下载, 文件名:', a.download);\r\n      a.click();\r\n      \r\n      // 清理\r\n      setTimeout(() => {\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(iframe);\r\n        console.log('清理下载资源完成');\r\n      }, 1000); // 增加延时确保下载开始\r\n    } catch (e) {\r\n      console.error('创建下载链接失败:', e);\r\n      \r\n      // 尝试使用window.open直接打开PDF\r\n      try {\r\n        console.log('尝试使用window.open方法下载');\r\n        const pdfWindow = window.open(downloadUrl, '_blank');\r\n        if (!pdfWindow) {\r\n          console.warn('弹出窗口被阻止，尝试其他方法');\r\n          // 提示用户直接打开链接\r\n          Dialog.alert({\r\n            title: '下载提示',\r\n            message: '系统无法自动下载PDF，请点击确定后手动保存文件',\r\n            confirmButtonText: '确定',\r\n          }).then(() => {\r\n            window.open(downloadUrl, '_blank');\r\n          });\r\n        }\r\n      } catch (openError) {\r\n        console.error('使用window.open下载失败:', openError);\r\n        throw new Error('下载失败，请尝试使用其他浏览器');\r\n      }\r\n    }\r\n    \r\n    Toast.clear();\r\n    Toast.success('报告下载成功');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('直接下载PDF出错:', error);\r\n    Toast.clear();\r\n    \r\n    // 检查是否是因为浏览器已经接管了下载而导致的错误\r\n    if (error.message && (\r\n        error.message.includes('下载的文件为空') || \r\n        error.message.includes('验证PDF文件失败')\r\n      )) {\r\n      // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\r\n      console.log('可能是浏览器已经接管了下载，不显示错误');\r\n      Toast.success('报告下载已开始，请等待浏览器完成下载');\r\n      return true;\r\n    }\r\n    \r\n    // 显示错误信息\r\n    Toast.fail(error.message || '下载失败，请稍后重试');\r\n    return false;\r\n  }\r\n};\r\n\r\n// 修改主下载函数，添加重试逻辑\r\nconst downloadPDF = async () => {\r\n  Toast.loading({\r\n    message: '正在准备生成PDF报告...',\r\n    duration: 5000,\r\n    position: 'middle'\r\n  });\r\n  \r\n  if (!resultId.value) {\r\n    Toast.fail('缺少结果ID，无法生成报告');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // 先重新加载最新的数据，确保PDF包含最新的追问分析结果\r\n    Toast.loading({\r\n      message: '正在同步最新数据...',\r\n      duration: 5000\r\n    });\r\n    \r\n    // 获取最新的基础分析结果\r\n    await getBaziResult();\r\n    \r\n    // 获取最新的追问分析结果\r\n    await loadFollowupResults();\r\n    \r\n    Toast.loading({\r\n      message: '正在生成并下载PDF报告...',\r\n      duration: 5000\r\n    });\r\n    \r\n    // 最多尝试3次下载\r\n    let attempts = 0;\r\n    let success = false;\r\n    \r\n    while (attempts < 3 && !success) {\r\n      attempts++;\r\n      \r\n      if (attempts > 1) {\r\n        console.log(`尝试第${attempts}次下载...`);\r\n        Toast.loading({\r\n          message: `尝试第${attempts}次下载...`,\r\n          duration: 2000\r\n        });\r\n        // 在重试之前等待一段时间\r\n        await new Promise(resolve => setTimeout(resolve, 2000));\r\n      }\r\n      \r\n      // 使用流式下载模式，并处理返回值\r\n      success = await downloadPDFAsStream();\r\n      \r\n      // 如果流式下载成功，直接返回，不再尝试其他方法\r\n      if (success === true) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // 如果多次尝试后仍然失败，提示用户\r\n    if (!success) {\r\n      Toast.clear();\r\n      Dialog.alert({\r\n        title: 'PDF下载失败',\r\n        message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('下载PDF过程中发生错误:', error);\r\n    Toast.clear();\r\n    Toast.fail('生成PDF报告失败: ' + (error.message || '未知错误'));\r\n  }\r\n};\r\n\r\n// 本地生成PDF的函数\r\nconst generatePDFLocally = async () => {\r\n  console.log('使用客户端jsPDF库生成PDF');\r\n  \r\n  // 获取内容元素\r\n  const element = document.querySelector('.result-container');\r\n  if (!element) {\r\n    throw new Error('找不到要转换的内容元素');\r\n  }\r\n  \r\n  Toast.loading({\r\n    message: '正在捕获页面内容...',\r\n    duration: 5000\r\n  });\r\n  \r\n  try {\r\n    // 在捕获内容前先应用Markdown格式（临时）\r\n    const sections = document.querySelectorAll('.analysis-section');\r\n    const originalContents = [];\r\n    \r\n    // 确保所有Markdown内容都已经被渲染为HTML\r\n    sections.forEach((section, index) => {\r\n      const contentElement = section.querySelector('p, .markdown-content');\r\n      if (contentElement && !contentElement.classList.contains('markdown-content')) {\r\n        originalContents.push({\r\n          element: contentElement,\r\n          content: contentElement.innerHTML\r\n        });\r\n        \r\n        // 如果内容中有Markdown语法但尚未渲染，则渲染它\r\n        if (contentElement.textContent.includes('**') || \r\n            contentElement.textContent.includes('##') ||\r\n            contentElement.textContent.includes('--') ||\r\n            contentElement.textContent.includes('- ')) {\r\n          contentElement.innerHTML = md.render(contentElement.textContent);\r\n          contentElement.classList.add('markdown-content-temp');\r\n        }\r\n      }\r\n    });\r\n    \r\n    // 使用html2canvas捕获内容\r\n    const canvas = await html2canvas(element, {\r\n      scale: 1,\r\n      useCORS: true,\r\n      logging: false,\r\n      windowWidth: document.documentElement.offsetWidth,\r\n      windowHeight: document.documentElement.offsetHeight,\r\n    });\r\n    \r\n    Toast.loading({\r\n      message: '正在生成PDF文件...',\r\n      duration: 5000\r\n    });\r\n        \r\n    // 创建PDF文档\r\n    const pdf = new jsPDF('p', 'mm', 'a4');\r\n        \r\n    // 计算尺寸和比例\r\n    const imgData = canvas.toDataURL('image/png');\r\n    const imgWidth = 210; // A4宽度，单位mm\r\n    const pageHeight = 297; // A4高度，单位mm\r\n    const imgHeight = canvas.height * imgWidth / canvas.width;\r\n    let heightLeft = imgHeight;\r\n    let position = 0;\r\n          \r\n    // 添加首页\r\n    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\r\n    heightLeft -= pageHeight;\r\n    \r\n    // 如果内容超过一页，添加更多页\r\n    while (heightLeft > 0) {\r\n      position = heightLeft - imgHeight;\r\n      pdf.addPage();\r\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\r\n      heightLeft -= pageHeight;\r\n    }\r\n    \r\n    // 添加页脚\r\n    const pageCount = pdf.internal.getNumberOfPages();\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      pdf.setPage(i);\r\n      pdf.setFontSize(10);\r\n      pdf.setTextColor(150);\r\n      pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });\r\n    }\r\n    \r\n    // 恢复原始内容\r\n    originalContents.forEach(item => {\r\n      if (item && item.element) {\r\n        item.element.innerHTML = item.content;\r\n        item.element.classList.remove('markdown-content-temp');\r\n      }\r\n    });\r\n    \r\n    // 保存PDF\r\n    pdf.save(`八字命理分析_${resultId.value}.pdf`);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('本地PDF生成错误:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst shareResult = () => {\r\n  Toast.success('分享功能开发中');\r\n};\r\n\r\n// 处理本地PDF生成\r\nconst handleLocalPDFGeneration = async () => {\r\n  try {\r\n    Toast.loading({\r\n      message: '正在本地生成PDF...',\r\n      duration: 0,\r\n      forbidClick: true\r\n    });\r\n    \r\n    // 确保所有内容都已经渲染Markdown\r\n    const sections = document.querySelectorAll('.analysis-section');\r\n    const originalContents = [];\r\n    let needsRendering = false;\r\n    \r\n    // 检查是否有内容需要渲染\r\n    sections.forEach((section) => {\r\n      const contentElement = section.querySelector('p:not(.markdown-content)');\r\n      if (contentElement) {\r\n        needsRendering = true;\r\n      }\r\n    });\r\n    \r\n    // 如果需要渲染，先将所有内容进行Markdown渲染\r\n    if (needsRendering) {\r\n      console.log('检测到需要渲染Markdown内容');\r\n      sections.forEach((section) => {\r\n        const contentElements = section.querySelectorAll('p:not(.markdown-content)');\r\n        contentElements.forEach((element) => {\r\n          const text = element.textContent;\r\n          if (text && (\r\n            text.includes('**') || \r\n            text.includes('#') || \r\n            text.includes('-') || \r\n            text.includes('1.') ||\r\n            text.includes('\\n')\r\n          )) {\r\n            originalContents.push({\r\n              element: element,\r\n              content: element.innerHTML\r\n            });\r\n            element.innerHTML = md.render(text);\r\n            element.classList.add('markdown-content');\r\n            element.classList.add('temp-rendered');\r\n          }\r\n        });\r\n      });\r\n    }\r\n    \r\n    // 生成PDF\r\n    await generatePDFLocally();\r\n    \r\n    // 恢复原始内容\r\n    if (needsRendering) {\r\n      document.querySelectorAll('.temp-rendered').forEach((element) => {\r\n        const original = originalContents.find(item => item.element === element);\r\n        if (original) {\r\n          element.innerHTML = original.content;\r\n          element.classList.remove('markdown-content');\r\n          element.classList.remove('temp-rendered');\r\n        }\r\n      });\r\n    }\r\n    \r\n    Toast.clear();\r\n    Toast.success('本地PDF生成成功');\r\n  } catch (error) {\r\n    console.error('本地PDF生成失败:', error);\r\n    Toast.clear();\r\n    Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\r\n  }\r\n};\r\n\r\n// 添加分析状态检查函数\r\nconst checkAnalysisStatus = async (resultId) => {\r\n  try {\r\n    console.log('检查分析状态:', resultId);\r\n    const response = await axios.get(`/api/bazi/result/${resultId}`);\r\n    \r\n    if (response.data.code === 200) {\r\n      // 检查AI分析是否已经生成\r\n      const aiAnalysisData = response.data.data.aiAnalysis || {};\r\n      \r\n      // 统计已完成和正在分析的项目\r\n      let totalItems = 0;\r\n      let completedItems = 0;\r\n      \r\n      Object.entries(aiAnalysisData).forEach(([key, value]) => {\r\n        totalItems++;\r\n        if (!(typeof value === 'string' && value.includes('正在分析'))) {\r\n          completedItems++;\r\n        }\r\n      });\r\n      \r\n      // 更新进度\r\n      if (totalItems > 0) {\r\n        analyzeProgress.value = Math.floor((completedItems / totalItems) * 100);\r\n      }\r\n      \r\n      // 检查是否还有\"正在分析\"的内容\r\n      const stillAnalyzing = Object.values(aiAnalysisData).some(\r\n        value => typeof value === 'string' && value.includes('正在分析')\r\n      );\r\n      \r\n      isAnalyzing.value = stillAnalyzing;\r\n      \r\n      if (stillAnalyzing) {\r\n        console.log('分析仍在进行中...', `完成度: ${analyzeProgress.value}%`);\r\n        return false;\r\n      } else {\r\n        console.log('分析已完成');\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    console.error('检查分析状态出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// 添加轮询检查函数\r\nconst pollAnalysisStatus = async (resultId, maxAttempts = 30) => {\r\n  let attempts = 0;\r\n  \r\n  // 显示进度条\r\n  isAnalyzing.value = true;\r\n  \r\n  // 创建模拟进度，即使后端没有反馈也会看到进度在增加\r\n  if (analyzeTimer.value) clearInterval(analyzeTimer.value);\r\n  analyzeTimer.value = setInterval(() => {\r\n    if (analyzeProgress.value < 90) {\r\n      analyzeProgress.value += 2;\r\n    }\r\n  }, 2000);\r\n  \r\n  return new Promise((resolve) => {\r\n    const checkInterval = setInterval(async () => {\r\n      attempts++;\r\n      const isComplete = await checkAnalysisStatus(resultId);\r\n      \r\n      if (isComplete || attempts >= maxAttempts) {\r\n        clearInterval(checkInterval);\r\n        \r\n        // 清除模拟进度定时器\r\n        if (analyzeTimer.value) {\r\n          clearInterval(analyzeTimer.value);\r\n          analyzeTimer.value = null;\r\n        }\r\n        \r\n        if (isComplete) {\r\n          // 如果完成，确保进度显示100%\r\n          analyzeProgress.value = 100;\r\n          setTimeout(() => {\r\n            isAnalyzing.value = false;\r\n          }, 1000); // 短暂显示100%后隐藏进度条\r\n        }\r\n        \r\n        await getBaziResult(); // 最后再获取一次完整结果\r\n        Toast.clear();\r\n        resolve(isComplete);\r\n      }\r\n    }, 2000); // 每2秒检查一次\r\n  });\r\n};\r\n\r\n// 修改reloadBaziData函数，添加轮询逻辑\r\nconst reloadBaziData = async () => {\r\n  Toast.loading('正在重新加载数据...');\r\n  \r\n  try {\r\n    if (!resultId.value) {\r\n      Toast.fail('缺少结果ID');\r\n      return;\r\n    }\r\n    \r\n    console.log(`重新加载数据，结果ID: ${resultId.value}`);\r\n    \r\n    // 获取URL参数\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    \r\n    // 尝试使用模拟支付接口\r\n    try {\r\n      console.log('尝试使用模拟支付接口...');\r\n      \r\n      // 显示加载提示\r\n      Toast.loading({\r\n        message: '正在处理支付...',\r\n        duration: 0,\r\n        position: 'middle',\r\n        forbidClick: true\r\n      });\r\n      \r\n      // 准备请求数据\r\n      const requestData = {\r\n        birthDate: baziData.value.birthDate || urlParams.get('birthDate'),\r\n        birthTime: baziData.value.birthTime || urlParams.get('birthTime'),\r\n        gender: baziData.value.gender || urlParams.get('gender')\r\n      };\r\n      \r\n      console.log('请求数据:', requestData);\r\n      \r\n      // 发送模拟支付请求\r\n      const mockPaymentResponse = await axios.post(`/api/order/mock/pay/${resultId.value}`, requestData);\r\n      console.log('模拟支付响应:', mockPaymentResponse.data);\r\n      \r\n      if (mockPaymentResponse.data.code === 200) {\r\n        // 支付成功，显示成功提示\r\n        Toast.success('支付成功');\r\n        \r\n        // 使用返回的resultId重新加载数据\r\n        if (mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\r\n          const newResultId = mockPaymentResponse.data.data.resultId;\r\n          console.log('获取到新的resultId:', newResultId);\r\n          \r\n          // 更新全局的resultId变量\r\n          resultId.value = newResultId;\r\n          // 还需要更新本地存储中的resultId\r\n          localStorage.setItem('resultId', newResultId);\r\n          \r\n          // 显示正在加载分析结果\r\n          Toast.loading({\r\n            message: '正在生成八字分析结果，这可能需要30-60秒...',\r\n            duration: 0,\r\n            position: 'middle',\r\n            forbidClick: true\r\n          });\r\n          \r\n          // 轮询检查分析状态\r\n          const analysisComplete = await pollAnalysisStatus(newResultId);\r\n          \r\n          if (analysisComplete) {\r\n            Toast.success('分析已完成');\r\n          } else {\r\n            Toast.success('已完成部分分析，显示可用结果');\r\n          }\r\n          \r\n          // 重新加载追问分析结果\r\n          await loadFollowupResults();\r\n          \r\n          return;\r\n        }\r\n      }\r\n    } catch (mockError) {\r\n      console.error('模拟支付失败:', mockError);\r\n      Toast.fail('重新加载失败: ' + (mockError.message || '未知错误'));\r\n      return;\r\n    }\r\n    \r\n    // 如果模拟支付失败，尝试直接获取结果\r\n    try {\r\n      Toast.loading({\r\n        message: '正在加载现有分析结果...',\r\n        duration: 0,\r\n        forbidClick: true\r\n      });\r\n      \r\n      const response = await axios.get(`/api/bazi/result/${resultId.value}`);\r\n      \r\n      if (response.data.code === 200) {\r\n        // 更新八字数据，使用空值合并运算符确保数据存在\r\n        baziData.value = {\r\n          yearPillar: response.data.data.baziChart?.yearPillar || null,\r\n          monthPillar: response.data.data.baziChart?.monthPillar || null,\r\n          dayPillar: response.data.data.baziChart?.dayPillar || null,\r\n          hourPillar: response.data.data.baziChart?.hourPillar || null,\r\n          fiveElements: response.data.data.baziChart?.fiveElements || null,\r\n          flowingYears: response.data.data.baziChart?.flowingYears || [],\r\n          shenSha: response.data.data.baziChart?.shenSha || baziData.value.shenSha,\r\n          daYun: response.data.data.baziChart?.daYun || baziData.value.daYun,\r\n          birthDate: response.data.data.baziChart?.birthDate || null,\r\n          birthTime: response.data.data.baziChart?.birthTime || null,\r\n          gender: response.data.data.baziChart?.gender || null\r\n        };\r\n        \r\n        // 更新AI分析结果\r\n        aiAnalysis.value = {\r\n          health: response.data.data.aiAnalysis?.health || '',\r\n          career: response.data.data.aiAnalysis?.career || '',\r\n          relationship: response.data.data.aiAnalysis?.relationship || '',\r\n          children: response.data.data.aiAnalysis?.children || '',\r\n          social: response.data.data.aiAnalysis?.social || '',\r\n          future: response.data.data.aiAnalysis?.future || '',\r\n          parents: response.data.data.aiAnalysis?.parents || '',\r\n          education: response.data.data.aiAnalysis?.education || '',\r\n          // 新增字段\r\n          coreAnalysis: response.data.data.aiAnalysis?.coreAnalysis || '',\r\n          fiveElements: response.data.data.aiAnalysis?.fiveElements || '',\r\n          shenShaAnalysis: response.data.data.aiAnalysis?.shenShaAnalysis || '',\r\n          keyPoints: response.data.data.aiAnalysis?.keyPoints || ''\r\n        };\r\n        \r\n        // 检查是否存在\"正在分析\"的内容\r\n        const stillAnalyzing = Object.values(aiAnalysis.value).some(\r\n          value => typeof value === 'string' && value.includes('正在分析')\r\n        );\r\n        \r\n        // 更新分析状态\r\n        isAnalyzing.value = stillAnalyzing;\r\n        \r\n        if (stillAnalyzing) {\r\n          console.log('分析仍在进行中...');\r\n          // 不显示Toast，因为我们已经有进度条显示\r\n        } else {\r\n          // 分析完成\r\n          analyzeProgress.value = 100;\r\n          setTimeout(() => {\r\n            isAnalyzing.value = false;\r\n          }, 1000);\r\n        }\r\n        \r\n        // 重新加载追问分析结果\r\n        console.log('重新加载追问分析结果...');\r\n        await loadFollowupResults();\r\n        \r\n        // 遍历所有已支付的追问选项，强制重新获取分析结果\r\n        const paidOptions = followupOptions.value.filter(option => option.paid);\r\n        if (paidOptions.length > 0) {\r\n          console.log('发现已支付的追问选项，强制重新获取:', paidOptions.map(o => o.id));\r\n          for (const option of paidOptions) {\r\n            await getFollowupAnalysis(option.id);\r\n          }\r\n        }\r\n        \r\n        Toast.success('数据刷新成功');\r\n      } else {\r\n        Toast.fail(response.data.message || '加载失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('重新加载失败:', error);\r\n      Toast.fail('加载失败: ' + (error.message || '未知错误'));\r\n    }\r\n  } catch (error) {\r\n    console.error('重新加载失败:', error);\r\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\r\n  }\r\n};\r\n\r\n// 追问相关状态\r\nconst followupOptions = ref([\r\n  { id: 'marriage', name: '婚姻感情', selected: false, paid: false },\r\n  { id: 'career', name: '事业财运', selected: false, paid: false },\r\n  { id: 'children', name: '子女情况', selected: false, paid: false },\r\n  { id: 'parents', name: '父母情况', selected: false, paid: false },\r\n  { id: 'health', name: '身体健康', selected: false, paid: false },\r\n  { id: 'education', name: '学业', selected: false, paid: false },\r\n  { id: 'relationship', name: '人际关系', selected: false, paid: false },\r\n  { id: 'fiveYears', name: '近五年运势', selected: false, paid: false }\r\n]);\r\n\r\nconst currentFollowup = ref(null);\r\nconst showFollowupDialog = ref(false);\r\nconst followupAnalysis = ref({});\r\nconst isLoadingFollowup = ref(false);\r\n\r\n// 选择追问选项\r\nconst selectFollowupOption = async (option) => {\r\n  // 设置当前选择的追问选项\r\n  currentFollowup.value = option;\r\n  \r\n  // 如果已经支付过，直接显示结果\r\n  if (option.paid) {\r\n    console.log(`选择已支付的追问: ${option.id}`);\r\n    \r\n    // 如果已有分析结果，直接显示\r\n    if (followupAnalysis.value[option.id]) {\r\n      console.log(`已有${option.id}分析结果，直接显示`);\r\n      return;\r\n    }\r\n    \r\n    // 如果没有分析结果，尝试获取\r\n    console.log(`尝试获取${option.id}分析结果`);\r\n    Toast.loading({\r\n      message: '正在加载分析结果...',\r\n      duration: 0\r\n    });\r\n    \r\n    try {\r\n      // 尝试获取分析结果\r\n      const analysis = await getFollowupAnalysis(option.id);\r\n      if (analysis && typeof analysis === 'string' && analysis.length > 0) {\r\n        Toast.success('加载成功');\r\n        console.log(`成功获取${option.id}分析结果，长度: ${analysis.length}`);\r\n      } else {\r\n        Toast.fail('分析结果尚未生成完成，请稍后再试');\r\n        console.warn(`获取${option.id}分析结果失败或为空`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`获取${option.id}分析失败:`, error);\r\n      Toast.fail('获取分析失败，请重试');\r\n    } finally {\r\n      Toast.clear();\r\n    }\r\n    \r\n    return;\r\n  }\r\n  \r\n  // 否则显示支付对话框\r\n  showFollowupDialog.value = true;\r\n};\r\n\r\n// 支付追问费用\r\nconst payForFollowup = async () => {\r\n  if (!currentFollowup.value) return;\r\n  \r\n  try {\r\n    isLoadingFollowup.value = true;\r\n    \r\n    // 第一步：创建订单\r\n    Toast.loading({\r\n      message: '正在创建订单...',\r\n      forbidClick: true,\r\n      duration: 0\r\n    });\r\n    \r\n    // 获取URL参数\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    \r\n    // 创建追问订单\r\n    const orderResponse = await axios.post('/api/order/create/followup', {\r\n      resultId: resultId.value,\r\n      area: currentFollowup.value.id\r\n    });\r\n    \r\n    if (orderResponse.data.code === 200) {\r\n      const followupOrderId = orderResponse.data.data.orderId;\r\n      console.log('追问订单创建成功:', followupOrderId);\r\n      \r\n      // 第二步：处理支付\r\n      Toast.loading({\r\n        message: '正在处理支付...',\r\n        forbidClick: true,\r\n        duration: 0\r\n      });\r\n      \r\n      // 模拟支付\r\n      const paymentResponse = await axios.post(`/api/order/mock/pay/${followupOrderId}`, {\r\n        birthDate: baziData.value?.birthDate || urlParams.get('birthDate'),\r\n        birthTime: baziData.value?.birthTime || urlParams.get('birthTime'),\r\n        gender: baziData.value?.gender || urlParams.get('gender'),\r\n        area: currentFollowup.value.id,\r\n        resultId: resultId.value\r\n      });\r\n      \r\n      if (paymentResponse.data.code === 200) {\r\n        console.log('追问支付成功:', paymentResponse.data);\r\n        Toast.success('支付成功');\r\n        \r\n        // 立即更新UI状态，将当前追问标记为已付费\r\n        const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\r\n        if (index !== -1) {\r\n          followupOptions.value[index].paid = true;\r\n          followupOptions.value = [...followupOptions.value]; // 强制Vue更新\r\n        }\r\n        \r\n        // 第三步：加载分析结果\r\n        Toast.loading({\r\n          message: '正在生成分析结果，这可能需要30-60秒...',\r\n          forbidClick: true,\r\n          duration: 0\r\n        });\r\n        \r\n        // 获取并保存新的resultId（如果有的话）\r\n        if (paymentResponse.data.data && paymentResponse.data.data.resultId) {\r\n          const newResultId = paymentResponse.data.data.resultId;\r\n          console.log('获取到新的resultId:', newResultId);\r\n          // 更新全局的resultId变量\r\n          resultId.value = newResultId;\r\n          // 还需要更新本地存储中的resultId\r\n          localStorage.setItem('resultId', newResultId);\r\n        }\r\n        \r\n        // 轮询检查分析结果状态\r\n        const area = currentFollowup.value.id;\r\n        let isComplete = false;\r\n        let attempts = 0;\r\n        const maxAttempts = 60; // 最多等待120秒（60次 * 2秒）\r\n        \r\n        // 自定义轮询检查追问分析状态\r\n        const pollFollowupStatus = async () => {\r\n          console.log(`开始轮询追问分析状态: ${area}`);\r\n          \r\n          // 开始计时\r\n          const startTime = new Date().getTime();\r\n          const timeoutMs = 120000; // 120秒超时\r\n          \r\n          while (attempts < maxAttempts && !isComplete) {\r\n            attempts++;\r\n            try {\r\n              // 等待2秒\r\n              await new Promise(resolve => setTimeout(resolve, 2000));\r\n              \r\n              // 检查是否超时\r\n              const currentTime = new Date().getTime();\r\n              if (currentTime - startTime > timeoutMs) {\r\n                console.warn(`轮询追问分析状态超时: ${area}`);\r\n                break;\r\n              }\r\n              \r\n              // 检查追问分析结果\r\n              console.log(`尝试第${attempts}次获取追问分析: ${area}`);\r\n              const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\r\n              \r\n              if (response.data.code === 200 && response.data.data && response.data.data.analysis) {\r\n                // 检查分析内容是否为\"正在分析\"\r\n                const analysis = response.data.data.analysis;\r\n                if (typeof analysis === 'string' && !analysis.includes('正在分析')) {\r\n                  console.log(`成功获取追问分析结果: ${area}`);\r\n                  isComplete = true;\r\n                  followupAnalysis.value[area] = analysis;\r\n                  break;\r\n                } else {\r\n                  console.log(`追问分析结果还在生成中: ${area}`);\r\n                }\r\n              }\r\n            } catch (error) {\r\n              // 只有非404错误才打印详细信息\r\n              if (!error.response || error.response.status !== 404) {\r\n                console.error('检查追问分析状态出错:', error);\r\n              }\r\n              \r\n              // 如果遇到404错误，表示追问分析尚未创建完毕\r\n              if (error.response && error.response.status === 404) {\r\n                console.log('追问分析尚未创建完毕，继续等待...');\r\n              } else if (attempts >= maxAttempts / 2) {\r\n                // 如果尝试次数超过一半且仍然失败，不要退出轮询，但记录错误\r\n                console.warn(`获取分析数据失败(${attempts}/${maxAttempts})，继续尝试...`);\r\n              }\r\n            }\r\n          }\r\n          \r\n          // 无论是否完成，都尝试获取最终结果\r\n          console.log(`轮询完成，最终尝试获取追问分析: ${area}`);\r\n          try {\r\n            const finalResult = await getFollowupAnalysis(area);\r\n            console.log(`最终获取追问分析结果: ${finalResult ? '成功' : '失败'}`);\r\n            return finalResult;\r\n          } catch (error) {\r\n            console.error('获取最终追问分析结果失败:', error);\r\n            // 如果分析结果仍然不可用，显示友好的错误信息\r\n            followupAnalysis.value[area] = \"分析正在处理中，请稍后刷新页面查看。\";\r\n            return null;\r\n          }\r\n        };\r\n        \r\n        // 开始轮询\r\n        const result = await pollFollowupStatus();\r\n        \r\n        // 更新UI\r\n        Toast.clear();\r\n        if (result) {\r\n          Toast.success('分析已完成');\r\n          \r\n          // 支付成功且分析完成后，切换到AI分析结果标签页显示结果\r\n          activeTab.value = 1; // 切换到AI分析结果标签\r\n          \r\n          // 滚动到相应分析部分\r\n          setTimeout(() => {\r\n            const sectionMap = {\r\n              'relationship': '婚姻感情',\r\n              'marriage': '婚姻感情',\r\n              'career': '事业财运',\r\n              'work': '事业财运',\r\n              'money': '事业财运',\r\n              'wealth': '事业财运',\r\n              'children': '子女情况',\r\n              'family': '子女情况',\r\n              'parents': '父母情况',\r\n              'health': '身体健康',\r\n              'education': '学业',\r\n              'study': '学业',\r\n              'social': '人际关系',\r\n              'friends': '人际关系',\r\n              'future': '近五年运势',\r\n              'fiveYears': '近五年运势'\r\n            };\r\n            \r\n            const targetTitle = sectionMap[currentFollowup.value.id];\r\n            if (targetTitle) {\r\n              // 查找并滚动到对应的分析部分\r\n              const sections = document.querySelectorAll('.analysis-section h3');\r\n              for (let i = 0; i < sections.length; i++) {\r\n                if (sections[i].textContent.includes(targetTitle)) {\r\n                  sections[i].scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n                  \r\n                  // 高亮显示该部分\r\n                  const section = sections[i].parentElement;\r\n                  section.classList.add('highlight-section');\r\n                  setTimeout(() => {\r\n                    section.classList.remove('highlight-section');\r\n                  }, 3000);\r\n                  \r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }, 500);\r\n        } else {\r\n          Toast.success('正在生成分析，请稍后刷新查看');\r\n        }\r\n        \r\n        showFollowupDialog.value = false;\r\n        \r\n        // 确保界面刷新显示分析结果\r\n        setTimeout(() => {\r\n          const index = followupOptions.value.findIndex(o => o.id === currentFollowup.value.id);\r\n          if (index !== -1) {\r\n            // 强制更新\r\n            followupOptions.value = [...followupOptions.value];\r\n          }\r\n        }, 500);\r\n      } else {\r\n        Toast.fail('支付失败');\r\n      }\r\n    } else {\r\n      Toast.fail('创建订单失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('追问支付过程出错:', error);\r\n    Toast.fail('处理失败，请重试');\r\n  } finally {\r\n    isLoadingFollowup.value = false;\r\n    Toast.clear();\r\n  }\r\n};\r\n\r\n// 获取追问分析结果\r\nconst getFollowupAnalysis = async (area) => {\r\n  loading.value = true;\r\n  try {\r\n    console.log(`开始获取[${area}]追问分析，结果ID: ${resultId.value}`);\r\n    const response = await axios.get(`/api/bazi/followup/${resultId.value}/${area}`);\r\n    \r\n    if (response.data.code === 200) {\r\n      console.log('获取追问分析成功，响应数据:', response.data);\r\n      console.log('响应data字段详情:', JSON.stringify(response.data.data));\r\n      \r\n      // 处理分析结果为null或空的情况\r\n      if (!response.data.data) {\r\n        console.warn(`追问分析结果data为空: ${area}`);\r\n        const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\r\n        followupAnalysis.value[area] = defaultMessage;\r\n        return defaultMessage;\r\n      }\r\n      \r\n      // 提取分析内容，处理不同的响应格式\r\n      let analysisContent = null;\r\n      \r\n      if (response.data.data.analysis) {\r\n        // 标准格式：{area, analysis}\r\n        analysisContent = response.data.data.analysis;\r\n        console.log(`获取到标准格式分析结果, 类型: ${typeof analysisContent}, 长度: ${analysisContent ? analysisContent.length : 0}`);\r\n      } else if (typeof response.data.data === 'string') {\r\n        // 直接字符串格式\r\n        analysisContent = response.data.data;\r\n        console.log(`获取到字符串格式分析结果, 长度: ${analysisContent.length}`);\r\n      } else if (response.data.data[area]) {\r\n        // 对象格式：{area1: \"分析1\", area2: \"分析2\"}\r\n        analysisContent = response.data.data[area];\r\n        console.log(`获取到对象格式分析结果, 长度: ${analysisContent ? analysisContent.length : 0}`);\r\n      } else {\r\n        // 尝试遍历所有属性，看是否有匹配的内容\r\n        console.log('尝试查找匹配内容，data的所有键:', Object.keys(response.data.data));\r\n        for (const key in response.data.data) {\r\n          if (key.toLowerCase() === area.toLowerCase() || \r\n             (area === 'fiveYears' && key === 'future') ||\r\n             (area === 'future' && key === 'fiveYears')) {\r\n            analysisContent = response.data.data[key];\r\n            console.log(`找到匹配的键[${key}]，内容长度: ${analysisContent ? analysisContent.length : 0}`);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 检查分析结果是否为null或空\r\n      if (!analysisContent) {\r\n        console.warn(`无法从响应中提取有效分析内容: ${area}`);\r\n        const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析尚未生成，请稍后刷新页面查看。`;\r\n        followupAnalysis.value[area] = defaultMessage;\r\n        return defaultMessage;\r\n      }\r\n      \r\n      // 检查分析结果是否是空字符串\r\n      if (typeof analysisContent === 'string' && analysisContent.trim() === '') {\r\n        console.warn(`追问分析结果为空字符串: ${area}`);\r\n        const defaultMessage = `${followupOptions.value.find(o => o.id === area)?.name || area}分析正在生成中，请稍后刷新页面查看。`;\r\n        followupAnalysis.value[area] = defaultMessage;\r\n        return defaultMessage;\r\n      }\r\n      \r\n      // 记录有效的分析结果\r\n      console.log(`获取到有效的[${area}]分析结果，长度: ${analysisContent.length}`);\r\n      \r\n      // 存储并返回分析结果\r\n      followupAnalysis.value[area] = analysisContent;\r\n      return analysisContent;\r\n    } else {\r\n      console.error('获取追问分析失败:', response.data);\r\n      const errorMessage = `获取分析失败: ${response.data.message || '未知错误'}`;\r\n      followupAnalysis.value[area] = errorMessage;\r\n      return errorMessage;\r\n    }\r\n  } catch (error) {\r\n    console.error('获取追问分析出错:', error);\r\n    const errorMessage = `获取分析出错: ${error.message || '请稍后重试'}`;\r\n    followupAnalysis.value[area] = errorMessage;\r\n    return errorMessage;\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 检查已支付的追问\r\nconst checkPaidFollowups = async () => {\r\n  try {\r\n    const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\r\n    \r\n    if (response.data.code === 200 && response.data.data.followups) {\r\n      const paidFollowups = response.data.data.followups;\r\n      \r\n      // 更新已支付的追问选项\r\n      followupOptions.value = followupOptions.value.map(option => {\r\n        const isPaid = paidFollowups.some(f => f.area === option.id);\r\n        if (isPaid) {\r\n          // 如果已支付，获取分析结果\r\n          getFollowupAnalysis(option.id);\r\n        }\r\n        return { ...option, paid: isPaid };\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('检查已支付追问出错:', error);\r\n  }\r\n};\r\n\r\n// 修改getBaziResult函数\r\nconst getBaziResult = async () => {\r\n  loading.value = true;\r\n  try {\r\n    console.log('获取八字分析结果，ID:', resultId.value);\r\n    const response = await axios.get(`/api/bazi/result/${resultId.value}`);\r\n    console.log('八字分析结果:', response.data);\r\n    \r\n    if (response.data.code === 200 && response.data.data) {\r\n      // 更新八字数据，使用深度合并确保数据结构完整\r\n      if (response.data.data.baziChart) {\r\n        baziData.value = {\r\n          yearPillar: response.data.data.baziChart.yearPillar || baziData.value.yearPillar,\r\n          monthPillar: response.data.data.baziChart.monthPillar || baziData.value.monthPillar,\r\n          dayPillar: response.data.data.baziChart.dayPillar || baziData.value.dayPillar,\r\n          hourPillar: response.data.data.baziChart.hourPillar || baziData.value.hourPillar,\r\n          fiveElements: response.data.data.baziChart.fiveElements || baziData.value.fiveElements,\r\n          flowingYears: response.data.data.baziChart.flowingYears || [],\r\n          shenSha: response.data.data.baziChart.shenSha || baziData.value.shenSha,\r\n          daYun: response.data.data.baziChart.daYun || baziData.value.daYun,\r\n          birthDate: response.data.data.baziChart.birthDate || null,\r\n          birthTime: response.data.data.baziChart.birthTime || null,\r\n          gender: response.data.data.baziChart.gender || null\r\n        };\r\n      } else {\r\n        console.warn('响应中缺少baziChart数据');\r\n        Toast.fail('数据格式不正确');\r\n      }\r\n      \r\n      // 更新AI分析结果\r\n      if (response.data.data.aiAnalysis) {\r\n        aiAnalysis.value = {\r\n          health: response.data.data.aiAnalysis.health || '',\r\n          career: response.data.data.aiAnalysis.career || '',\r\n          relationship: response.data.data.aiAnalysis.relationship || '',\r\n          children: response.data.data.aiAnalysis.children || '',\r\n          social: response.data.data.aiAnalysis.social || '',\r\n          future: response.data.data.aiAnalysis.future || '',\r\n          parents: response.data.data.aiAnalysis.parents || '',\r\n          education: response.data.data.aiAnalysis.education || '',\r\n          // 新增字段\r\n          coreAnalysis: response.data.data.aiAnalysis.coreAnalysis || '',\r\n          fiveElements: response.data.data.aiAnalysis.fiveElements || '',\r\n          shenShaAnalysis: response.data.data.aiAnalysis.shenShaAnalysis || '',\r\n          keyPoints: response.data.data.aiAnalysis.keyPoints || ''\r\n        };\r\n      }\r\n      \r\n      // 初始化追问选项\r\n      initFollowupOptions();\r\n      \r\n      // 加载已支付的追问分析结果\r\n      await loadFollowupResults();\r\n      \r\n      Toast.success('分析结果加载成功');\r\n    } else {\r\n      console.error('获取八字分析结果失败:', response.data.message);\r\n      Toast.fail(response.data.message || '获取分析结果失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取八字分析结果出错:', error);\r\n    Toast.fail('获取分析结果失败，请稍后再试');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 添加缺失的函数\r\n// 初始化追问选项\r\nconst initFollowupOptions = () => {\r\n  // 根据用户年龄调整追问选项\r\n  if (userAge.value !== null) {\r\n    if (userAge.value < 6) {\r\n      // 为婴幼儿调整选项\r\n      followupOptions.value = followupOptions.value.filter(option => \r\n        ['health', 'personality', 'education', 'parents'].includes(option.id)\r\n      );\r\n    } else if (userAge.value < 18) {\r\n      // 为未成年人调整选项\r\n      followupOptions.value = followupOptions.value.filter(option => \r\n        !['marriage', 'career'].includes(option.id)\r\n      );\r\n    }\r\n  }\r\n  \r\n  console.log('初始化追问选项完成:', followupOptions.value);\r\n};\r\n\r\n// 加载已支付的追问分析结果\r\nconst loadFollowupResults = async () => {\r\n  try {\r\n    // 检查是否有结果ID\r\n    if (!resultId.value) {\r\n      console.warn('缺少结果ID，无法加载追问分析');\r\n      return;\r\n    }\r\n    \r\n    console.log('开始加载追问分析结果列表:', resultId.value);\r\n    \r\n    // 调用API获取已支付的追问列表\r\n    const response = await axios.get(`/api/bazi/followup/list/${resultId.value}`);\r\n    \r\n    if (response.data.code === 200 && response.data.data.followups) {\r\n      const paidFollowups = response.data.data.followups;\r\n      console.log('获取到的追问列表:', paidFollowups);\r\n      \r\n      // 更新已支付的追问选项\r\n      followupOptions.value = followupOptions.value.map(option => {\r\n        // 检查是否有匹配的追问分析\r\n        const isPaid = paidFollowups.some(f => {\r\n          // 尝试多种匹配方式\r\n          if (typeof f === 'object') {\r\n            // 对象格式：检查area字段\r\n            return f.area === option.id;\r\n          } else if (typeof f === 'string') {\r\n            // 字符串格式：直接比较\r\n            return f === option.id;\r\n          }\r\n          return false;\r\n        });\r\n        \r\n        if (isPaid) {\r\n          console.log(`发现已支付的追问: ${option.id}`);\r\n          // 如果已支付，获取分析结果\r\n          getFollowupAnalysis(option.id);\r\n        }\r\n        \r\n        return { ...option, paid: isPaid };\r\n      });\r\n      \r\n      console.log('更新后的追问选项:', followupOptions.value);\r\n    } else {\r\n      console.warn('获取追问列表失败或返回空列表');\r\n    }\r\n  } catch (error) {\r\n    console.error('加载追问分析结果出错:', error);\r\n    // 出错时不显示错误提示，静默失败\r\n  }\r\n};\r\n\r\n// 解析八字数据\r\nconst parseBaZiData = (data) => {\r\n  if (!data) return null;\r\n  \r\n  return {\r\n    yearPillar: data.yearPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\r\n    monthPillar: data.monthPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\r\n    dayPillar: data.dayPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\r\n    hourPillar: data.hourPillar || { heavenlyStem: '未知', earthlyBranch: '未知' },\r\n    shenSha: data.shenSha || {\r\n      dayChong: '未知',\r\n      zhiShen: '未知',\r\n      pengZuGan: '未知',\r\n      pengZuZhi: '未知',\r\n      xiShen: '未知',\r\n      fuShen: '未知',\r\n      caiShen: '未知',\r\n      benMing: [],\r\n      yearGan: [],\r\n      yearZhi: [],\r\n      dayGan: [],\r\n      dayZhi: []\r\n    },\r\n    daYun: data.daYun || {\r\n      startAge: 0,\r\n      startYear: 0,\r\n      isForward: true,\r\n      daYunList: []\r\n    },\r\n    flowingYears: data.flowingYears || []\r\n  };\r\n};\r\n\r\n// 添加分析状态检测函数\r\nconst isAnalysisItemLoading = (key) => {\r\n  if (!aiAnalysis.value) return true;\r\n  const value = aiAnalysis.value[key];\r\n  return !value || value === '暂无' || (value.includes && value.includes('正在分析'));\r\n};\r\n\r\n// 清理组件时移除定时器\r\nonUnmounted(() => {\r\n  if (analyzeTimer.value) {\r\n    clearInterval(analyzeTimer.value);\r\n    analyzeTimer.value = null;\r\n  }\r\n});\r\n\r\n// 刷新特定追问的分析结果\r\nconst reloadFollowupAnalysis = async (area) => {\r\n  if (!area) return;\r\n  \r\n  try {\r\n    isLoadingFollowup.value = true;\r\n    Toast.loading({\r\n      message: '正在刷新分析结果...',\r\n      duration: 0\r\n    });\r\n    \r\n    console.log(`刷新${area}分析结果`);\r\n    const analysis = await getFollowupAnalysis(area);\r\n    \r\n    if (analysis && typeof analysis === 'string' && analysis.length > 0) {\r\n      Toast.success('刷新成功');\r\n      console.log(`成功刷新${area}分析结果，长度: ${analysis.length}`);\r\n    } else {\r\n      Toast.fail('分析结果尚未生成完成');\r\n      console.warn(`刷新${area}分析结果失败或为空`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`刷新${area}分析失败:`, error);\r\n    Toast.fail('刷新失败，请重试');\r\n  } finally {\r\n    isLoadingFollowup.value = false;\r\n    Toast.clear();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.result-container {\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.result-header {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n  background-color: #f2f3f5;\r\n}\r\n\r\n.result-header h2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  color: #323233;\r\n}\r\n\r\n.result-header p {\r\n  margin: 10px 0 0;\r\n  font-size: 14px;\r\n  color: #969799;\r\n}\r\n\r\n.bazi-chart {\r\n  padding: 20px 16px;\r\n}\r\n\r\n.bazi-chart h3 {\r\n  margin: 20px 0 10px;\r\n  color: #323233;\r\n}\r\n\r\n.four-pillars {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin: 20px 0;\r\n}\r\n\r\n.pillar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #f5f7fa;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  width: 80px;\r\n}\r\n\r\n.stem, .branch {\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin: 4px 0;\r\n  border-radius: 4px;\r\n}\r\n\r\n.stem {\r\n  background: #1989fa;\r\n  color: white;\r\n}\r\n\r\n.branch {\r\n  background: #07c160;\r\n  color: white;\r\n}\r\n\r\n.label {\r\n  font-size: 12px;\r\n  color: #646566;\r\n  margin-top: 4px;\r\n}\r\n\r\n.nayin, .shishen, .wangshuai {\r\n  font-size: 12px;\r\n  color: #323233;\r\n  margin-top: 4px;\r\n}\r\n\r\n.five-elements {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n}\r\n\r\n.element {\r\n  text-align: center;\r\n  flex: 1;\r\n}\r\n\r\n.element-name {\r\n  font-size: 14px;\r\n  color: #323233;\r\n}\r\n\r\n.element-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #1989fa;\r\n  margin-top: 5px;\r\n}\r\n\r\n.flowing-years {\r\n  margin: 20px 0;\r\n}\r\n\r\n.ai-analysis {\r\n  padding: 20px 16px;\r\n}\r\n\r\n.analysis-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.analysis-section h3 {\r\n  margin: 0 0 10px;\r\n  color: #323233;\r\n}\r\n\r\n.analysis-section p {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #646566;\r\n  line-height: 1.6;\r\n}\r\n\r\n.action-buttons {\r\n  padding: 20px 16px;\r\n}\r\n\r\n.age-notice {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.shen-sha-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.da-yun-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.qi-yun-info {\r\n  margin: 0 0 10px;\r\n  font-size: 14px;\r\n  color: #646566;\r\n}\r\n\r\n.da-yun-table {\r\n  margin-top: 10px;\r\n}\r\n\r\n.placeholder {\r\n  background-color: #f2f3f5;\r\n  color: #969799;\r\n}\r\n\r\n/* 追问部分样式 */\r\n.followup-section {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.section-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.section-desc {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.followup-options {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 12px;\r\n}\r\n\r\n.followup-option {\r\n  background-color: #f5f7fa;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.followup-option:hover {\r\n  background-color: #e8f0fe;\r\n}\r\n\r\n.followup-option.paid {\r\n  background-color: #e6f7ff;\r\n  border: 1px solid #91d5ff;\r\n}\r\n\r\n.option-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.option-name {\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.option-status {\r\n  font-size: 13px;\r\n  color: #ff6b00;\r\n}\r\n\r\n.followup-option.paid .option-status {\r\n  color: #52c41a;\r\n}\r\n\r\n.followup-result {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #1989fa;\r\n}\r\n\r\n.followup-result h3 {\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.analysis-content {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  color: #333;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.followup-dialog-content {\r\n  padding: 15px;\r\n  text-align: center;\r\n}\r\n\r\n/* 添加表格样式 */\r\n.custom-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  margin: 10px 0;\r\n  background-color: #fff;\r\n  color: #323233;\r\n  font-size: 14px;\r\n}\r\n\r\n.custom-table th,\r\n.custom-table td {\r\n  padding: 8px 12px;\r\n  border-bottom: 1px solid #ebedf0;\r\n  text-align: center;\r\n}\r\n\r\n.custom-table th {\r\n  font-weight: 500;\r\n  background-color: #f7f8fa;\r\n  color: #646566;\r\n}\r\n\r\n.custom-table tr:hover {\r\n  background-color: #f2f3f5;\r\n}\r\n\r\n/* 添加分析状态相关样式 */\r\n.analysis-progress-notice {\r\n  margin: 10px 16px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.analysis-progress {\r\n  width: 100%;\r\n}\r\n\r\n.analysis-progress p {\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n  color: #1989fa;\r\n}\r\n\r\n.loading-content {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  background-color: #f7f8fa;\r\n  border-radius: 8px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.enhanced-analysis {\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-left: 3px solid #1989fa;\r\n  background-color: #f8f9ff;\r\n  border-radius: 4px;\r\n}\r\n\r\n.enhanced-analysis p {\r\n  color: #333;\r\n  line-height: 1.6;\r\n  white-space: pre-wrap;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.analysis-source {\r\n  text-align: right;\r\n  margin-top: 8px;\r\n}\r\n\r\n/* 高亮效果 */\r\n@keyframes highlight-pulse {\r\n  0% { box-shadow: 0 0 0 0 rgba(25, 137, 250, 0.7); }\r\n  70% { box-shadow: 0 0 0 10px rgba(25, 137, 250, 0); }\r\n  100% { box-shadow: 0 0 0 0 rgba(25, 137, 250, 0); }\r\n}\r\n\r\n.highlight-section {\r\n  animation: highlight-pulse 1.5s ease-in-out;\r\n  background-color: rgba(25, 137, 250, 0.08);\r\n  border-radius: 8px;\r\n  transition: background-color 0.5s ease;\r\n}\r\n\r\n.markdown-content {\r\n  white-space: pre-wrap;\r\n  line-height: 1.6;\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n\r\n.markdown-content h1, \r\n.markdown-content h2, \r\n.markdown-content h3, \r\n.markdown-content h4, \r\n.markdown-content h5, \r\n.markdown-content h6 {\r\n  margin-top: 1em;\r\n  margin-bottom: 0.5em;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.markdown-content h1 {\r\n  font-size: 1.8em;\r\n}\r\n\r\n.markdown-content h2 {\r\n  font-size: 1.5em;\r\n}\r\n\r\n.markdown-content h3 {\r\n  font-size: 1.3em;\r\n}\r\n\r\n.markdown-content h4 {\r\n  font-size: 1.1em;\r\n}\r\n\r\n.markdown-content p {\r\n  margin-bottom: 1em;\r\n}\r\n\r\n.markdown-content ul, \r\n.markdown-content ol {\r\n  margin-left: 2em;\r\n  margin-bottom: 1em;\r\n}\r\n\r\n.markdown-content ul {\r\n  list-style-type: disc;\r\n}\r\n\r\n.markdown-content ol {\r\n  list-style-type: decimal;\r\n}\r\n\r\n.markdown-content li {\r\n  margin-bottom: 0.5em;\r\n}\r\n\r\n.markdown-content strong {\r\n  font-weight: bold;\r\n}\r\n\r\n.markdown-content em {\r\n  font-style: italic;\r\n}\r\n\r\n.markdown-content blockquote {\r\n  border-left: 4px solid #ddd;\r\n  padding-left: 1em;\r\n  margin-left: 0;\r\n  color: #666;\r\n}\r\n\r\n.markdown-content hr {\r\n  height: 1px;\r\n  background-color: #ddd;\r\n  border: none;\r\n  margin: 1.5em 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}