{"ast":null,"code":"import { ref, onMounted, reactive, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport http from './api/http'; // 导入配置好的http实例\n\nexport default {\n  __name: 'Result',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const resultId = route.params.id || route.query.resultId;\n    const activeTab = ref(0);\n\n    // 用户年龄，从URL参数或localStorage获取\n    const userAge = ref(null);\n    // 尝试从URL参数获取年龄\n    if (route.query.age && !isNaN(parseInt(route.query.age))) {\n      userAge.value = parseInt(route.query.age);\n    }\n    // 如果URL参数中没有年龄，尝试从localStorage获取\n    else if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n      userAge.value = parseInt(localStorage.getItem('userAge'));\n    }\n    // 记录用户年龄到控制台，便于调试\n    console.log('用户年龄:', userAge.value);\n\n    // 从分析文本中提取特定部分内容\n    const getAnalysisContent = sectionName => {\n      try {\n        // 如果是性格特点或学业发展，直接从对应字段获取\n        if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n          return aiAnalysis.value.personality;\n        }\n        if (sectionName === '学业发展' && aiAnalysis.value.education) {\n          return aiAnalysis.value.education;\n        }\n\n        // 处理健康分析文本，尝试提取学业、性格等内容\n        if (aiAnalysis.value.health) {\n          const healthText = aiAnalysis.value.health;\n\n          // 查找各部分的标记\n          const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n          if (sectionMatch && sectionMatch[1]) {\n            return sectionMatch[1].trim();\n          }\n\n          // 如果是未来发展，尝试从overall中提取\n          if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n            const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n            if (futureMatch && futureMatch[2]) {\n              return futureMatch[2].trim();\n            }\n          }\n        }\n\n        // 如果没有找到对应部分或提取失败，返回空字符串\n        return '';\n      } catch (e) {\n        console.error(`提取${sectionName}内容时出错:`, e);\n        return '';\n      }\n    };\n\n    // 模拟数据，作为API调用失败时的备用数据\n    const focusAreas = ref(['health', 'wealth', 'career', 'relationship']);\n\n    // 备用数据，只在API调用失败时使用\n    const baziData = ref({\n      yearPillar: {\n        heavenlyStem: '甲',\n        earthlyBranch: '子',\n        element: '水'\n      },\n      monthPillar: {\n        heavenlyStem: '丙',\n        earthlyBranch: '寅',\n        element: '木'\n      },\n      dayPillar: {\n        heavenlyStem: '戊',\n        earthlyBranch: '午',\n        element: '火'\n      },\n      hourPillar: {\n        heavenlyStem: '庚',\n        earthlyBranch: '申',\n        element: '金'\n      },\n      fiveElements: {\n        wood: 2,\n        fire: 2,\n        earth: 1,\n        metal: 2,\n        water: 1\n      },\n      flowingYears: [{\n        year: 2025,\n        heavenlyStem: '乙',\n        earthlyBranch: '丑',\n        element: '土'\n      }, {\n        year: 2026,\n        heavenlyStem: '丙',\n        earthlyBranch: '寅',\n        element: '木'\n      }, {\n        year: 2027,\n        heavenlyStem: '丁',\n        earthlyBranch: '卯',\n        element: '木'\n      }, {\n        year: 2028,\n        heavenlyStem: '戊',\n        earthlyBranch: '辰',\n        element: '土'\n      }, {\n        year: 2029,\n        heavenlyStem: '己',\n        earthlyBranch: '巳',\n        element: '火'\n      }]\n    });\n\n    // 备用分析数据，只在API调用失败时使用\n    const aiAnalysis = ref({\n      health: '您的八字中火土较旺，木水偏弱。从健康角度看，您需要注意心脑血管系统和消化系统的保养。建议平时多喝水，保持规律作息，避免过度劳累和情绪波动。2025-2026年间需特别注意肝胆健康，可适当增加绿色蔬菜的摄入，定期体检。',\n      wealth: '您的财运在2025年有明显上升趋势，特别是在春夏季节。八字中金水相生，适合从事金融、贸易、水利相关行业。投资方面，稳健为主，可考虑分散投资组合。2027年有意外财运，但需谨慎对待，避免投机性强的项目。',\n      career: '您的事业宫位较为稳定，具有较强的组织能力和执行力。2025-2026年是事业发展的关键期，有升职或转行的机会。建议提升专业技能，扩展人脉关系。您适合在团队中担任协调或管理角色，发挥沟通才能。',\n      relationship: '您的八字中日柱为戊午，感情态度较为务实。2025年下半年至2026年上半年是感情发展的良好时期。已婚者需注意与伴侣的沟通，避免因工作忙碌而忽略家庭。单身者有机会通过社交活动或朋友介绍认识合适的对象。',\n      children: '您的子女宫位较为温和，与子女关系和谐。教育方面，建议采用引导式而非强制式的方法，尊重子女的兴趣发展。2026-2027年是子女发展的重要阶段，可能需要您更多的关注和支持。',\n      overall: '综合分析您的八字，2025-2027年是您人生的一个上升期，各方面都有良好发展。建议把握这段时间，在事业上积极进取，在健康上注意保养，在人际关系上广结善缘。您的人生态度积极乐观，具有较强的适应能力和抗压能力，这将帮助您度过人生中的各种挑战。'\n    });\n    const testApiConnection = async () => {\n      try {\n        Toast.loading('正在测试API连接...');\n        // 使用配置好的http实例\n        const response = await http.get('/');\n        console.log('API根路径响应:', response.data);\n        Toast.success('API连接成功');\n        return true;\n      } catch (error) {\n        console.error('API连接测试失败:', error);\n        Toast.fail('API连接失败，请检查后端服务');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 先测试API连接\n      const isApiConnected = await testApiConnection();\n      if (!isApiConnected) {\n        console.warn('API连接失败，将使用模拟数据');\n        return;\n      }\n      console.log('结果页面加载，ID:', resultId);\n\n      // 如果没有resultId，尝试从本地存储获取\n      const localResultId = localStorage.getItem('resultId');\n      if (!resultId && localResultId) {\n        console.log('从本地存储获取ID:', localResultId);\n      }\n      const finalResultId = resultId || localResultId;\n      if (!finalResultId) {\n        console.error('缺少结果ID，无法获取分析结果');\n        Toast.fail('缺少结果ID，无法获取分析结果');\n        return;\n      }\n      try {\n        console.log('调用API获取结果:', `/api/bazi/result/${finalResultId}`);\n\n        // 显示加载提示，提醒用户需要等待\n        Toast.loading({\n          message: '正在调用AI进行八字分析，请耐心等待30-60秒...',\n          duration: 10000,\n          position: 'middle'\n        });\n\n        // 使用配置好的http实例\n        const response = await http.get(`/api/bazi/result/${finalResultId}`);\n        console.log('API响应:', response.status, response.data);\n        if (response.data.code === 200) {\n          console.log('获取成功，更新数据');\n          // 确保从API获取数据并更新视图\n          if (response.data.data.baziChart) {\n            baziData.value = response.data.data.baziChart;\n          } else {\n            console.warn('返回数据中没有baziChart字段，使用默认值');\n          }\n          if (response.data.data.aiAnalysis) {\n            aiAnalysis.value = response.data.data.aiAnalysis;\n          } else {\n            console.warn('返回数据中没有aiAnalysis字段，使用默认值');\n          }\n          if (response.data.data.focusAreas) {\n            focusAreas.value = response.data.data.focusAreas;\n          }\n          Toast.success('分析结果加载成功');\n        } else if (response.data.code === 202) {\n          // 服务器接受了请求但还在处理中（异步分析）\n          console.log('分析正在进行中，等待时间:', response.data.data.waitTime || '未知');\n\n          // 显示清晰的等待提示，告知用户确切的等待情况\n          Toast.loading({\n            message: `AI正在专注分析您的八字命盘，已经分析了${response.data.data.waitTime || 0}秒，完整分析需要30-60秒，请稍候...`,\n            duration: 8000,\n            position: 'middle'\n          });\n\n          // 预先显示部分数据\n          if (response.data.data.baziChart) {\n            baziData.value = response.data.data.baziChart;\n          }\n          if (response.data.data.aiAnalysis) {\n            aiAnalysis.value = response.data.data.aiAnalysis;\n          }\n          if (response.data.data.focusAreas) {\n            focusAreas.value = response.data.data.focusAreas;\n          }\n\n          // 创建轮询定时器引用\n          const pollInterval = ref(null);\n          const maxPollTimeout = ref(null);\n\n          // 启动轮询，每15秒查询一次直到分析完成\n          pollInterval.value = setInterval(async () => {\n            try {\n              console.log('轮询查询分析结果...');\n              const pollResponse = await http.get(`/api/bazi/result/${finalResultId}`);\n\n              // 添加更详细的日志\n              console.log(`轮询响应状态码: ${pollResponse.status}, 响应code: ${pollResponse.data.code}`);\n\n              // 首先检查是否有分析结果\n              const hasAnalysis = pollResponse.data.data && pollResponse.data.data.aiAnalysis && Object.values(pollResponse.data.data.aiAnalysis).some(v => v);\n              if (pollResponse.data.code === 200 || hasAnalysis) {\n                // 分析完成，更新数据\n                console.log('分析已完成，更新数据');\n                baziData.value = pollResponse.data.data.baziChart;\n                aiAnalysis.value = pollResponse.data.data.aiAnalysis;\n                focusAreas.value = pollResponse.data.data.focusAreas;\n                Toast.success('分析结果加载成功！您的八字命盘解析已完成');\n\n                // 清除所有定时器\n                if (pollInterval.value) {\n                  clearInterval(pollInterval.value);\n                  pollInterval.value = null;\n                }\n                if (maxPollTimeout.value) {\n                  clearTimeout(maxPollTimeout.value);\n                  maxPollTimeout.value = null;\n                }\n\n                // 自动切换到AI分析结果标签\n                activeTab.value = 1;\n              } else if (pollResponse.data.code !== 202) {\n                // 如果返回其他错误码，停止轮询\n                console.error('轮询时发生错误:', pollResponse.data.message);\n                Toast.fail(`查询错误: ${pollResponse.data.message}`);\n\n                // 清除所有定时器\n                if (pollInterval.value) {\n                  clearInterval(pollInterval.value);\n                  pollInterval.value = null;\n                }\n                if (maxPollTimeout.value) {\n                  clearTimeout(maxPollTimeout.value);\n                  maxPollTimeout.value = null;\n                }\n              } else {\n                // 仍在分析中，更新等待时间\n                const waitTime = pollResponse.data.data.waitTime || 0;\n                const remainingTime = Math.max(0, 60 - waitTime); // 假设总时间为60秒\n\n                Toast.loading({\n                  message: `AI正在专注分析中(${Math.round(waitTime / 60 * 100)}%)，预计还需${remainingTime}秒完成...`,\n                  duration: 5000,\n                  position: 'middle'\n                });\n                console.log('仍在分析中，已等待:', waitTime, '秒');\n              }\n            } catch (err) {\n              console.error('轮询时出错:', err);\n              // 出错也停止轮询并清除定时器\n              if (pollInterval.value) {\n                clearInterval(pollInterval.value);\n                pollInterval.value = null;\n              }\n            }\n          }, 15000); // 每15秒查询一次，减少服务器压力\n\n          // 设置最大轮询时间，防止无限轮询\n          maxPollTimeout.value = setTimeout(() => {\n            if (pollInterval.value) {\n              clearInterval(pollInterval.value);\n              pollInterval.value = null;\n              console.log('超过最大轮询时间，停止轮询');\n\n              // 显示一个友好的提示，询问用户是否要继续等待\n              Dialog.confirm({\n                title: '分析耗时较长',\n                message: '您的八字命理分析正在进行中，但耗时较长。您可以选择继续等待或稍后再查看结果。',\n                confirmButtonText: '继续等待',\n                cancelButtonText: '稍后查看'\n              }).then(() => {\n                // 用户选择继续等待，重新启动轮询\n                window.location.reload();\n              }).catch(() => {\n                // 用户选择稍后查看，可以先返回首页\n                router.push('/');\n              });\n            }\n          }, 180000); // 最多轮询3分钟\n        } else {\n          console.error('API返回错误:', response.data.message);\n          Toast.fail(response.data.message || '获取分析结果失败');\n        }\n      } catch (error) {\n        console.error('获取分析结果出错:', error);\n        console.error('错误详情:', error.response ? error.response.data : '无响应数据');\n        Toast.fail('获取分析结果失败，请稍后重试');\n\n        // 备选方案：如果ID以\"RES\"开头，尝试模拟支付再获取结果\n        if (finalResultId.startsWith('RES')) {\n          try {\n            console.log('尝试使用模拟支付接口...');\n\n            // 显示加载提示\n            Toast.loading({\n              message: '正在模拟支付并进行八字分析，请耐心等待30-60秒...',\n              duration: 20000,\n              // 增加等待时间\n              position: 'middle'\n            });\n\n            // 直接使用完整的finalResultId，不要去掉RES前缀\n            const orderId = finalResultId;\n\n            // 从URL查询参数中获取出生日期和时间\n            const urlParams = new URLSearchParams(window.location.search);\n            const birthDate = urlParams.get('birthDate') || '2023-06-06'; // 使用默认值\n            const birthTime = urlParams.get('birthTime') || '辰时 (07:00-09:00)'; // 使用默认值\n            const gender = urlParams.get('gender') || 'male'; // 使用默认值\n            // 获取原始订单ID（如果有）\n            const originalOrderId = urlParams.get('originalOrderId');\n            console.log('URL参数:', {\n              birthDate,\n              birthTime,\n              gender,\n              originalOrderId\n            });\n\n            // 验证日期格式\n            let validBirthDate = birthDate;\n            try {\n              // 检查日期格式是否正确\n              const dateParts = birthDate.split('-');\n              if (dateParts.length === 3) {\n                const year = parseInt(dateParts[0]);\n                const month = parseInt(dateParts[1]);\n                const day = parseInt(dateParts[2]);\n\n                // 验证年份在合理范围内\n                if (year < 1900 || year > 2100) {\n                  console.warn(`出生年份 ${year} 超出推荐范围(1900-2100)，使用默认值`);\n                  validBirthDate = '2000-01-01';\n                }\n              } else {\n                console.warn(`日期格式错误: ${birthDate}，使用默认值`);\n                validBirthDate = '2000-01-01';\n              }\n            } catch (e) {\n              console.error('日期验证错误:', e);\n              validBirthDate = '2000-01-01';\n            }\n            console.log('模拟支付使用参数:', {\n              birthDate: validBirthDate,\n              birthTime,\n              gender\n            });\n\n            // 准备请求数据\n            const requestData = {\n              birthDate: validBirthDate,\n              birthTime: birthTime,\n              gender: gender\n            };\n            console.log('模拟支付请求数据:', requestData);\n\n            // 尝试最多3次请求\n            let retryCount = 0;\n            let mockPaymentResponse = null;\n\n            // 如果有原始订单ID，优先使用它进行模拟支付\n            const paymentId = originalOrderId || orderId;\n            console.log('使用ID进行模拟支付:', paymentId);\n            while (retryCount < 3) {\n              try {\n                console.log(`尝试请求模拟支付 (${retryCount + 1}/3)...`);\n                // 发送POST请求，确保设置正确的Content-Type\n                mockPaymentResponse = await http.post(`/api/order/mock/pay/${paymentId}`, requestData, {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n                // 如果成功，跳出循环\n                if (mockPaymentResponse && mockPaymentResponse.data && mockPaymentResponse.data.code === 200) {\n                  break;\n                }\n\n                // 如果失败但有响应，记录错误\n                console.error('模拟支付请求失败:', mockPaymentResponse?.data);\n\n                // 等待一秒后重试\n                await new Promise(resolve => setTimeout(resolve, 1000));\n                retryCount++;\n              } catch (retryError) {\n                console.error(`模拟支付请求出错 (尝试 ${retryCount + 1}/3):`, retryError);\n\n                // 等待一秒后重试\n                await new Promise(resolve => setTimeout(resolve, 1000));\n                retryCount++;\n              }\n            }\n\n            // 检查是否成功获取响应\n            if (mockPaymentResponse && mockPaymentResponse.data && mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n              const newResultId = mockPaymentResponse.data.data.resultId;\n              console.log('获取到新的resultId:', newResultId);\n\n              // 等待2秒，让服务器有时间处理结果\n              await new Promise(resolve => setTimeout(resolve, 2000));\n\n              // 尝试最多3次获取结果\n              let resultRetryCount = 0;\n              let resultSuccess = false;\n              while (resultRetryCount < 3 && !resultSuccess) {\n                try {\n                  console.log(`尝试获取结果 (${resultRetryCount + 1}/3)...`);\n                  const retryResponse = await http.get(`/api/bazi/result/${newResultId}`);\n                  if (retryResponse.data.code === 200) {\n                    baziData.value = retryResponse.data.data.baziChart;\n                    aiAnalysis.value = retryResponse.data.data.aiAnalysis;\n                    focusAreas.value = retryResponse.data.data.focusAreas;\n                    Toast.success('分析结果加载成功');\n                    resultSuccess = true;\n                    break;\n                  } else if (retryResponse.data.code === 202) {\n                    // 结果正在处理中，等待更长时间再重试\n                    console.log('结果正在处理中，等待...');\n                    await new Promise(resolve => setTimeout(resolve, 3000));\n                  } else {\n                    console.error('获取结果失败:', retryResponse.data);\n                    await new Promise(resolve => setTimeout(resolve, 1000));\n                  }\n                } catch (resultError) {\n                  console.error(`获取结果出错 (尝试 ${resultRetryCount + 1}/3):`, resultError);\n                  await new Promise(resolve => setTimeout(resolve, 1000));\n                }\n                resultRetryCount++;\n              }\n              if (resultSuccess) {\n                return; // 成功获取结果，退出函数\n              }\n            }\n\n            // 如果所有尝试都失败，显示错误提示\n            Toast.fail('无法获取分析结果，请稍后刷新页面重试');\n          } catch (mockError) {\n            console.error('模拟支付失败:', mockError);\n            Toast.fail('模拟支付失败，请稍后重试');\n          }\n        }\n      }\n    });\n    const getElementName = element => {\n      if (!element) return '--';\n      const elementNames = {\n        wood: '木',\n        fire: '火',\n        earth: '土',\n        metal: '金',\n        water: '水'\n      };\n      return elementNames[element] || element;\n    };\n    const onClickLeft = () => {\n      router.push('/');\n    };\n\n    // 修改后的直接流下载函数，适应后端始终返回文件流\n    const downloadPDFAsStream = async () => {\n      Toast.loading({\n        message: '正在生成PDF并下载报告...',\n        duration: 0,\n        position: 'middle',\n        forbidClick: true\n      });\n      if (!resultId) {\n        Toast.clear();\n        Toast.fail('缺少结果ID，无法下载报告');\n        return false;\n      }\n      try {\n        console.log('直接下载报告, 结果ID:', resultId);\n\n        // 创建下载链接，添加时间戳避免缓存问题\n        const timestamp = new Date().getTime();\n        const downloadUrl = `/api/bazi/pdf/${resultId}?t=${timestamp}`;\n        console.log('下载URL:', downloadUrl);\n\n        // 使用fetch API获取文件流\n        const response = await fetch(downloadUrl, {\n          method: 'GET',\n          cache: 'no-cache',\n          headers: {\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': '0'\n          }\n        });\n\n        // 检查错误\n        if (!response.ok) {\n          let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n          try {\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n              const errorData = await response.json();\n              errorMsg = errorData.message || errorMsg;\n            } else {\n              // 如果不是JSON格式的错误，尝试获取文本错误信息\n              const errorText = await response.text();\n              if (errorText) {\n                errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n              }\n            }\n          } catch (e) {\n            console.error('解析错误响应失败:', e);\n          }\n          throw new Error(errorMsg);\n        }\n\n        // 检查内容类型\n        const contentType = response.headers.get('content-type');\n        const disposition = response.headers.get('content-disposition');\n        console.log('响应内容类型:', contentType);\n        console.log('响应内容处置:', disposition);\n\n        // 确定文件名和扩展名\n        let filename = `八字命理分析_${resultId}.pdf`;\n        if (disposition && disposition.includes('filename=')) {\n          const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n\n        // 确定文件类型\n        const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n        if (!filename.endsWith(fileExtension)) {\n          filename = `八字命理分析_${resultId}.${fileExtension}`;\n        }\n\n        // 转换为Blob对象\n        const blob = await response.blob();\n\n        // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n        // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n        const isDownloadStarted = disposition && disposition.includes('attachment');\n        if (blob.size === 0 && !isDownloadStarted) {\n          throw new Error('下载的文件为空');\n        }\n\n        // 对于小文件，我们可以验证文件内容\n        // 但对于大文件或浏览器接管的下载，跳过验证\n        if (blob.size > 0 && blob.size < 1024 * 1024 && contentType && contentType.includes('pdf')) {\n          try {\n            // 读取文件头部以验证是否为有效的PDF\n            const fileReader = new FileReader();\n            const headerPromise = new Promise((resolve, reject) => {\n              fileReader.onloadend = e => resolve(e.target.result);\n              fileReader.onerror = e => reject(e);\n            });\n            fileReader.readAsArrayBuffer(blob.slice(0, 5));\n            const header = await headerPromise;\n            const headerView = new Uint8Array(header);\n            const headerString = String.fromCharCode.apply(null, headerView);\n            if (!headerString.startsWith('%PDF')) {\n              console.error('无效的PDF文件头:', headerString);\n              throw new Error('下载的不是有效的PDF文件');\n            }\n          } catch (e) {\n            console.error('验证PDF文件失败:', e);\n            // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n            if (!isDownloadStarted) {\n              throw new Error('验证PDF文件失败: ' + e.message);\n            } else {\n              console.warn('浏览器接管了下载，跳过PDF验证');\n            }\n          }\n        }\n\n        // 如果浏览器已经接管下载（通过Content-Disposition头部），\n        // 我们不需要手动创建下载链接\n        if (!isDownloadStarted) {\n          // 创建下载链接\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = filename;\n\n          // 触发下载\n          document.body.appendChild(a);\n          a.click();\n\n          // 清理\n          setTimeout(() => {\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n          }, 100);\n        }\n        Toast.clear();\n        Toast.success('报告下载成功');\n        return true;\n      } catch (error) {\n        console.error('直接下载PDF出错:', error);\n        Toast.clear();\n\n        // 检查是否是因为浏览器已经接管了下载而导致的错误\n        if (error.message && (error.message.includes('下载的文件为空') || error.message.includes('验证PDF文件失败'))) {\n          // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n          console.log('可能是浏览器已经接管了下载，不显示错误');\n          Toast.success('报告下载已开始，请等待浏览器完成下载');\n          return true;\n        }\n\n        // 显示错误信息\n        Toast.fail(error.message || '下载失败，请稍后重试');\n        return false;\n      }\n    };\n\n    // 修改主下载函数，添加重试逻辑\n    const downloadPDF = async () => {\n      Toast.loading({\n        message: '正在生成并下载PDF报告...',\n        duration: 5000,\n        position: 'middle'\n      });\n      if (!resultId) {\n        Toast.fail('缺少结果ID，无法生成报告');\n        return;\n      }\n\n      // 最多尝试3次下载\n      let attempts = 0;\n      let success = false;\n      while (attempts < 3 && !success) {\n        attempts++;\n        if (attempts > 1) {\n          console.log(`尝试第${attempts}次下载...`);\n          Toast.loading({\n            message: `尝试第${attempts}次下载...`,\n            duration: 2000\n          });\n          // 在重试之前等待一段时间\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n\n        // 使用流式下载模式，并处理返回值\n        success = await downloadPDFAsStream();\n\n        // 如果流式下载成功，直接返回，不再尝试其他方法\n        if (success === true) {\n          return;\n        }\n      }\n\n      // 如果多次尝试后仍然失败，提示用户\n      if (!success) {\n        Toast.clear();\n        Dialog.alert({\n          title: 'PDF下载失败',\n          message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。'\n        });\n      }\n    };\n\n    // 本地生成PDF的函数\n    const generatePDFLocally = async () => {\n      console.log('使用客户端jsPDF库生成PDF');\n\n      // 获取内容元素\n      const element = document.querySelector('.result-container');\n      if (!element) {\n        throw new Error('找不到要转换的内容元素');\n      }\n      Toast.loading({\n        message: '正在捕获页面内容...',\n        duration: 5000\n      });\n      try {\n        // 使用html2canvas捕获内容\n        const canvas = await html2canvas(element, {\n          scale: 1,\n          useCORS: true,\n          logging: false,\n          windowWidth: document.documentElement.offsetWidth,\n          windowHeight: document.documentElement.offsetHeight\n        });\n        Toast.loading({\n          message: '正在生成PDF文件...',\n          duration: 5000\n        });\n\n        // 创建PDF文档\n        const pdf = new jsPDF('p', 'mm', 'a4');\n\n        // 计算尺寸和比例\n        const imgData = canvas.toDataURL('image/png');\n        const imgWidth = 210; // A4宽度，单位mm\n        const pageHeight = 297; // A4高度，单位mm\n        const imgHeight = canvas.height * imgWidth / canvas.width;\n        let heightLeft = imgHeight;\n        let position = 0;\n\n        // 添加首页\n        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n\n        // 如果内容超过一页，添加更多页\n        while (heightLeft > 0) {\n          position = heightLeft - imgHeight;\n          pdf.addPage();\n          pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n          heightLeft -= pageHeight;\n        }\n\n        // 添加页脚\n        const pageCount = pdf.internal.getNumberOfPages();\n        for (let i = 1; i <= pageCount; i++) {\n          pdf.setPage(i);\n          pdf.setFontSize(10);\n          pdf.setTextColor(150);\n          pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, {\n            align: 'center'\n          });\n        }\n\n        // 保存PDF\n        pdf.save(`八字命理分析_${resultId}.pdf`);\n        return true;\n      } catch (error) {\n        console.error('本地PDF生成错误:', error);\n        throw error;\n      }\n    };\n    const shareResult = () => {\n      Toast.success('分享功能开发中');\n    };\n\n    // 处理本地PDF生成\n    const handleLocalPDFGeneration = async () => {\n      try {\n        Toast.loading({\n          message: '正在本地生成PDF...',\n          duration: 0,\n          forbidClick: true\n        });\n        await generatePDFLocally();\n        Toast.clear();\n        Toast.success('本地PDF生成成功');\n      } catch (error) {\n        console.error('本地PDF生成失败:', error);\n        Toast.clear();\n        Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n      }\n    };\n    const reloadBaziData = async () => {\n      Toast.loading('正在重新加载数据...');\n      try {\n        // 测试模拟支付接口以获取分析结果\n        if (!resultId) {\n          Toast.fail('缺少结果ID');\n          return;\n        }\n\n        // 首先尝试使用模拟支付接口\n        try {\n          console.log('尝试使用模拟支付接口...');\n\n          // 显示加载提示\n          Toast.loading({\n            message: '正在重新分析八字，请耐心等待30-60秒...',\n            duration: 10000,\n            position: 'middle'\n          });\n\n          // 直接使用完整的resultId，不要去掉RES前缀\n          const mockPaymentResponse = await http.post(`/api/order/mock/pay/${resultId}`, {\n            birthDate: urlParams.get('birthDate') || '2023-06-06',\n            birthTime: urlParams.get('birthTime') || '辰时 (07:00-09:00)',\n            gender: urlParams.get('gender') || 'male'\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log('模拟支付响应:', mockPaymentResponse.data);\n          if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n            // 使用返回的resultId重新加载数据\n            const newResultId = mockPaymentResponse.data.data.resultId;\n            console.log('获取到新的resultId:', newResultId);\n            const response = await http.get(`/api/bazi/result/${newResultId}`);\n            if (response.data.code === 200) {\n              baziData.value = response.data.data.baziChart;\n              aiAnalysis.value = response.data.data.aiAnalysis;\n              focusAreas.value = response.data.data.focusAreas;\n              Toast.success('数据加载成功');\n              return;\n            }\n          }\n        } catch (mockError) {\n          console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n        }\n\n        // 如果模拟支付失败，尝试直接获取结果\n        const response = await http.get(`/api/bazi/result/${resultId}`);\n        if (response.data.code === 200) {\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('数据加载成功');\n        } else {\n          Toast.fail(response.data.message || '加载失败');\n        }\n      } catch (error) {\n        console.error('重新加载失败:', error);\n        Toast.fail('加载失败: ' + (error.message || '未知错误'));\n      }\n    };\n    const __returned__ = {\n      route,\n      router,\n      resultId,\n      activeTab,\n      userAge,\n      getAnalysisContent,\n      focusAreas,\n      baziData,\n      aiAnalysis,\n      testApiConnection,\n      getElementName,\n      onClickLeft,\n      downloadPDFAsStream,\n      downloadPDF,\n      generatePDFLocally,\n      shareResult,\n      handleLocalPDFGeneration,\n      reloadBaziData,\n      ref,\n      onMounted,\n      reactive,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Toast() {\n        return Toast;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get jsPDF() {\n        return jsPDF;\n      },\n      get html2canvas() {\n        return html2canvas;\n      },\n      get axios() {\n        return axios;\n      },\n      get http() {\n        return http;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","reactive","computed","useRoute","useRouter","Toast","Dialog","jsPDF","html2canvas","axios","http","route","router","resultId","params","id","query","activeTab","userAge","age","isNaN","parseInt","value","localStorage","getItem","console","log","getAnalysisContent","sectionName","aiAnalysis","personality","education","health","healthText","sectionMatch","match","RegExp","trim","overall","futureMatch","e","error","focusAreas","baziData","yearPillar","heavenlyStem","earthlyBranch","element","monthPillar","dayPillar","hourPillar","fiveElements","wood","fire","earth","metal","water","flowingYears","year","wealth","career","relationship","children","testApiConnection","loading","response","get","data","success","fail","isApiConnected","warn","localResultId","finalResultId","message","duration","position","status","code","baziChart","waitTime","pollInterval","maxPollTimeout","setInterval","pollResponse","hasAnalysis","Object","values","some","v","clearInterval","clearTimeout","remainingTime","Math","max","round","err","setTimeout","confirm","title","confirmButtonText","cancelButtonText","then","window","location","reload","catch","push","startsWith","orderId","urlParams","URLSearchParams","search","birthDate","birthTime","gender","originalOrderId","validBirthDate","dateParts","split","length","month","day","requestData","retryCount","mockPaymentResponse","paymentId","post","headers","Promise","resolve","retryError","newResultId","resultRetryCount","resultSuccess","retryResponse","resultError","mockError","getElementName","elementNames","onClickLeft","downloadPDFAsStream","forbidClick","clear","timestamp","Date","getTime","downloadUrl","fetch","method","cache","ok","errorMsg","contentType","includes","errorData","json","errorText","text","substring","Error","disposition","filename","filenameMatch","fileExtension","endsWith","blob","isDownloadStarted","size","fileReader","FileReader","headerPromise","reject","onloadend","target","result","onerror","readAsArrayBuffer","slice","header","headerView","Uint8Array","headerString","String","fromCharCode","apply","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","downloadPDF","attempts","alert","generatePDFLocally","querySelector","canvas","scale","useCORS","logging","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","pdf","imgData","toDataURL","imgWidth","pageHeight","imgHeight","height","width","heightLeft","addImage","addPage","pageCount","internal","getNumberOfPages","i","setPage","setFontSize","setTextColor","pageSize","getWidth","getHeight","align","save","shareResult","handleLocalPDFGeneration","reloadBaziData"],"sources":["D:/Python/20250603开发八字命理AI指导功能页码/开发八字命理AI指导功能页码/frontend/src/Result.vue"],"sourcesContent":["<template>\n  <div class=\"result-container\">\n    <van-nav-bar\n      title=\"八字分析结果\"\n      left-text=\"返回\"\n      left-arrow\n      @click-left=\"onClickLeft\"\n    />\n    \n    <div class=\"result-header\">\n      <h2>您的八字命盘分析</h2>\n      <p>基于您的出生信息，AI为您提供的个性化人生指导</p>\n    </div>\n    \n    <van-tabs v-model=\"activeTab\" sticky>\n      <van-tab title=\"命盘信息\">\n        <div class=\"bazi-chart\">\n          <h3>八字命盘</h3>\n          <van-grid :column-num=\"4\" :border=\"false\" v-if=\"baziData && baziData.yearPillar && baziData.monthPillar && baziData.dayPillar && baziData.hourPillar\">\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.yearPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.yearPillar.earthlyBranch }}</div>\n                  <div class=\"label\">年柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.monthPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.monthPillar.earthlyBranch }}</div>\n                  <div class=\"label\">月柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.dayPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.dayPillar.earthlyBranch }}</div>\n                  <div class=\"label\">日柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n            <van-grid-item>\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem\">{{ baziData.hourPillar.heavenlyStem }}</div>\n                  <div class=\"branch\">{{ baziData.hourPillar.earthlyBranch }}</div>\n                  <div class=\"label\">时柱</div>\n                </div>\n              </template>\n            </van-grid-item>\n          </van-grid>\n          \n          <!-- 数据缺失时显示占位符 -->\n          <van-grid :column-num=\"4\" :border=\"false\" v-else>\n            <van-grid-item v-for=\"pillar in ['年柱', '月柱', '日柱', '时柱']\" :key=\"pillar\">\n              <template #default>\n                <div class=\"pillar\">\n                  <div class=\"stem placeholder\">--</div>\n                  <div class=\"branch placeholder\">--</div>\n                  <div class=\"label\">{{ pillar }}</div>\n                </div>\n              </template>\n            </van-grid-item>\n          </van-grid>\n          \n          <h3>五行分布</h3>\n          <div class=\"five-elements\" v-if=\"baziData && baziData.fiveElements\">\n            <div class=\"element\" v-for=\"(value, element) in baziData.fiveElements\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">{{ value }}</div>\n            </div>\n          </div>\n          <div class=\"five-elements\" v-else>\n            <div class=\"element\" v-for=\"element in ['wood', 'fire', 'earth', 'metal', 'water']\" :key=\"element\">\n              <div class=\"element-name\">{{ getElementName(element) }}</div>\n              <div class=\"element-value\">--</div>\n            </div>\n          </div>\n          \n          <!-- 添加神煞显示 -->\n          <h3>神煞信息</h3>\n          <div class=\"shen-sha-info\" v-if=\"baziData && baziData.shenSha\">\n            <van-cell-group inset>\n              <van-cell title=\"日冲\" :value=\"baziData.shenSha.dayChong || '无'\" />\n              <van-cell title=\"值神\" :value=\"baziData.shenSha.zhiShen || '无'\" />\n              <van-cell title=\"彭祖百忌\" :value=\"(baziData.shenSha.pengZuGan && baziData.shenSha.pengZuZhi) ? `${baziData.shenSha.pengZuGan} ${baziData.shenSha.pengZuZhi}` : '无'\" />\n              <van-cell title=\"喜神方位\" :value=\"baziData.shenSha.xiShen || '无'\" />\n              <van-cell title=\"福神方位\" :value=\"baziData.shenSha.fuShen || '无'\" />\n              <van-cell title=\"财神方位\" :value=\"baziData.shenSha.caiShen || '无'\" />\n              <van-cell title=\"本命神煞\" :value=\"baziData.shenSha.benMing ? baziData.shenSha.benMing.join('、') : '无'\" />\n            </van-cell-group>\n          </div>\n          <div class=\"shen-sha-info\" v-else>\n            <van-cell-group inset>\n              <van-cell title=\"神煞信息\" value=\"暂无数据\" />\n            </van-cell-group>\n          </div>\n          \n          <!-- 添加大运显示 -->\n          <h3>大运信息</h3>\n          <div class=\"da-yun-info\" v-if=\"baziData && baziData.daYun\">\n            <p class=\"qi-yun-info\">起运年龄: {{ baziData.daYun.startAge || '--' }}岁，起运年份: {{ baziData.daYun.startYear || '--' }}年</p>\n            \n            <div class=\"da-yun-table\" v-if=\"baziData.daYun.daYunList && baziData.daYun.daYunList.length\">\n              <van-cell-group inset>\n                <van-cell v-for=\"item in baziData.daYun.daYunList\" :key=\"item.index\"\n                  :title=\"`${item.index || '--'}. ${item.heavenlyStem || '--'}${item.earthlyBranch || '--'} (${item.element || '--'})`\"\n                  :value=\"`${item.startYear || '--'}-${item.endYear || '--'}年`\"\n                />\n              </van-cell-group>\n            </div>\n            <!-- 处理数据结构不一致的情况：daYun下有daYun数组 -->\n            <div class=\"da-yun-table\" v-else-if=\"baziData.daYun.daYun && baziData.daYun.daYun.length\">\n              <van-cell-group inset>\n                <van-cell v-for=\"item in baziData.daYun.daYun\" :key=\"item.index || item.ganZhi\"\n                  :title=\"`${item.index || '--'}. ${item.heavenlyStem || item.ganZhi?.slice(0,1) || '--'}${item.earthlyBranch || item.ganZhi?.slice(1,2) || '--'} (${item.element || '--'})`\"\n                  :value=\"`${item.startYear || '--'}-${item.endYear || '--'}年`\"\n                />\n              </van-cell-group>\n            </div>\n            <div v-else>\n              <van-cell-group inset>\n                <van-cell title=\"大运信息\" value=\"暂无详细数据\" />\n              </van-cell-group>\n            </div>\n          </div>\n          <div class=\"da-yun-info\" v-else>\n            <van-cell-group inset>\n              <van-cell title=\"大运信息\" value=\"暂无数据\" />\n            </van-cell-group>\n          </div>\n          \n          <h3>大运流年</h3>\n          <div class=\"flowing-years\" v-if=\"baziData && baziData.flowingYears && baziData.flowingYears.length\">\n            <van-steps direction=\"horizontal\" :active=\"2\">\n              <van-step v-for=\"(year, index) in baziData.flowingYears.slice(0, 5)\" :key=\"index\">\n                {{ year.year || '--' }}年<br>\n                {{ year.heavenlyStem || '--' }}{{ year.earthlyBranch || '--' }}\n              </van-step>\n            </van-steps>\n          </div>\n          <div class=\"flowing-years\" v-else>\n            <van-cell-group inset>\n              <van-cell title=\"流年信息\" value=\"暂无数据\" />\n            </van-cell-group>\n          </div>\n        </div>\n      </van-tab>\n      \n      <van-tab title=\"AI分析结果\">\n        <div class=\"ai-analysis\">\n          <div v-if=\"userAge !== null && userAge < 0\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未来出生的宝宝，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge !== null && userAge < 6\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对婴幼儿({{userAge}}岁)，重点关注性格特点、天赋才能和健康发展趋势。\n            </van-notice-bar>\n          </div>\n          <div v-else-if=\"userAge !== null && userAge < 18\" class=\"age-notice\">\n            <van-notice-bar\n              color=\"#1989fa\"\n              background=\"#ecf9ff\"\n              left-icon=\"info-o\"\n            >\n              此分析针对未成年人({{userAge}}岁)，重点关注性格特点、学业发展和健康状况。\n            </van-notice-bar>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>身体健康</h3>\n            <p>{{ aiAnalysis.health }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>性格特点</h3>\n            <p>{{ aiAnalysis.personality || getAnalysisContent('性格特点') }}</p>\n          </div>\n          \n          <!-- 学业分析（对所有年龄段显示，但侧重点不同） -->\n          <div class=\"analysis-section\">\n            <h3>学业分析</h3>\n            <p>{{ aiAnalysis.education || getAnalysisContent('学业分析') }}</p>\n          </div>\n          \n          <!-- 父母情况（所有年龄段都显示） -->\n          <div class=\"analysis-section\">\n            <h3>父母情况</h3>\n            <p>{{ aiAnalysis.parents || '暂无父母情况分析' }}</p>\n          </div>\n          \n          <!-- 人际关系（所有年龄段都显示） -->\n          <div class=\"analysis-section\">\n            <h3>人际关系</h3>\n            <p>{{ aiAnalysis.social || '暂无人际关系分析' }}</p>\n          </div>\n          \n          <!-- 财运分析（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '财运分析' : '未来财运发展' }}</h3>\n            <p>{{ aiAnalysis.wealth }}</p>\n          </div>\n          \n          <!-- 事业发展（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '事业发展' : '未来事业发展' }}</h3>\n            <p>{{ aiAnalysis.career }}</p>\n          </div>\n          \n          <!-- 婚姻感情（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '婚姻感情' : '未来感情发展' }}</h3>\n            <p>{{ aiAnalysis.relationship }}</p>\n          </div>\n          \n          <!-- 子女情况（18岁以上显示，或者标注为未来发展） -->\n          <div class=\"analysis-section\">\n            <h3>{{ userAge !== null && userAge >= 18 ? '子女情况' : '未来子女缘分' }}</h3>\n            <p>{{ aiAnalysis.children }}</p>\n          </div>\n          \n          <!-- 近五年运势（所有年龄段都显示） -->\n          <div class=\"analysis-section\">\n            <h3>近五年运势</h3>\n            <p>{{ aiAnalysis.future || getAnalysisContent('近五年运势') || aiAnalysis.overall }}</p>\n          </div>\n          \n          <div class=\"analysis-section\">\n            <h3>综合建议</h3>\n            <p>{{ aiAnalysis.overall }}</p>\n          </div>\n        </div>\n      </van-tab>\n    </van-tabs>\n    \n    <div class=\"action-buttons\">\n      <van-button type=\"primary\" block @click=\"downloadPDF\">\n        下载PDF报告\n      </van-button>\n      <van-button plain type=\"primary\" block style=\"margin-top: 10px;\" @click=\"shareResult\">\n        分享结果\n      </van-button>\n      \n      <!-- 本地生成PDF按钮 -->\n      <van-button plain type=\"info\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"handleLocalPDFGeneration\">\n        本地生成PDF\n      </van-button>\n      \n      <!-- 调试按钮 -->\n      <van-button plain type=\"warning\" \n                  block \n                  style=\"margin-top: 10px;\" \n                  @click=\"reloadBaziData\">\n        重新加载分析数据\n      </van-button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { Toast, Dialog } from 'vant';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios';\nimport http from './api/http'; // 导入配置好的http实例\n\nconst route = useRoute();\nconst router = useRouter();\nconst resultId = route.params.id || route.query.resultId;\nconst activeTab = ref(0);\n\n// 用户年龄，从URL参数或localStorage获取\nconst userAge = ref(null);\n// 尝试从URL参数获取年龄\nif (route.query.age && !isNaN(parseInt(route.query.age))) {\n  userAge.value = parseInt(route.query.age);\n} \n// 如果URL参数中没有年龄，尝试从localStorage获取\nelse if (localStorage.getItem('userAge') && !isNaN(parseInt(localStorage.getItem('userAge')))) {\n  userAge.value = parseInt(localStorage.getItem('userAge'));\n}\n// 记录用户年龄到控制台，便于调试\nconsole.log('用户年龄:', userAge.value);\n\n// 从分析文本中提取特定部分内容\nconst getAnalysisContent = (sectionName) => {\n  try {\n    // 如果是性格特点或学业发展，直接从对应字段获取\n    if (sectionName === '性格特点' && aiAnalysis.value.personality) {\n      return aiAnalysis.value.personality;\n    }\n    \n    if (sectionName === '学业发展' && aiAnalysis.value.education) {\n      return aiAnalysis.value.education;\n    }\n    \n    // 处理健康分析文本，尝试提取学业、性格等内容\n    if (aiAnalysis.value.health) {\n      const healthText = aiAnalysis.value.health;\n      \n      // 查找各部分的标记\n      const sectionMatch = healthText.match(new RegExp(`###\\\\s*${sectionName}([\\\\s\\\\S]*?)(?=###|$)`, 'i'));\n      if (sectionMatch && sectionMatch[1]) {\n        return sectionMatch[1].trim();\n      }\n      \n      // 如果是未来发展，尝试从overall中提取\n      if (sectionName === '未来发展' && aiAnalysis.value.overall) {\n        const futureMatch = aiAnalysis.value.overall.match(/未来(\\d+)年[：:]([\\s\\S]*?)(?=（本分析|$)/i);\n        if (futureMatch && futureMatch[2]) {\n          return futureMatch[2].trim();\n        }\n      }\n    }\n    \n    // 如果没有找到对应部分或提取失败，返回空字符串\n    return '';\n  } catch (e) {\n    console.error(`提取${sectionName}内容时出错:`, e);\n    return '';\n  }\n};\n\n// 模拟数据，作为API调用失败时的备用数据\nconst focusAreas = ref(['health', 'wealth', 'career', 'relationship']);\n\n// 备用数据，只在API调用失败时使用\nconst baziData = ref({\n  yearPillar: {\n    heavenlyStem: '甲',\n    earthlyBranch: '子',\n    element: '水'\n  },\n  monthPillar: {\n    heavenlyStem: '丙',\n    earthlyBranch: '寅',\n    element: '木'\n  },\n  dayPillar: {\n    heavenlyStem: '戊',\n    earthlyBranch: '午',\n    element: '火'\n  },\n  hourPillar: {\n    heavenlyStem: '庚',\n    earthlyBranch: '申',\n    element: '金'\n  },\n  fiveElements: {\n    wood: 2,\n    fire: 2,\n    earth: 1,\n    metal: 2,\n    water: 1\n  },\n  flowingYears: [\n    {\n      year: 2025,\n      heavenlyStem: '乙',\n      earthlyBranch: '丑',\n      element: '土'\n    },\n    {\n      year: 2026,\n      heavenlyStem: '丙',\n      earthlyBranch: '寅',\n      element: '木'\n    },\n    {\n      year: 2027,\n      heavenlyStem: '丁',\n      earthlyBranch: '卯',\n      element: '木'\n    },\n    {\n      year: 2028,\n      heavenlyStem: '戊',\n      earthlyBranch: '辰',\n      element: '土'\n    },\n    {\n      year: 2029,\n      heavenlyStem: '己',\n      earthlyBranch: '巳',\n      element: '火'\n    }\n  ]\n});\n\n// 备用分析数据，只在API调用失败时使用\nconst aiAnalysis = ref({\n  health: '您的八字中火土较旺，木水偏弱。从健康角度看，您需要注意心脑血管系统和消化系统的保养。建议平时多喝水，保持规律作息，避免过度劳累和情绪波动。2025-2026年间需特别注意肝胆健康，可适当增加绿色蔬菜的摄入，定期体检。',\n  wealth: '您的财运在2025年有明显上升趋势，特别是在春夏季节。八字中金水相生，适合从事金融、贸易、水利相关行业。投资方面，稳健为主，可考虑分散投资组合。2027年有意外财运，但需谨慎对待，避免投机性强的项目。',\n  career: '您的事业宫位较为稳定，具有较强的组织能力和执行力。2025-2026年是事业发展的关键期，有升职或转行的机会。建议提升专业技能，扩展人脉关系。您适合在团队中担任协调或管理角色，发挥沟通才能。',\n  relationship: '您的八字中日柱为戊午，感情态度较为务实。2025年下半年至2026年上半年是感情发展的良好时期。已婚者需注意与伴侣的沟通，避免因工作忙碌而忽略家庭。单身者有机会通过社交活动或朋友介绍认识合适的对象。',\n  children: '您的子女宫位较为温和，与子女关系和谐。教育方面，建议采用引导式而非强制式的方法，尊重子女的兴趣发展。2026-2027年是子女发展的重要阶段，可能需要您更多的关注和支持。',\n  overall: '综合分析您的八字，2025-2027年是您人生的一个上升期，各方面都有良好发展。建议把握这段时间，在事业上积极进取，在健康上注意保养，在人际关系上广结善缘。您的人生态度积极乐观，具有较强的适应能力和抗压能力，这将帮助您度过人生中的各种挑战。'\n});\n\nconst testApiConnection = async () => {\n  try {\n    Toast.loading('正在测试API连接...');\n    // 使用配置好的http实例\n    const response = await http.get('/');\n    console.log('API根路径响应:', response.data);\n    Toast.success('API连接成功');\n    return true;\n  } catch (error) {\n    console.error('API连接测试失败:', error);\n    Toast.fail('API连接失败，请检查后端服务');\n    return false;\n  }\n};\n\nonMounted(async () => {\n  // 先测试API连接\n  const isApiConnected = await testApiConnection();\n  if (!isApiConnected) {\n    console.warn('API连接失败，将使用模拟数据');\n    return;\n  }\n  \n  console.log('结果页面加载，ID:', resultId);\n  \n  // 如果没有resultId，尝试从本地存储获取\n  const localResultId = localStorage.getItem('resultId');\n  if (!resultId && localResultId) {\n    console.log('从本地存储获取ID:', localResultId);\n  }\n  \n  const finalResultId = resultId || localResultId;\n  \n  if (!finalResultId) {\n    console.error('缺少结果ID，无法获取分析结果');\n    Toast.fail('缺少结果ID，无法获取分析结果');\n    return;\n  }\n  \n  try {\n    console.log('调用API获取结果:', `/api/bazi/result/${finalResultId}`);\n    \n    // 显示加载提示，提醒用户需要等待\n    Toast.loading({\n      message: '正在调用AI进行八字分析，请耐心等待30-60秒...',\n      duration: 10000,\n      position: 'middle'\n    });\n    \n    // 使用配置好的http实例\n    const response = await http.get(`/api/bazi/result/${finalResultId}`);\n    \n    console.log('API响应:', response.status, response.data);\n    \n    if (response.data.code === 200) {\n      console.log('获取成功，更新数据');\n      // 确保从API获取数据并更新视图\n      if (response.data.data.baziChart) {\n        baziData.value = response.data.data.baziChart;\n      } else {\n        console.warn('返回数据中没有baziChart字段，使用默认值');\n      }\n      \n      if (response.data.data.aiAnalysis) {\n        aiAnalysis.value = response.data.data.aiAnalysis;\n      } else {\n        console.warn('返回数据中没有aiAnalysis字段，使用默认值');\n      }\n      \n      if (response.data.data.focusAreas) {\n        focusAreas.value = response.data.data.focusAreas;\n      }\n      \n      Toast.success('分析结果加载成功');\n    } else if (response.data.code === 202) {\n      // 服务器接受了请求但还在处理中（异步分析）\n      console.log('分析正在进行中，等待时间:', response.data.data.waitTime || '未知');\n      \n      // 显示清晰的等待提示，告知用户确切的等待情况\n      Toast.loading({\n        message: `AI正在专注分析您的八字命盘，已经分析了${response.data.data.waitTime || 0}秒，完整分析需要30-60秒，请稍候...`,\n        duration: 8000,\n        position: 'middle'\n      });\n      \n      // 预先显示部分数据\n      if (response.data.data.baziChart) {\n        baziData.value = response.data.data.baziChart;\n      }\n      if (response.data.data.aiAnalysis) {\n        aiAnalysis.value = response.data.data.aiAnalysis;\n      }\n      if (response.data.data.focusAreas) {\n        focusAreas.value = response.data.data.focusAreas;\n      }\n      \n      // 创建轮询定时器引用\n      const pollInterval = ref(null);\n      const maxPollTimeout = ref(null);\n      \n      // 启动轮询，每15秒查询一次直到分析完成\n      pollInterval.value = setInterval(async () => {\n        try {\n          console.log('轮询查询分析结果...');\n          const pollResponse = await http.get(`/api/bazi/result/${finalResultId}`);\n          \n          // 添加更详细的日志\n          console.log(`轮询响应状态码: ${pollResponse.status}, 响应code: ${pollResponse.data.code}`);\n          \n          // 首先检查是否有分析结果\n          const hasAnalysis = pollResponse.data.data && \n                              pollResponse.data.data.aiAnalysis && \n                              Object.values(pollResponse.data.data.aiAnalysis).some(v => v);\n          \n          if (pollResponse.data.code === 200 || hasAnalysis) {\n            // 分析完成，更新数据\n            console.log('分析已完成，更新数据');\n            baziData.value = pollResponse.data.data.baziChart;\n            aiAnalysis.value = pollResponse.data.data.aiAnalysis;\n            focusAreas.value = pollResponse.data.data.focusAreas;\n            Toast.success('分析结果加载成功！您的八字命盘解析已完成');\n            \n            // 清除所有定时器\n            if (pollInterval.value) {\n              clearInterval(pollInterval.value);\n              pollInterval.value = null;\n            }\n            if (maxPollTimeout.value) {\n              clearTimeout(maxPollTimeout.value);\n              maxPollTimeout.value = null;\n            }\n            \n            // 自动切换到AI分析结果标签\n            activeTab.value = 1;\n          } else if (pollResponse.data.code !== 202) {\n            // 如果返回其他错误码，停止轮询\n            console.error('轮询时发生错误:', pollResponse.data.message);\n            Toast.fail(`查询错误: ${pollResponse.data.message}`);\n            \n            // 清除所有定时器\n            if (pollInterval.value) {\n              clearInterval(pollInterval.value);\n              pollInterval.value = null;\n            }\n            if (maxPollTimeout.value) {\n              clearTimeout(maxPollTimeout.value);\n              maxPollTimeout.value = null;\n            }\n          } else {\n            // 仍在分析中，更新等待时间\n            const waitTime = pollResponse.data.data.waitTime || 0;\n            const remainingTime = Math.max(0, 60 - waitTime);  // 假设总时间为60秒\n            \n            Toast.loading({\n              message: `AI正在专注分析中(${Math.round(waitTime/60*100)}%)，预计还需${remainingTime}秒完成...`,\n              duration: 5000,\n              position: 'middle'\n            });\n            console.log('仍在分析中，已等待:', waitTime, '秒');\n          }\n        } catch (err) {\n          console.error('轮询时出错:', err);\n          // 出错也停止轮询并清除定时器\n          if (pollInterval.value) {\n            clearInterval(pollInterval.value);\n            pollInterval.value = null;\n          }\n        }\n      }, 15000); // 每15秒查询一次，减少服务器压力\n      \n      // 设置最大轮询时间，防止无限轮询\n      maxPollTimeout.value = setTimeout(() => {\n        if (pollInterval.value) {\n          clearInterval(pollInterval.value);\n          pollInterval.value = null;\n          console.log('超过最大轮询时间，停止轮询');\n          \n          // 显示一个友好的提示，询问用户是否要继续等待\n          Dialog.confirm({\n            title: '分析耗时较长',\n            message: '您的八字命理分析正在进行中，但耗时较长。您可以选择继续等待或稍后再查看结果。',\n            confirmButtonText: '继续等待',\n            cancelButtonText: '稍后查看',\n          }).then(() => {\n            // 用户选择继续等待，重新启动轮询\n            window.location.reload();\n          }).catch(() => {\n            // 用户选择稍后查看，可以先返回首页\n            router.push('/');\n          });\n        }\n      }, 180000); // 最多轮询3分钟\n    } else {\n      console.error('API返回错误:', response.data.message);\n      Toast.fail(response.data.message || '获取分析结果失败');\n    }\n  } catch (error) {\n    console.error('获取分析结果出错:', error);\n    console.error('错误详情:', error.response ? error.response.data : '无响应数据');\n    Toast.fail('获取分析结果失败，请稍后重试');\n    \n    // 备选方案：如果ID以\"RES\"开头，尝试模拟支付再获取结果\n    if (finalResultId.startsWith('RES')) {\n      try {\n        console.log('尝试使用模拟支付接口...');\n        \n        // 显示加载提示\n        Toast.loading({\n          message: '正在模拟支付并进行八字分析，请耐心等待30-60秒...',\n          duration: 20000,  // 增加等待时间\n          position: 'middle'\n        });\n        \n        // 直接使用完整的finalResultId，不要去掉RES前缀\n        const orderId = finalResultId;\n        \n        // 从URL查询参数中获取出生日期和时间\n        const urlParams = new URLSearchParams(window.location.search);\n        const birthDate = urlParams.get('birthDate') || '2023-06-06'; // 使用默认值\n        const birthTime = urlParams.get('birthTime') || '辰时 (07:00-09:00)'; // 使用默认值\n        const gender = urlParams.get('gender') || 'male'; // 使用默认值\n        // 获取原始订单ID（如果有）\n        const originalOrderId = urlParams.get('originalOrderId');\n        \n        console.log('URL参数:', { birthDate, birthTime, gender, originalOrderId });\n        \n        // 验证日期格式\n        let validBirthDate = birthDate;\n        try {\n          // 检查日期格式是否正确\n          const dateParts = birthDate.split('-');\n          if (dateParts.length === 3) {\n            const year = parseInt(dateParts[0]);\n            const month = parseInt(dateParts[1]);\n            const day = parseInt(dateParts[2]);\n            \n            // 验证年份在合理范围内\n            if (year < 1900 || year > 2100) {\n              console.warn(`出生年份 ${year} 超出推荐范围(1900-2100)，使用默认值`);\n              validBirthDate = '2000-01-01';\n            }\n          } else {\n            console.warn(`日期格式错误: ${birthDate}，使用默认值`);\n            validBirthDate = '2000-01-01';\n          }\n        } catch (e) {\n          console.error('日期验证错误:', e);\n          validBirthDate = '2000-01-01';\n        }\n        \n        console.log('模拟支付使用参数:', { birthDate: validBirthDate, birthTime, gender });\n        \n        // 准备请求数据\n        const requestData = {\n          birthDate: validBirthDate,\n          birthTime: birthTime,\n          gender: gender\n        };\n        \n        console.log('模拟支付请求数据:', requestData);\n        \n        // 尝试最多3次请求\n        let retryCount = 0;\n        let mockPaymentResponse = null;\n        \n        // 如果有原始订单ID，优先使用它进行模拟支付\n        const paymentId = originalOrderId || orderId;\n        console.log('使用ID进行模拟支付:', paymentId);\n        \n        while (retryCount < 3) {\n          try {\n            console.log(`尝试请求模拟支付 (${retryCount + 1}/3)...`);\n            // 发送POST请求，确保设置正确的Content-Type\n            mockPaymentResponse = await http.post(`/api/order/mock/pay/${paymentId}`, requestData, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            \n            // 如果成功，跳出循环\n            if (mockPaymentResponse && mockPaymentResponse.data && mockPaymentResponse.data.code === 200) {\n              break;\n            }\n            \n            // 如果失败但有响应，记录错误\n            console.error('模拟支付请求失败:', mockPaymentResponse?.data);\n            \n            // 等待一秒后重试\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            retryCount++;\n          } catch (retryError) {\n            console.error(`模拟支付请求出错 (尝试 ${retryCount + 1}/3):`, retryError);\n            \n            // 等待一秒后重试\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            retryCount++;\n          }\n        }\n        \n        // 检查是否成功获取响应\n        if (mockPaymentResponse && mockPaymentResponse.data && mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data && mockPaymentResponse.data.data.resultId) {\n          const newResultId = mockPaymentResponse.data.data.resultId;\n          console.log('获取到新的resultId:', newResultId);\n          \n          // 等待2秒，让服务器有时间处理结果\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          \n          // 尝试最多3次获取结果\n          let resultRetryCount = 0;\n          let resultSuccess = false;\n          \n          while (resultRetryCount < 3 && !resultSuccess) {\n            try {\n              console.log(`尝试获取结果 (${resultRetryCount + 1}/3)...`);\n              const retryResponse = await http.get(`/api/bazi/result/${newResultId}`);\n              \n              if (retryResponse.data.code === 200) {\n                baziData.value = retryResponse.data.data.baziChart;\n                aiAnalysis.value = retryResponse.data.data.aiAnalysis;\n                focusAreas.value = retryResponse.data.data.focusAreas;\n                Toast.success('分析结果加载成功');\n                resultSuccess = true;\n                break;\n              } else if (retryResponse.data.code === 202) {\n                // 结果正在处理中，等待更长时间再重试\n                console.log('结果正在处理中，等待...');\n                await new Promise(resolve => setTimeout(resolve, 3000));\n              } else {\n                console.error('获取结果失败:', retryResponse.data);\n                await new Promise(resolve => setTimeout(resolve, 1000));\n              }\n            } catch (resultError) {\n              console.error(`获取结果出错 (尝试 ${resultRetryCount + 1}/3):`, resultError);\n              await new Promise(resolve => setTimeout(resolve, 1000));\n            }\n            \n            resultRetryCount++;\n          }\n          \n          if (resultSuccess) {\n            return; // 成功获取结果，退出函数\n          }\n        }\n        \n        // 如果所有尝试都失败，显示错误提示\n        Toast.fail('无法获取分析结果，请稍后刷新页面重试');\n      } catch (mockError) {\n        console.error('模拟支付失败:', mockError);\n        Toast.fail('模拟支付失败，请稍后重试');\n      }\n    }\n  }\n});\n\nconst getElementName = (element) => {\n  if (!element) return '--';\n  \n  const elementNames = {\n    wood: '木',\n    fire: '火',\n    earth: '土',\n    metal: '金',\n    water: '水'\n  };\n  return elementNames[element] || element;\n};\n\nconst onClickLeft = () => {\n  router.push('/');\n};\n\n// 修改后的直接流下载函数，适应后端始终返回文件流\nconst downloadPDFAsStream = async () => {\n  Toast.loading({\n    message: '正在生成PDF并下载报告...',\n    duration: 0,\n    position: 'middle',\n    forbidClick: true\n  });\n  \n  if (!resultId) {\n    Toast.clear();\n    Toast.fail('缺少结果ID，无法下载报告');\n    return false;\n  }\n  \n  try {\n    console.log('直接下载报告, 结果ID:', resultId);\n    \n    // 创建下载链接，添加时间戳避免缓存问题\n    const timestamp = new Date().getTime();\n    const downloadUrl = `/api/bazi/pdf/${resultId}?t=${timestamp}`;\n    console.log('下载URL:', downloadUrl);\n    \n    // 使用fetch API获取文件流\n    const response = await fetch(downloadUrl, {\n      method: 'GET',\n      cache: 'no-cache',\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Pragma': 'no-cache',\n        'Expires': '0'\n      }\n    });\n    \n    // 检查错误\n    if (!response.ok) {\n      let errorMsg = `下载失败: HTTP错误 ${response.status}`;\n      try {\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          const errorData = await response.json();\n          errorMsg = errorData.message || errorMsg;\n        } else {\n          // 如果不是JSON格式的错误，尝试获取文本错误信息\n          const errorText = await response.text();\n          if (errorText) {\n            errorMsg = `下载失败: ${errorText.substring(0, 100)}`;\n          }\n        }\n      } catch (e) {\n        console.error('解析错误响应失败:', e);\n      }\n      throw new Error(errorMsg);\n    }\n    \n    // 检查内容类型\n    const contentType = response.headers.get('content-type');\n    const disposition = response.headers.get('content-disposition');\n    \n    console.log('响应内容类型:', contentType);\n    console.log('响应内容处置:', disposition);\n    \n    // 确定文件名和扩展名\n    let filename = `八字命理分析_${resultId}.pdf`;\n    if (disposition && disposition.includes('filename=')) {\n      const filenameMatch = disposition.match(/filename=[\"']?([^\"']+)[\"']?/);\n      if (filenameMatch && filenameMatch[1]) {\n        filename = filenameMatch[1];\n      }\n    }\n    \n    // 确定文件类型\n    const fileExtension = contentType && contentType.includes('html') ? 'html' : 'pdf';\n    if (!filename.endsWith(fileExtension)) {\n      filename = `八字命理分析_${resultId}.${fileExtension}`;\n    }\n    \n    // 转换为Blob对象\n    const blob = await response.blob();\n    \n    // 检查Blob大小 - 注意：当浏览器接管下载时，可能会导致blob.size为0\n    // 因此，如果有Content-Disposition头部，我们应该认为下载已经开始\n    const isDownloadStarted = disposition && disposition.includes('attachment');\n    if (blob.size === 0 && !isDownloadStarted) {\n      throw new Error('下载的文件为空');\n    }\n    \n    // 对于小文件，我们可以验证文件内容\n    // 但对于大文件或浏览器接管的下载，跳过验证\n    if (blob.size > 0 && blob.size < 1024*1024 && contentType && contentType.includes('pdf')) {\n      try {\n        // 读取文件头部以验证是否为有效的PDF\n        const fileReader = new FileReader();\n        const headerPromise = new Promise((resolve, reject) => {\n          fileReader.onloadend = (e) => resolve(e.target.result);\n          fileReader.onerror = (e) => reject(e);\n        });\n        fileReader.readAsArrayBuffer(blob.slice(0, 5));\n        \n        const header = await headerPromise;\n        const headerView = new Uint8Array(header);\n        const headerString = String.fromCharCode.apply(null, headerView);\n        \n        if (!headerString.startsWith('%PDF')) {\n          console.error('无效的PDF文件头:', headerString);\n          throw new Error('下载的不是有效的PDF文件');\n        }\n      } catch (e) {\n        console.error('验证PDF文件失败:', e);\n        // 如果是浏览器接管下载导致的验证失败，我们不抛出错误\n        if (!isDownloadStarted) {\n          throw new Error('验证PDF文件失败: ' + e.message);\n        } else {\n          console.warn('浏览器接管了下载，跳过PDF验证');\n        }\n      }\n    }\n    \n    // 如果浏览器已经接管下载（通过Content-Disposition头部），\n    // 我们不需要手动创建下载链接\n    if (!isDownloadStarted) {\n      // 创建下载链接\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      \n      // 触发下载\n      document.body.appendChild(a);\n      a.click();\n      \n      // 清理\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }, 100);\n    }\n    \n    Toast.clear();\n    Toast.success('报告下载成功');\n    return true;\n  } catch (error) {\n    console.error('直接下载PDF出错:', error);\n    Toast.clear();\n    \n    // 检查是否是因为浏览器已经接管了下载而导致的错误\n    if (error.message && (\n        error.message.includes('下载的文件为空') || \n        error.message.includes('验证PDF文件失败')\n      )) {\n      // 如果是这类错误，可能是浏览器已经开始下载，我们不显示错误\n      console.log('可能是浏览器已经接管了下载，不显示错误');\n      Toast.success('报告下载已开始，请等待浏览器完成下载');\n      return true;\n    }\n    \n    // 显示错误信息\n    Toast.fail(error.message || '下载失败，请稍后重试');\n    return false;\n  }\n};\n\n// 修改主下载函数，添加重试逻辑\nconst downloadPDF = async () => {\n  Toast.loading({\n    message: '正在生成并下载PDF报告...',\n    duration: 5000,\n    position: 'middle'\n  });\n  \n  if (!resultId) {\n    Toast.fail('缺少结果ID，无法生成报告');\n    return;\n  }\n  \n  // 最多尝试3次下载\n  let attempts = 0;\n  let success = false;\n  \n  while (attempts < 3 && !success) {\n    attempts++;\n    \n    if (attempts > 1) {\n      console.log(`尝试第${attempts}次下载...`);\n      Toast.loading({\n        message: `尝试第${attempts}次下载...`,\n        duration: 2000\n      });\n      // 在重试之前等待一段时间\n      await new Promise(resolve => setTimeout(resolve, 2000));\n    }\n    \n    // 使用流式下载模式，并处理返回值\n    success = await downloadPDFAsStream();\n    \n    // 如果流式下载成功，直接返回，不再尝试其他方法\n    if (success === true) {\n      return;\n    }\n  }\n  \n  // 如果多次尝试后仍然失败，提示用户\n  if (!success) {\n    Toast.clear();\n    Dialog.alert({\n      title: 'PDF下载失败',\n      message: '下载PDF报告失败，请稍后再试。如果问题持续存在，请联系客服。',\n    });\n  }\n};\n\n// 本地生成PDF的函数\nconst generatePDFLocally = async () => {\n  console.log('使用客户端jsPDF库生成PDF');\n  \n  // 获取内容元素\n  const element = document.querySelector('.result-container');\n  if (!element) {\n    throw new Error('找不到要转换的内容元素');\n  }\n  \n  Toast.loading({\n    message: '正在捕获页面内容...',\n    duration: 5000\n  });\n  \n  try {\n    // 使用html2canvas捕获内容\n    const canvas = await html2canvas(element, {\n      scale: 1,\n      useCORS: true,\n      logging: false,\n      windowWidth: document.documentElement.offsetWidth,\n      windowHeight: document.documentElement.offsetHeight,\n    });\n    \n    Toast.loading({\n      message: '正在生成PDF文件...',\n      duration: 5000\n    });\n        \n    // 创建PDF文档\n    const pdf = new jsPDF('p', 'mm', 'a4');\n        \n    // 计算尺寸和比例\n    const imgData = canvas.toDataURL('image/png');\n    const imgWidth = 210; // A4宽度，单位mm\n    const pageHeight = 297; // A4高度，单位mm\n    const imgHeight = canvas.height * imgWidth / canvas.width;\n    let heightLeft = imgHeight;\n    let position = 0;\n          \n    // 添加首页\n    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n    heightLeft -= pageHeight;\n    \n    // 如果内容超过一页，添加更多页\n    while (heightLeft > 0) {\n      position = heightLeft - imgHeight;\n      pdf.addPage();\n      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n    }\n    \n    // 添加页脚\n    const pageCount = pdf.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      pdf.setPage(i);\n      pdf.setFontSize(10);\n      pdf.setTextColor(150);\n      pdf.text(`八字命理AI分析报告 - 页 ${i} / ${pageCount}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });\n    }\n    \n    // 保存PDF\n    pdf.save(`八字命理分析_${resultId}.pdf`);\n    \n    return true;\n  } catch (error) {\n    console.error('本地PDF生成错误:', error);\n    throw error;\n  }\n};\n\nconst shareResult = () => {\n  Toast.success('分享功能开发中');\n};\n\n// 处理本地PDF生成\nconst handleLocalPDFGeneration = async () => {\n  try {\n    Toast.loading({\n      message: '正在本地生成PDF...',\n      duration: 0,\n      forbidClick: true\n    });\n    \n    await generatePDFLocally();\n    \n    Toast.clear();\n    Toast.success('本地PDF生成成功');\n  } catch (error) {\n    console.error('本地PDF生成失败:', error);\n    Toast.clear();\n    Toast.fail('本地PDF生成失败: ' + (error.message || '未知错误'));\n  }\n};\n\nconst reloadBaziData = async () => {\n  Toast.loading('正在重新加载数据...');\n  \n  try {\n    // 测试模拟支付接口以获取分析结果\n    if (!resultId) {\n      Toast.fail('缺少结果ID');\n      return;\n    }\n    \n    // 首先尝试使用模拟支付接口\n    try {\n      console.log('尝试使用模拟支付接口...');\n      \n      // 显示加载提示\n      Toast.loading({\n        message: '正在重新分析八字，请耐心等待30-60秒...',\n        duration: 10000,\n        position: 'middle'\n      });\n      \n      // 直接使用完整的resultId，不要去掉RES前缀\n      const mockPaymentResponse = await http.post(`/api/order/mock/pay/${resultId}`, {\n        birthDate: urlParams.get('birthDate') || '2023-06-06',\n        birthTime: urlParams.get('birthTime') || '辰时 (07:00-09:00)',\n        gender: urlParams.get('gender') || 'male'\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('模拟支付响应:', mockPaymentResponse.data);\n      \n      if (mockPaymentResponse.data.code === 200 && mockPaymentResponse.data.data.resultId) {\n        // 使用返回的resultId重新加载数据\n        const newResultId = mockPaymentResponse.data.data.resultId;\n        console.log('获取到新的resultId:', newResultId);\n        \n        const response = await http.get(`/api/bazi/result/${newResultId}`);\n        if (response.data.code === 200) {\n          baziData.value = response.data.data.baziChart;\n          aiAnalysis.value = response.data.data.aiAnalysis;\n          focusAreas.value = response.data.data.focusAreas;\n          Toast.success('数据加载成功');\n          return;\n        }\n      }\n    } catch (mockError) {\n      console.warn('模拟支付失败，尝试直接获取结果:', mockError);\n    }\n    \n    // 如果模拟支付失败，尝试直接获取结果\n    const response = await http.get(`/api/bazi/result/${resultId}`);\n    \n    if (response.data.code === 200) {\n      baziData.value = response.data.data.baziChart;\n      aiAnalysis.value = response.data.data.aiAnalysis;\n      focusAreas.value = response.data.data.focusAreas;\n      Toast.success('数据加载成功');\n    } else {\n      Toast.fail(response.data.message || '加载失败');\n    }\n  } catch (error) {\n    console.error('重新加载失败:', error);\n    Toast.fail('加载失败: ' + (error.message || '未知错误'));\n  }\n};\n</script>\n\n<style scoped>\n.result-container {\n  padding-bottom: 20px;\n}\n\n.result-header {\n  text-align: center;\n  padding: 20px 0;\n  background-color: #f2f3f5;\n}\n\n.result-header h2 {\n  margin: 0;\n  font-size: 20px;\n  color: #323233;\n}\n\n.result-header p {\n  margin: 10px 0 0;\n  font-size: 14px;\n  color: #969799;\n}\n\n.bazi-chart {\n  padding: 20px 16px;\n}\n\n.bazi-chart h3 {\n  margin: 20px 0 10px;\n  color: #323233;\n}\n\n.pillar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.stem {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #1989fa;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.branch {\n  width: 40px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: #07c160;\n  color: white;\n  border-radius: 4px;\n  margin-bottom: 5px;\n}\n\n.label {\n  font-size: 12px;\n  color: #646566;\n}\n\n.five-elements {\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0;\n}\n\n.element {\n  text-align: center;\n  flex: 1;\n}\n\n.element-name {\n  font-size: 14px;\n  color: #323233;\n}\n\n.element-value {\n  font-size: 18px;\n  font-weight: bold;\n  color: #1989fa;\n  margin-top: 5px;\n}\n\n.flowing-years {\n  margin: 20px 0;\n}\n\n.ai-analysis {\n  padding: 20px 16px;\n}\n\n.analysis-section {\n  margin-bottom: 20px;\n}\n\n.analysis-section h3 {\n  margin: 0 0 10px;\n  color: #323233;\n}\n\n.analysis-section p {\n  margin: 0;\n  font-size: 14px;\n  color: #646566;\n  line-height: 1.6;\n}\n\n.action-buttons {\n  padding: 20px 16px;\n}\n\n.age-notice {\n  margin-bottom: 20px;\n}\n\n.shen-sha-info {\n  margin-bottom: 20px;\n}\n\n.da-yun-info {\n  margin-bottom: 20px;\n}\n\n.qi-yun-info {\n  margin: 0 0 10px;\n  font-size: 14px;\n  color: #646566;\n}\n\n.da-yun-table {\n  margin-top: 10px;\n}\n\n.placeholder {\n  background-color: #f2f3f5;\n  color: #969799;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}